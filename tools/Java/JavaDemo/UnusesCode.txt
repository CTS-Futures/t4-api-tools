/* private void startHeartbeatMonitor(Session session) {
        //Needed once we start UI
            scheduler.scheduleAtFixedRate(() -> {
            long now = System.currentTimeMillis();
            if (now - lastMessageReceived > 30000) { // 30 seconds without heartbeat
               System.err.println(" No heartbeat received in 30s.");
               try {
                   session.close();
               } catch (IOException e) {
                   e.printStackTrace();
               }
               reconnect();
            }
         }, 10, 10, TimeUnit.SECONDS);
      } */




//this is used to decode the token trying to make the switch statement less complex 
       /* public void handleIncomingMessage(String jwtToken) 
       {
         Map<String, Object> claims = TestDecoder.decodeToken(jwtToken);

         if (claims.containsKey("error")) 
         {
            System.out.println("Error decoding token: " + claims.get("error"));
         } 
        else 
        {
            System.out.println("Decoded Username: " + claims.get("t4_Username"));
            System.out.println("Token Expires At: " + claims.get("exp"));
        }
      } */


 /* case AUTHENTICATION_TOKEN:
                  System.out.println("Made it to the token! ");
                  jwtToken = true;
                  Auth.AuthenticationToken tokenA = serverMessage.getAuthenticationToken();
                  Map<FieldDescriptor, Object> decodedJWT = tokenA.getAllFields();
                  System.out.println(tokenA.getExpireTime().getSeconds()/60);
                  System.out.println("Recieved Token: " + decodedJWT);
                  break; */