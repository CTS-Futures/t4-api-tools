// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: t4/v1/common/enums.proto

package t4proto.v1.common;

public final class Enums {
  private Enums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code t4proto.v1.common.LoginResult}
   */
  public enum LoginResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOGIN_RESULT_SUCCESS = 0;</code>
     */
    LOGIN_RESULT_SUCCESS(0),
    /**
     * <code>LOGIN_RESULT_FAILED = 1;</code>
     */
    LOGIN_RESULT_FAILED(1),
    /**
     * <code>LOGIN_RESULT_APPLICATION_NOT_VALID = 2;</code>
     */
    LOGIN_RESULT_APPLICATION_NOT_VALID(2),
    /**
     * <code>LOGIN_RESULT_FIRM_NOT_ALLOWED = 3;</code>
     */
    LOGIN_RESULT_FIRM_NOT_ALLOWED(3),
    /**
     * <code>LOGIN_RESULT_USER_NOT_ALLOWED = 4;</code>
     */
    LOGIN_RESULT_USER_NOT_ALLOWED(4),
    /**
     * <code>LOGIN_RESULT_INCORRECT_VERSION = 5;</code>
     */
    LOGIN_RESULT_INCORRECT_VERSION(5),
    /**
     * <code>LOGIN_RESULT_LOGGED_IN_ELSEWHERE = 6;</code>
     */
    LOGIN_RESULT_LOGGED_IN_ELSEWHERE(6),
    /**
     * <code>LOGIN_RESULT_LOGOUT = 7;</code>
     */
    LOGIN_RESULT_LOGOUT(7),
    /**
     * <code>LOGIN_RESULT_UNEXPECTED_DISCONNECT = 8;</code>
     */
    LOGIN_RESULT_UNEXPECTED_DISCONNECT(8),
    /**
     * <code>LOGIN_RESULT_UNAUTHORIZED = 9;</code>
     */
    LOGIN_RESULT_UNAUTHORIZED(9),
    /**
     * <code>LOGIN_RESULT_UNEXPECTED_ERROR = 10;</code>
     */
    LOGIN_RESULT_UNEXPECTED_ERROR(10),
    /**
     * <code>LOGIN_RESULT_ROLE_NOT_SUPPORTED = 11;</code>
     */
    LOGIN_RESULT_ROLE_NOT_SUPPORTED(11),
    /**
     * <code>LOGIN_RESULT_API_MESSAGE_BACKLOG = 12;</code>
     */
    LOGIN_RESULT_API_MESSAGE_BACKLOG(12),
    /**
     * <code>LOGIN_RESULT_SERVER_MESSAGE_BACKLOG = 13;</code>
     */
    LOGIN_RESULT_SERVER_MESSAGE_BACKLOG(13),
    /**
     * <code>LOGIN_RESULT_PASSWORD_EXPIRED = 14;</code>
     */
    LOGIN_RESULT_PASSWORD_EXPIRED(14),
    /**
     * <code>LOGIN_RESULT_PASSWORD_CHANGE_FAILED = 16;</code>
     */
    LOGIN_RESULT_PASSWORD_CHANGE_FAILED(16),
    /**
     * <code>LOGIN_RESULT_PASSWORD_ALREADY_USED = 17;</code>
     */
    LOGIN_RESULT_PASSWORD_ALREADY_USED(17),
    /**
     * <code>LOGIN_RESULT_LOCKED_OUT = 18;</code>
     */
    LOGIN_RESULT_LOCKED_OUT(18),
    /**
     * <code>LOGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED = 19;</code>
     */
    LOGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED(19),
    /**
     * <code>LOGIN_RESULT_MARKET_DATA_NOT_SETUP = 20;</code>
     */
    LOGIN_RESULT_MARKET_DATA_NOT_SETUP(20),
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_NOT_SETUP = 21;</code>
     */
    LOGIN_RESULT_TWO_FACTOR_NOT_SETUP(21),
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_FAILED = 22;</code>
     */
    LOGIN_RESULT_TWO_FACTOR_FAILED(22),
    /**
     * <code>LOGIN_RESULT_FIX_SESSION_ERROR = 23;</code>
     */
    LOGIN_RESULT_FIX_SESSION_ERROR(23),
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_REQUIRED = 24;</code>
     */
    LOGIN_RESULT_TWO_FACTOR_REQUIRED(24),
    /**
     * <code>LOGIN_RESULT_USER_EXISTS = 25;</code>
     */
    LOGIN_RESULT_USER_EXISTS(25),
    /**
     * <code>LOGIN_RESULT_UNKNOWN = -1;</code>
     */
    LOGIN_RESULT_UNKNOWN(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOGIN_RESULT_SUCCESS = 0;</code>
     */
    public static final int LOGIN_RESULT_SUCCESS_VALUE = 0;
    /**
     * <code>LOGIN_RESULT_FAILED = 1;</code>
     */
    public static final int LOGIN_RESULT_FAILED_VALUE = 1;
    /**
     * <code>LOGIN_RESULT_APPLICATION_NOT_VALID = 2;</code>
     */
    public static final int LOGIN_RESULT_APPLICATION_NOT_VALID_VALUE = 2;
    /**
     * <code>LOGIN_RESULT_FIRM_NOT_ALLOWED = 3;</code>
     */
    public static final int LOGIN_RESULT_FIRM_NOT_ALLOWED_VALUE = 3;
    /**
     * <code>LOGIN_RESULT_USER_NOT_ALLOWED = 4;</code>
     */
    public static final int LOGIN_RESULT_USER_NOT_ALLOWED_VALUE = 4;
    /**
     * <code>LOGIN_RESULT_INCORRECT_VERSION = 5;</code>
     */
    public static final int LOGIN_RESULT_INCORRECT_VERSION_VALUE = 5;
    /**
     * <code>LOGIN_RESULT_LOGGED_IN_ELSEWHERE = 6;</code>
     */
    public static final int LOGIN_RESULT_LOGGED_IN_ELSEWHERE_VALUE = 6;
    /**
     * <code>LOGIN_RESULT_LOGOUT = 7;</code>
     */
    public static final int LOGIN_RESULT_LOGOUT_VALUE = 7;
    /**
     * <code>LOGIN_RESULT_UNEXPECTED_DISCONNECT = 8;</code>
     */
    public static final int LOGIN_RESULT_UNEXPECTED_DISCONNECT_VALUE = 8;
    /**
     * <code>LOGIN_RESULT_UNAUTHORIZED = 9;</code>
     */
    public static final int LOGIN_RESULT_UNAUTHORIZED_VALUE = 9;
    /**
     * <code>LOGIN_RESULT_UNEXPECTED_ERROR = 10;</code>
     */
    public static final int LOGIN_RESULT_UNEXPECTED_ERROR_VALUE = 10;
    /**
     * <code>LOGIN_RESULT_ROLE_NOT_SUPPORTED = 11;</code>
     */
    public static final int LOGIN_RESULT_ROLE_NOT_SUPPORTED_VALUE = 11;
    /**
     * <code>LOGIN_RESULT_API_MESSAGE_BACKLOG = 12;</code>
     */
    public static final int LOGIN_RESULT_API_MESSAGE_BACKLOG_VALUE = 12;
    /**
     * <code>LOGIN_RESULT_SERVER_MESSAGE_BACKLOG = 13;</code>
     */
    public static final int LOGIN_RESULT_SERVER_MESSAGE_BACKLOG_VALUE = 13;
    /**
     * <code>LOGIN_RESULT_PASSWORD_EXPIRED = 14;</code>
     */
    public static final int LOGIN_RESULT_PASSWORD_EXPIRED_VALUE = 14;
    /**
     * <code>LOGIN_RESULT_PASSWORD_CHANGE_FAILED = 16;</code>
     */
    public static final int LOGIN_RESULT_PASSWORD_CHANGE_FAILED_VALUE = 16;
    /**
     * <code>LOGIN_RESULT_PASSWORD_ALREADY_USED = 17;</code>
     */
    public static final int LOGIN_RESULT_PASSWORD_ALREADY_USED_VALUE = 17;
    /**
     * <code>LOGIN_RESULT_LOCKED_OUT = 18;</code>
     */
    public static final int LOGIN_RESULT_LOCKED_OUT_VALUE = 18;
    /**
     * <code>LOGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED = 19;</code>
     */
    public static final int LOGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED_VALUE = 19;
    /**
     * <code>LOGIN_RESULT_MARKET_DATA_NOT_SETUP = 20;</code>
     */
    public static final int LOGIN_RESULT_MARKET_DATA_NOT_SETUP_VALUE = 20;
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_NOT_SETUP = 21;</code>
     */
    public static final int LOGIN_RESULT_TWO_FACTOR_NOT_SETUP_VALUE = 21;
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_FAILED = 22;</code>
     */
    public static final int LOGIN_RESULT_TWO_FACTOR_FAILED_VALUE = 22;
    /**
     * <code>LOGIN_RESULT_FIX_SESSION_ERROR = 23;</code>
     */
    public static final int LOGIN_RESULT_FIX_SESSION_ERROR_VALUE = 23;
    /**
     * <code>LOGIN_RESULT_TWO_FACTOR_REQUIRED = 24;</code>
     */
    public static final int LOGIN_RESULT_TWO_FACTOR_REQUIRED_VALUE = 24;
    /**
     * <code>LOGIN_RESULT_USER_EXISTS = 25;</code>
     */
    public static final int LOGIN_RESULT_USER_EXISTS_VALUE = 25;
    /**
     * <code>LOGIN_RESULT_UNKNOWN = -1;</code>
     */
    public static final int LOGIN_RESULT_UNKNOWN_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoginResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LoginResult forNumber(int value) {
      switch (value) {
        case 0: return LOGIN_RESULT_SUCCESS;
        case 1: return LOGIN_RESULT_FAILED;
        case 2: return LOGIN_RESULT_APPLICATION_NOT_VALID;
        case 3: return LOGIN_RESULT_FIRM_NOT_ALLOWED;
        case 4: return LOGIN_RESULT_USER_NOT_ALLOWED;
        case 5: return LOGIN_RESULT_INCORRECT_VERSION;
        case 6: return LOGIN_RESULT_LOGGED_IN_ELSEWHERE;
        case 7: return LOGIN_RESULT_LOGOUT;
        case 8: return LOGIN_RESULT_UNEXPECTED_DISCONNECT;
        case 9: return LOGIN_RESULT_UNAUTHORIZED;
        case 10: return LOGIN_RESULT_UNEXPECTED_ERROR;
        case 11: return LOGIN_RESULT_ROLE_NOT_SUPPORTED;
        case 12: return LOGIN_RESULT_API_MESSAGE_BACKLOG;
        case 13: return LOGIN_RESULT_SERVER_MESSAGE_BACKLOG;
        case 14: return LOGIN_RESULT_PASSWORD_EXPIRED;
        case 16: return LOGIN_RESULT_PASSWORD_CHANGE_FAILED;
        case 17: return LOGIN_RESULT_PASSWORD_ALREADY_USED;
        case 18: return LOGIN_RESULT_LOCKED_OUT;
        case 19: return LOGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED;
        case 20: return LOGIN_RESULT_MARKET_DATA_NOT_SETUP;
        case 21: return LOGIN_RESULT_TWO_FACTOR_NOT_SETUP;
        case 22: return LOGIN_RESULT_TWO_FACTOR_FAILED;
        case 23: return LOGIN_RESULT_FIX_SESSION_ERROR;
        case 24: return LOGIN_RESULT_TWO_FACTOR_REQUIRED;
        case 25: return LOGIN_RESULT_USER_EXISTS;
        case -1: return LOGIN_RESULT_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoginResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoginResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoginResult>() {
            public LoginResult findValueByNumber(int number) {
              return LoginResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(0);
    }

    private static final LoginResult[] VALUES = values();

    public static LoginResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LoginResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.LoginResult)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.PriceFormat}
   */
  public enum PriceFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRICE_FORMAT_DECIMAL = 0;</code>
     */
    PRICE_FORMAT_DECIMAL(0),
    /**
     * <code>PRICE_FORMAT_REAL = 1;</code>
     */
    PRICE_FORMAT_REAL(1),
    /**
     * <code>PRICE_FORMAT_CLEARING_DECIMAL = 2;</code>
     */
    PRICE_FORMAT_CLEARING_DECIMAL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PRICE_FORMAT_DECIMAL = 0;</code>
     */
    public static final int PRICE_FORMAT_DECIMAL_VALUE = 0;
    /**
     * <code>PRICE_FORMAT_REAL = 1;</code>
     */
    public static final int PRICE_FORMAT_REAL_VALUE = 1;
    /**
     * <code>PRICE_FORMAT_CLEARING_DECIMAL = 2;</code>
     */
    public static final int PRICE_FORMAT_CLEARING_DECIMAL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceFormat valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PriceFormat forNumber(int value) {
      switch (value) {
        case 0: return PRICE_FORMAT_DECIMAL;
        case 1: return PRICE_FORMAT_REAL;
        case 2: return PRICE_FORMAT_CLEARING_DECIMAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceFormat> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceFormat>() {
            public PriceFormat findValueByNumber(int number) {
              return PriceFormat.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(1);
    }

    private static final PriceFormat[] VALUES = values();

    public static PriceFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceFormat(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.PriceFormat)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountMode}
   */
  public enum AccountMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_MODE_BY_MARKET = 0;</code>
     */
    ACCOUNT_MODE_BY_MARKET(0),
    /**
     * <code>ACCOUNT_MODE_BY_CONTRACT = 1;</code>
     */
    ACCOUNT_MODE_BY_CONTRACT(1),
    /**
     * <code>ACCOUNT_MODE_BY_ACCOUNT = 2;</code>
     */
    ACCOUNT_MODE_BY_ACCOUNT(2),
    /**
     * <code>ACCOUNT_MODE_BY_ACCOUNT_DAY = 3;</code>
     */
    ACCOUNT_MODE_BY_ACCOUNT_DAY(3),
    /**
     * <code>ACCOUNT_MODE_BY_PORTFOLIO = 4;</code>
     */
    ACCOUNT_MODE_BY_PORTFOLIO(4),
    /**
     * <code>ACCOUNT_MODE_T500 = 5;</code>
     */
    ACCOUNT_MODE_T500(5),
    /**
     * <code>ACCOUNT_MODE_T500_DEMO = 6;</code>
     */
    ACCOUNT_MODE_T500_DEMO(6),
    /**
     * <code>ACCOUNT_MODE_AUTO_LIQ = 7;</code>
     */
    ACCOUNT_MODE_AUTO_LIQ(7),
    /**
     * <code>ACCOUNT_MODE_UNKNOWN = -1;</code>
     */
    ACCOUNT_MODE_UNKNOWN(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_MODE_BY_MARKET = 0;</code>
     */
    public static final int ACCOUNT_MODE_BY_MARKET_VALUE = 0;
    /**
     * <code>ACCOUNT_MODE_BY_CONTRACT = 1;</code>
     */
    public static final int ACCOUNT_MODE_BY_CONTRACT_VALUE = 1;
    /**
     * <code>ACCOUNT_MODE_BY_ACCOUNT = 2;</code>
     */
    public static final int ACCOUNT_MODE_BY_ACCOUNT_VALUE = 2;
    /**
     * <code>ACCOUNT_MODE_BY_ACCOUNT_DAY = 3;</code>
     */
    public static final int ACCOUNT_MODE_BY_ACCOUNT_DAY_VALUE = 3;
    /**
     * <code>ACCOUNT_MODE_BY_PORTFOLIO = 4;</code>
     */
    public static final int ACCOUNT_MODE_BY_PORTFOLIO_VALUE = 4;
    /**
     * <code>ACCOUNT_MODE_T500 = 5;</code>
     */
    public static final int ACCOUNT_MODE_T500_VALUE = 5;
    /**
     * <code>ACCOUNT_MODE_T500_DEMO = 6;</code>
     */
    public static final int ACCOUNT_MODE_T500_DEMO_VALUE = 6;
    /**
     * <code>ACCOUNT_MODE_AUTO_LIQ = 7;</code>
     */
    public static final int ACCOUNT_MODE_AUTO_LIQ_VALUE = 7;
    /**
     * <code>ACCOUNT_MODE_UNKNOWN = -1;</code>
     */
    public static final int ACCOUNT_MODE_UNKNOWN_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountMode forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_MODE_BY_MARKET;
        case 1: return ACCOUNT_MODE_BY_CONTRACT;
        case 2: return ACCOUNT_MODE_BY_ACCOUNT;
        case 3: return ACCOUNT_MODE_BY_ACCOUNT_DAY;
        case 4: return ACCOUNT_MODE_BY_PORTFOLIO;
        case 5: return ACCOUNT_MODE_T500;
        case 6: return ACCOUNT_MODE_T500_DEMO;
        case 7: return ACCOUNT_MODE_AUTO_LIQ;
        case -1: return ACCOUNT_MODE_UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountMode>() {
            public AccountMode findValueByNumber(int number) {
              return AccountMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(2);
    }

    private static final AccountMode[] VALUES = values();

    public static AccountMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountMode)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.MarketMode}
   */
  public enum MarketMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MARKET_MODE_UNDEFINED = 0;</code>
     */
    MARKET_MODE_UNDEFINED(0),
    /**
     * <code>MARKET_MODE_PRE_OPEN = 1;</code>
     */
    MARKET_MODE_PRE_OPEN(1),
    /**
     * <code>MARKET_MODE_OPEN = 2;</code>
     */
    MARKET_MODE_OPEN(2),
    /**
     * <code>MARKET_MODE_RESTRICTED_OPEN = 3;</code>
     */
    MARKET_MODE_RESTRICTED_OPEN(3),
    /**
     * <code>MARKET_MODE_PRE_CLOSED = 4;</code>
     */
    MARKET_MODE_PRE_CLOSED(4),
    /**
     * <code>MARKET_MODE_CLOSED = 5;</code>
     */
    MARKET_MODE_CLOSED(5),
    /**
     * <code>MARKET_MODE_SUSPENDED = 6;</code>
     */
    MARKET_MODE_SUSPENDED(6),
    /**
     * <code>MARKET_MODE_HALTED = 7;</code>
     */
    MARKET_MODE_HALTED(7),
    /**
     * <code>MARKET_MODE_FAILED = 8;</code>
     */
    MARKET_MODE_FAILED(8),
    /**
     * <code>MARKET_MODE_PRE_CROSS = 9;</code>
     */
    MARKET_MODE_PRE_CROSS(9),
    /**
     * <code>MARKET_MODE_CROSS = 10;</code>
     */
    MARKET_MODE_CROSS(10),
    /**
     * <code>MARKET_MODE_EXPIRED = 11;</code>
     */
    MARKET_MODE_EXPIRED(11),
    /**
     * <code>MARKET_MODE_REJECTED = 12;</code>
     */
    MARKET_MODE_REJECTED(12),
    /**
     * <code>MARKET_MODE_UNAVAILABLE = 13;</code>
     */
    MARKET_MODE_UNAVAILABLE(13),
    /**
     * <code>MARKET_MODE_NO_PERMISSION = 14;</code>
     */
    MARKET_MODE_NO_PERMISSION(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MARKET_MODE_UNDEFINED = 0;</code>
     */
    public static final int MARKET_MODE_UNDEFINED_VALUE = 0;
    /**
     * <code>MARKET_MODE_PRE_OPEN = 1;</code>
     */
    public static final int MARKET_MODE_PRE_OPEN_VALUE = 1;
    /**
     * <code>MARKET_MODE_OPEN = 2;</code>
     */
    public static final int MARKET_MODE_OPEN_VALUE = 2;
    /**
     * <code>MARKET_MODE_RESTRICTED_OPEN = 3;</code>
     */
    public static final int MARKET_MODE_RESTRICTED_OPEN_VALUE = 3;
    /**
     * <code>MARKET_MODE_PRE_CLOSED = 4;</code>
     */
    public static final int MARKET_MODE_PRE_CLOSED_VALUE = 4;
    /**
     * <code>MARKET_MODE_CLOSED = 5;</code>
     */
    public static final int MARKET_MODE_CLOSED_VALUE = 5;
    /**
     * <code>MARKET_MODE_SUSPENDED = 6;</code>
     */
    public static final int MARKET_MODE_SUSPENDED_VALUE = 6;
    /**
     * <code>MARKET_MODE_HALTED = 7;</code>
     */
    public static final int MARKET_MODE_HALTED_VALUE = 7;
    /**
     * <code>MARKET_MODE_FAILED = 8;</code>
     */
    public static final int MARKET_MODE_FAILED_VALUE = 8;
    /**
     * <code>MARKET_MODE_PRE_CROSS = 9;</code>
     */
    public static final int MARKET_MODE_PRE_CROSS_VALUE = 9;
    /**
     * <code>MARKET_MODE_CROSS = 10;</code>
     */
    public static final int MARKET_MODE_CROSS_VALUE = 10;
    /**
     * <code>MARKET_MODE_EXPIRED = 11;</code>
     */
    public static final int MARKET_MODE_EXPIRED_VALUE = 11;
    /**
     * <code>MARKET_MODE_REJECTED = 12;</code>
     */
    public static final int MARKET_MODE_REJECTED_VALUE = 12;
    /**
     * <code>MARKET_MODE_UNAVAILABLE = 13;</code>
     */
    public static final int MARKET_MODE_UNAVAILABLE_VALUE = 13;
    /**
     * <code>MARKET_MODE_NO_PERMISSION = 14;</code>
     */
    public static final int MARKET_MODE_NO_PERMISSION_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MarketMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MarketMode forNumber(int value) {
      switch (value) {
        case 0: return MARKET_MODE_UNDEFINED;
        case 1: return MARKET_MODE_PRE_OPEN;
        case 2: return MARKET_MODE_OPEN;
        case 3: return MARKET_MODE_RESTRICTED_OPEN;
        case 4: return MARKET_MODE_PRE_CLOSED;
        case 5: return MARKET_MODE_CLOSED;
        case 6: return MARKET_MODE_SUSPENDED;
        case 7: return MARKET_MODE_HALTED;
        case 8: return MARKET_MODE_FAILED;
        case 9: return MARKET_MODE_PRE_CROSS;
        case 10: return MARKET_MODE_CROSS;
        case 11: return MARKET_MODE_EXPIRED;
        case 12: return MARKET_MODE_REJECTED;
        case 13: return MARKET_MODE_UNAVAILABLE;
        case 14: return MARKET_MODE_NO_PERMISSION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MarketMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketMode>() {
            public MarketMode findValueByNumber(int number) {
              return MarketMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(3);
    }

    private static final MarketMode[] VALUES = values();

    public static MarketMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MarketMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.MarketMode)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.DepthBuffer}
   */
  public enum DepthBuffer
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPTH_BUFFER_NO_SUBSCRIPTION = 0;</code>
     */
    DEPTH_BUFFER_NO_SUBSCRIPTION(0),
    /**
     * <code>DEPTH_BUFFER_SLOW_TRADE = 1;</code>
     */
    DEPTH_BUFFER_SLOW_TRADE(1),
    /**
     * <code>DEPTH_BUFFER_SMART_TRADE = 2;</code>
     */
    DEPTH_BUFFER_SMART_TRADE(2),
    /**
     * <code>DEPTH_BUFFER_SLOW_SMART = 3;</code>
     */
    DEPTH_BUFFER_SLOW_SMART(3),
    /**
     * <code>DEPTH_BUFFER_SMART = 4;</code>
     */
    DEPTH_BUFFER_SMART(4),
    /**
     * <code>DEPTH_BUFFER_FAST_SMART = 5;</code>
     */
    DEPTH_BUFFER_FAST_SMART(5),
    /**
     * <code>DEPTH_BUFFER_ALL = 6;</code>
     */
    DEPTH_BUFFER_ALL(6),
    /**
     * <code>DEPTH_BUFFER_FAST_TRADE = 7;</code>
     */
    DEPTH_BUFFER_FAST_TRADE(7),
    /**
     * <code>DEPTH_BUFFER_TRADE_ONLY = 8;</code>
     */
    DEPTH_BUFFER_TRADE_ONLY(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEPTH_BUFFER_NO_SUBSCRIPTION = 0;</code>
     */
    public static final int DEPTH_BUFFER_NO_SUBSCRIPTION_VALUE = 0;
    /**
     * <code>DEPTH_BUFFER_SLOW_TRADE = 1;</code>
     */
    public static final int DEPTH_BUFFER_SLOW_TRADE_VALUE = 1;
    /**
     * <code>DEPTH_BUFFER_SMART_TRADE = 2;</code>
     */
    public static final int DEPTH_BUFFER_SMART_TRADE_VALUE = 2;
    /**
     * <code>DEPTH_BUFFER_SLOW_SMART = 3;</code>
     */
    public static final int DEPTH_BUFFER_SLOW_SMART_VALUE = 3;
    /**
     * <code>DEPTH_BUFFER_SMART = 4;</code>
     */
    public static final int DEPTH_BUFFER_SMART_VALUE = 4;
    /**
     * <code>DEPTH_BUFFER_FAST_SMART = 5;</code>
     */
    public static final int DEPTH_BUFFER_FAST_SMART_VALUE = 5;
    /**
     * <code>DEPTH_BUFFER_ALL = 6;</code>
     */
    public static final int DEPTH_BUFFER_ALL_VALUE = 6;
    /**
     * <code>DEPTH_BUFFER_FAST_TRADE = 7;</code>
     */
    public static final int DEPTH_BUFFER_FAST_TRADE_VALUE = 7;
    /**
     * <code>DEPTH_BUFFER_TRADE_ONLY = 8;</code>
     */
    public static final int DEPTH_BUFFER_TRADE_ONLY_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DepthBuffer valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DepthBuffer forNumber(int value) {
      switch (value) {
        case 0: return DEPTH_BUFFER_NO_SUBSCRIPTION;
        case 1: return DEPTH_BUFFER_SLOW_TRADE;
        case 2: return DEPTH_BUFFER_SMART_TRADE;
        case 3: return DEPTH_BUFFER_SLOW_SMART;
        case 4: return DEPTH_BUFFER_SMART;
        case 5: return DEPTH_BUFFER_FAST_SMART;
        case 6: return DEPTH_BUFFER_ALL;
        case 7: return DEPTH_BUFFER_FAST_TRADE;
        case 8: return DEPTH_BUFFER_TRADE_ONLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DepthBuffer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DepthBuffer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DepthBuffer>() {
            public DepthBuffer findValueByNumber(int number) {
              return DepthBuffer.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(4);
    }

    private static final DepthBuffer[] VALUES = values();

    public static DepthBuffer valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DepthBuffer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.DepthBuffer)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.DepthLevels}
   */
  public enum DepthLevels
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPTH_LEVELS_UNDEFINED = 0;</code>
     */
    DEPTH_LEVELS_UNDEFINED(0),
    /**
     * <code>DEPTH_LEVELS_BEST_ONLY = 1;</code>
     */
    DEPTH_LEVELS_BEST_ONLY(1),
    /**
     * <code>DEPTH_LEVELS_NORMAL = 10;</code>
     */
    DEPTH_LEVELS_NORMAL(10),
    /**
     * <code>DEPTH_LEVELS_ALL = 255;</code>
     */
    DEPTH_LEVELS_ALL(255),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEPTH_LEVELS_UNDEFINED = 0;</code>
     */
    public static final int DEPTH_LEVELS_UNDEFINED_VALUE = 0;
    /**
     * <code>DEPTH_LEVELS_BEST_ONLY = 1;</code>
     */
    public static final int DEPTH_LEVELS_BEST_ONLY_VALUE = 1;
    /**
     * <code>DEPTH_LEVELS_NORMAL = 10;</code>
     */
    public static final int DEPTH_LEVELS_NORMAL_VALUE = 10;
    /**
     * <code>DEPTH_LEVELS_ALL = 255;</code>
     */
    public static final int DEPTH_LEVELS_ALL_VALUE = 255;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DepthLevels valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DepthLevels forNumber(int value) {
      switch (value) {
        case 0: return DEPTH_LEVELS_UNDEFINED;
        case 1: return DEPTH_LEVELS_BEST_ONLY;
        case 10: return DEPTH_LEVELS_NORMAL;
        case 255: return DEPTH_LEVELS_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DepthLevels>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DepthLevels> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DepthLevels>() {
            public DepthLevels findValueByNumber(int number) {
              return DepthLevels.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(5);
    }

    private static final DepthLevels[] VALUES = values();

    public static DepthLevels valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DepthLevels(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.DepthLevels)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.BidOffer}
   */
  public enum BidOffer
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BID_OFFER_UNDEFINED = 0;</code>
     */
    BID_OFFER_UNDEFINED(0),
    /**
     * <code>BID_OFFER_BID = 1;</code>
     */
    BID_OFFER_BID(1),
    /**
     * <code>BID_OFFER_OFFER = -1;</code>
     */
    BID_OFFER_OFFER(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BID_OFFER_UNDEFINED = 0;</code>
     */
    public static final int BID_OFFER_UNDEFINED_VALUE = 0;
    /**
     * <code>BID_OFFER_BID = 1;</code>
     */
    public static final int BID_OFFER_BID_VALUE = 1;
    /**
     * <code>BID_OFFER_OFFER = -1;</code>
     */
    public static final int BID_OFFER_OFFER_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BidOffer valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BidOffer forNumber(int value) {
      switch (value) {
        case 0: return BID_OFFER_UNDEFINED;
        case 1: return BID_OFFER_BID;
        case -1: return BID_OFFER_OFFER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BidOffer>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BidOffer> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BidOffer>() {
            public BidOffer findValueByNumber(int number) {
              return BidOffer.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(6);
    }

    private static final BidOffer[] VALUES = values();

    public static BidOffer valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BidOffer(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.BidOffer)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.MarketFlags2}
   */
  public enum MarketFlags2
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MARKET_FLAGS2_UNDEFINED = 0;</code>
     */
    MARKET_FLAGS2_UNDEFINED(0),
    /**
     * <code>MARKET_FLAGS2_FAST = 1;</code>
     */
    MARKET_FLAGS2_FAST(1),
    /**
     * <code>MARKET_FLAGS2_PRICE_LIMITS_ENABLED = 2;</code>
     */
    MARKET_FLAGS2_PRICE_LIMITS_ENABLED(2),
    /**
     * <code>MARKET_FLAGS2_NO_CANCEL = 4;</code>
     */
    MARKET_FLAGS2_NO_CANCEL(4),
    /**
     * <code>MARKET_FLAGS2_IMPLIED_OFF = 8;</code>
     */
    MARKET_FLAGS2_IMPLIED_OFF(8),
    /**
     * <code>MARKET_FLAGS2_NEW_PRICE_INDICATION = 16;</code>
     */
    MARKET_FLAGS2_NEW_PRICE_INDICATION(16),
    /**
     * <code>MARKET_FLAGS2_NOT_AVAILABLE_FOR_TRADING = 32;</code>
     */
    MARKET_FLAGS2_NOT_AVAILABLE_FOR_TRADING(32),
    /**
     * <code>MARKET_FLAGS2_POST_CLOSE = 64;</code>
     */
    MARKET_FLAGS2_POST_CLOSE(64),
    /**
     * <code>MARKET_FLAGS2_GROUP_SCHEDULE = 128;</code>
     */
    MARKET_FLAGS2_GROUP_SCHEDULE(128),
    /**
     * <code>MARKET_FLAGS2_INSTRUMENT_ACTIVATION = 256;</code>
     */
    MARKET_FLAGS2_INSTRUMENT_ACTIVATION(256),
    /**
     * <code>MARKET_FLAGS2_INSTRUMENT_EXPIRATION = 512;</code>
     */
    MARKET_FLAGS2_INSTRUMENT_EXPIRATION(512),
    /**
     * <code>MARKET_FLAGS2_MARKET_EVENT = 1024;</code>
     */
    MARKET_FLAGS2_MARKET_EVENT(1024),
    /**
     * <code>MARKET_FLAGS2_RECOVERY_IN_PROCESS = 2048;</code>
     */
    MARKET_FLAGS2_RECOVERY_IN_PROCESS(2048),
    /**
     * <code>MARKET_FLAGS2_SURVEILLANCE_INTERVENTION = 4096;</code>
     */
    MARKET_FLAGS2_SURVEILLANCE_INTERVENTION(4096),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MARKET_FLAGS2_UNDEFINED = 0;</code>
     */
    public static final int MARKET_FLAGS2_UNDEFINED_VALUE = 0;
    /**
     * <code>MARKET_FLAGS2_FAST = 1;</code>
     */
    public static final int MARKET_FLAGS2_FAST_VALUE = 1;
    /**
     * <code>MARKET_FLAGS2_PRICE_LIMITS_ENABLED = 2;</code>
     */
    public static final int MARKET_FLAGS2_PRICE_LIMITS_ENABLED_VALUE = 2;
    /**
     * <code>MARKET_FLAGS2_NO_CANCEL = 4;</code>
     */
    public static final int MARKET_FLAGS2_NO_CANCEL_VALUE = 4;
    /**
     * <code>MARKET_FLAGS2_IMPLIED_OFF = 8;</code>
     */
    public static final int MARKET_FLAGS2_IMPLIED_OFF_VALUE = 8;
    /**
     * <code>MARKET_FLAGS2_NEW_PRICE_INDICATION = 16;</code>
     */
    public static final int MARKET_FLAGS2_NEW_PRICE_INDICATION_VALUE = 16;
    /**
     * <code>MARKET_FLAGS2_NOT_AVAILABLE_FOR_TRADING = 32;</code>
     */
    public static final int MARKET_FLAGS2_NOT_AVAILABLE_FOR_TRADING_VALUE = 32;
    /**
     * <code>MARKET_FLAGS2_POST_CLOSE = 64;</code>
     */
    public static final int MARKET_FLAGS2_POST_CLOSE_VALUE = 64;
    /**
     * <code>MARKET_FLAGS2_GROUP_SCHEDULE = 128;</code>
     */
    public static final int MARKET_FLAGS2_GROUP_SCHEDULE_VALUE = 128;
    /**
     * <code>MARKET_FLAGS2_INSTRUMENT_ACTIVATION = 256;</code>
     */
    public static final int MARKET_FLAGS2_INSTRUMENT_ACTIVATION_VALUE = 256;
    /**
     * <code>MARKET_FLAGS2_INSTRUMENT_EXPIRATION = 512;</code>
     */
    public static final int MARKET_FLAGS2_INSTRUMENT_EXPIRATION_VALUE = 512;
    /**
     * <code>MARKET_FLAGS2_MARKET_EVENT = 1024;</code>
     */
    public static final int MARKET_FLAGS2_MARKET_EVENT_VALUE = 1024;
    /**
     * <code>MARKET_FLAGS2_RECOVERY_IN_PROCESS = 2048;</code>
     */
    public static final int MARKET_FLAGS2_RECOVERY_IN_PROCESS_VALUE = 2048;
    /**
     * <code>MARKET_FLAGS2_SURVEILLANCE_INTERVENTION = 4096;</code>
     */
    public static final int MARKET_FLAGS2_SURVEILLANCE_INTERVENTION_VALUE = 4096;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MarketFlags2 valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MarketFlags2 forNumber(int value) {
      switch (value) {
        case 0: return MARKET_FLAGS2_UNDEFINED;
        case 1: return MARKET_FLAGS2_FAST;
        case 2: return MARKET_FLAGS2_PRICE_LIMITS_ENABLED;
        case 4: return MARKET_FLAGS2_NO_CANCEL;
        case 8: return MARKET_FLAGS2_IMPLIED_OFF;
        case 16: return MARKET_FLAGS2_NEW_PRICE_INDICATION;
        case 32: return MARKET_FLAGS2_NOT_AVAILABLE_FOR_TRADING;
        case 64: return MARKET_FLAGS2_POST_CLOSE;
        case 128: return MARKET_FLAGS2_GROUP_SCHEDULE;
        case 256: return MARKET_FLAGS2_INSTRUMENT_ACTIVATION;
        case 512: return MARKET_FLAGS2_INSTRUMENT_EXPIRATION;
        case 1024: return MARKET_FLAGS2_MARKET_EVENT;
        case 2048: return MARKET_FLAGS2_RECOVERY_IN_PROCESS;
        case 4096: return MARKET_FLAGS2_SURVEILLANCE_INTERVENTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketFlags2>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MarketFlags2> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketFlags2>() {
            public MarketFlags2 findValueByNumber(int number) {
              return MarketFlags2.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(7);
    }

    private static final MarketFlags2[] VALUES = values();

    public static MarketFlags2 valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MarketFlags2(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.MarketFlags2)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ContractType}
   */
  public enum ContractType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTRACT_TYPE_UNKNOWN = 0;</code>
     */
    CONTRACT_TYPE_UNKNOWN(0),
    /**
     * <code>CONTRACT_TYPE_OPTION = 1;</code>
     */
    CONTRACT_TYPE_OPTION(1),
    /**
     * <code>CONTRACT_TYPE_OPTION_CALL = 2;</code>
     */
    CONTRACT_TYPE_OPTION_CALL(2),
    /**
     * <code>CONTRACT_TYPE_OPTION_PUT = 3;</code>
     */
    CONTRACT_TYPE_OPTION_PUT(3),
    /**
     * <code>CONTRACT_TYPE_STOCK = 4;</code>
     */
    CONTRACT_TYPE_STOCK(4),
    /**
     * <code>CONTRACT_TYPE_FUTURE = 5;</code>
     */
    CONTRACT_TYPE_FUTURE(5),
    /**
     * <code>CONTRACT_TYPE_INDEX = 6;</code>
     */
    CONTRACT_TYPE_INDEX(6),
    /**
     * <code>CONTRACT_TYPE_SYNTHETIC = 7;</code>
     */
    CONTRACT_TYPE_SYNTHETIC(7),
    /**
     * <code>CONTRACT_TYPE_BINARY_OPTION = 8;</code>
     */
    CONTRACT_TYPE_BINARY_OPTION(8),
    /**
     * <code>CONTRACT_TYPE_UDS = 9;</code>
     */
    CONTRACT_TYPE_UDS(9),
    /**
     * <code>CONTRACT_TYPE_FX_SPOT = 10;</code>
     */
    CONTRACT_TYPE_FX_SPOT(10),
    /**
     * <code>CONTRACT_TYPE_ANY = -1;</code>
     */
    CONTRACT_TYPE_ANY(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CONTRACT_TYPE_UNKNOWN = 0;</code>
     */
    public static final int CONTRACT_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <code>CONTRACT_TYPE_OPTION = 1;</code>
     */
    public static final int CONTRACT_TYPE_OPTION_VALUE = 1;
    /**
     * <code>CONTRACT_TYPE_OPTION_CALL = 2;</code>
     */
    public static final int CONTRACT_TYPE_OPTION_CALL_VALUE = 2;
    /**
     * <code>CONTRACT_TYPE_OPTION_PUT = 3;</code>
     */
    public static final int CONTRACT_TYPE_OPTION_PUT_VALUE = 3;
    /**
     * <code>CONTRACT_TYPE_STOCK = 4;</code>
     */
    public static final int CONTRACT_TYPE_STOCK_VALUE = 4;
    /**
     * <code>CONTRACT_TYPE_FUTURE = 5;</code>
     */
    public static final int CONTRACT_TYPE_FUTURE_VALUE = 5;
    /**
     * <code>CONTRACT_TYPE_INDEX = 6;</code>
     */
    public static final int CONTRACT_TYPE_INDEX_VALUE = 6;
    /**
     * <code>CONTRACT_TYPE_SYNTHETIC = 7;</code>
     */
    public static final int CONTRACT_TYPE_SYNTHETIC_VALUE = 7;
    /**
     * <code>CONTRACT_TYPE_BINARY_OPTION = 8;</code>
     */
    public static final int CONTRACT_TYPE_BINARY_OPTION_VALUE = 8;
    /**
     * <code>CONTRACT_TYPE_UDS = 9;</code>
     */
    public static final int CONTRACT_TYPE_UDS_VALUE = 9;
    /**
     * <code>CONTRACT_TYPE_FX_SPOT = 10;</code>
     */
    public static final int CONTRACT_TYPE_FX_SPOT_VALUE = 10;
    /**
     * <code>CONTRACT_TYPE_ANY = -1;</code>
     */
    public static final int CONTRACT_TYPE_ANY_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContractType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContractType forNumber(int value) {
      switch (value) {
        case 0: return CONTRACT_TYPE_UNKNOWN;
        case 1: return CONTRACT_TYPE_OPTION;
        case 2: return CONTRACT_TYPE_OPTION_CALL;
        case 3: return CONTRACT_TYPE_OPTION_PUT;
        case 4: return CONTRACT_TYPE_STOCK;
        case 5: return CONTRACT_TYPE_FUTURE;
        case 6: return CONTRACT_TYPE_INDEX;
        case 7: return CONTRACT_TYPE_SYNTHETIC;
        case 8: return CONTRACT_TYPE_BINARY_OPTION;
        case 9: return CONTRACT_TYPE_UDS;
        case 10: return CONTRACT_TYPE_FX_SPOT;
        case -1: return CONTRACT_TYPE_ANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContractType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContractType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContractType>() {
            public ContractType findValueByNumber(int number) {
              return ContractType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(8);
    }

    private static final ContractType[] VALUES = values();

    public static ContractType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContractType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ContractType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.MarketDataType}
   */
  public enum MarketDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MARKET_DATA_TYPE_NONE = 0;</code>
     */
    MARKET_DATA_TYPE_NONE(0),
    /**
     * <code>MARKET_DATA_TYPE_TOB = 1;</code>
     */
    MARKET_DATA_TYPE_TOB(1),
    /**
     * <code>MARKET_DATA_TYPE_DEPTH = 2;</code>
     */
    MARKET_DATA_TYPE_DEPTH(2),
    /**
     * <code>MARKET_DATA_TYPE_E_MINI = 4;</code>
     */
    MARKET_DATA_TYPE_E_MINI(4),
    /**
     * <code>MARKET_DATA_TYPE_DELAYED = 8;</code>
     */
    MARKET_DATA_TYPE_DELAYED(8),
    /**
     * <code>MARKET_DATA_TYPE_NOT_SET = -1;</code>
     */
    MARKET_DATA_TYPE_NOT_SET(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MARKET_DATA_TYPE_NONE = 0;</code>
     */
    public static final int MARKET_DATA_TYPE_NONE_VALUE = 0;
    /**
     * <code>MARKET_DATA_TYPE_TOB = 1;</code>
     */
    public static final int MARKET_DATA_TYPE_TOB_VALUE = 1;
    /**
     * <code>MARKET_DATA_TYPE_DEPTH = 2;</code>
     */
    public static final int MARKET_DATA_TYPE_DEPTH_VALUE = 2;
    /**
     * <code>MARKET_DATA_TYPE_E_MINI = 4;</code>
     */
    public static final int MARKET_DATA_TYPE_E_MINI_VALUE = 4;
    /**
     * <code>MARKET_DATA_TYPE_DELAYED = 8;</code>
     */
    public static final int MARKET_DATA_TYPE_DELAYED_VALUE = 8;
    /**
     * <code>MARKET_DATA_TYPE_NOT_SET = -1;</code>
     */
    public static final int MARKET_DATA_TYPE_NOT_SET_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MarketDataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MarketDataType forNumber(int value) {
      switch (value) {
        case 0: return MARKET_DATA_TYPE_NONE;
        case 1: return MARKET_DATA_TYPE_TOB;
        case 2: return MARKET_DATA_TYPE_DEPTH;
        case 4: return MARKET_DATA_TYPE_E_MINI;
        case 8: return MARKET_DATA_TYPE_DELAYED;
        case -1: return MARKET_DATA_TYPE_NOT_SET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MarketDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MarketDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MarketDataType>() {
            public MarketDataType findValueByNumber(int number) {
              return MarketDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(9);
    }

    private static final MarketDataType[] VALUES = values();

    public static MarketDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MarketDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.MarketDataType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.StrategyType}
   */
  public enum StrategyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STRATEGY_TYPE_NONE = 0;</code>
     */
    STRATEGY_TYPE_NONE(0),
    /**
     * <code>STRATEGY_TYPE_CALENDAR_SPREAD = 1;</code>
     */
    STRATEGY_TYPE_CALENDAR_SPREAD(1),
    /**
     * <code>STRATEGY_TYPE_RT_CALENDAR_SPREAD = 2;</code>
     */
    STRATEGY_TYPE_RT_CALENDAR_SPREAD(2),
    /**
     * <code>STRATEGY_TYPE_INTER_CONTRACT_SPREAD = 3;</code>
     */
    STRATEGY_TYPE_INTER_CONTRACT_SPREAD(3),
    /**
     * <code>STRATEGY_TYPE_BUTTERFLY = 4;</code>
     */
    STRATEGY_TYPE_BUTTERFLY(4),
    /**
     * <code>STRATEGY_TYPE_CONDOR = 5;</code>
     */
    STRATEGY_TYPE_CONDOR(5),
    /**
     * <code>STRATEGY_TYPE_DOUBLE_BUTTERFLY = 6;</code>
     */
    STRATEGY_TYPE_DOUBLE_BUTTERFLY(6),
    /**
     * <code>STRATEGY_TYPE_HORIZONTAL = 7;</code>
     */
    STRATEGY_TYPE_HORIZONTAL(7),
    /**
     * <code>STRATEGY_TYPE_BUNDLE = 8;</code>
     */
    STRATEGY_TYPE_BUNDLE(8),
    /**
     * <code>STRATEGY_TYPE_MONTH_VS_PACK = 9;</code>
     */
    STRATEGY_TYPE_MONTH_VS_PACK(9),
    /**
     * <code>STRATEGY_TYPE_PACK = 10;</code>
     */
    STRATEGY_TYPE_PACK(10),
    /**
     * <code>STRATEGY_TYPE_PACK_SPREAD = 11;</code>
     */
    STRATEGY_TYPE_PACK_SPREAD(11),
    /**
     * <code>STRATEGY_TYPE_PACK_BUTTERFLY = 12;</code>
     */
    STRATEGY_TYPE_PACK_BUTTERFLY(12),
    /**
     * <code>STRATEGY_TYPE_BUNDLE_SPREAD = 13;</code>
     */
    STRATEGY_TYPE_BUNDLE_SPREAD(13),
    /**
     * <code>STRATEGY_TYPE_STRIP = 14;</code>
     */
    STRATEGY_TYPE_STRIP(14),
    /**
     * <code>STRATEGY_TYPE_CRACK = 15;</code>
     */
    STRATEGY_TYPE_CRACK(15),
    /**
     * <code>STRATEGY_TYPE_TREASURY_SPREAD = 16;</code>
     */
    STRATEGY_TYPE_TREASURY_SPREAD(16),
    /**
     * <code>STRATEGY_TYPE_CRUSH = 17;</code>
     */
    STRATEGY_TYPE_CRUSH(17),
    /**
     * <code>STRATEGY_TYPE_THREE_WAY = 19;</code>
     */
    STRATEGY_TYPE_THREE_WAY(19),
    /**
     * <code>STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_CALL = 20;</code>
     */
    STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_CALL(20),
    /**
     * <code>STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT = 21;</code>
     */
    STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT(21),
    /**
     * <code>STRATEGY_TYPE_BOX = 22;</code>
     */
    STRATEGY_TYPE_BOX(22),
    /**
     * <code>STRATEGY_TYPE_XMAS_TREE = 23;</code>
     */
    STRATEGY_TYPE_XMAS_TREE(23),
    /**
     * <code>STRATEGY_TYPE_CONDITIONAL_CURVE = 24;</code>
     */
    STRATEGY_TYPE_CONDITIONAL_CURVE(24),
    /**
     * <code>STRATEGY_TYPE_DOUBLE = 25;</code>
     */
    STRATEGY_TYPE_DOUBLE(25),
    /**
     * <code>STRATEGY_TYPE_HORIZONTAL_STRADDLE = 26;</code>
     */
    STRATEGY_TYPE_HORIZONTAL_STRADDLE(26),
    /**
     * <code>STRATEGY_TYPE_IRON_CONDOR = 27;</code>
     */
    STRATEGY_TYPE_IRON_CONDOR(27),
    /**
     * <code>STRATEGY_TYPE_RATIO_1X2 = 28;</code>
     */
    STRATEGY_TYPE_RATIO_1X2(28),
    /**
     * <code>STRATEGY_TYPE_RATIO_1X3 = 29;</code>
     */
    STRATEGY_TYPE_RATIO_1X3(29),
    /**
     * <code>STRATEGY_TYPE_RATIO_2X3 = 30;</code>
     */
    STRATEGY_TYPE_RATIO_2X3(30),
    /**
     * <code>STRATEGY_TYPE_RISK_REVERSAL = 31;</code>
     */
    STRATEGY_TYPE_RISK_REVERSAL(31),
    /**
     * <code>STRATEGY_TYPE_STRADDLE_STRIP = 32;</code>
     */
    STRATEGY_TYPE_STRADDLE_STRIP(32),
    /**
     * <code>STRATEGY_TYPE_STRADDLE = 33;</code>
     */
    STRATEGY_TYPE_STRADDLE(33),
    /**
     * <code>STRATEGY_TYPE_STRANGLE = 34;</code>
     */
    STRATEGY_TYPE_STRANGLE(34),
    /**
     * <code>STRATEGY_TYPE_VERTICAL = 35;</code>
     */
    STRATEGY_TYPE_VERTICAL(35),
    /**
     * <code>STRATEGY_TYPE_JELLY_ROLL = 36;</code>
     */
    STRATEGY_TYPE_JELLY_ROLL(36),
    /**
     * <code>STRATEGY_TYPE_IRON_BUTTERFLY = 37;</code>
     */
    STRATEGY_TYPE_IRON_BUTTERFLY(37),
    /**
     * <code>STRATEGY_TYPE_GUTS = 38;</code>
     */
    STRATEGY_TYPE_GUTS(38),
    /**
     * <code>STRATEGY_TYPE_GENERIC = 39;</code>
     */
    STRATEGY_TYPE_GENERIC(39),
    /**
     * <code>STRATEGY_TYPE_DIAGONAL = 40;</code>
     */
    STRATEGY_TYPE_DIAGONAL(40),
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY = 41;</code>
     */
    STRATEGY_TYPE_COVERED_THREE_WAY(41),
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_CALL = 42;</code>
     */
    STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_CALL(42),
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_PUT = 43;</code>
     */
    STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_PUT(43),
    /**
     * <code>STRATEGY_TYPE_COVERED_BOX = 44;</code>
     */
    STRATEGY_TYPE_COVERED_BOX(44),
    /**
     * <code>STRATEGY_TYPE_COVERED_XMAS_TREE = 45;</code>
     */
    STRATEGY_TYPE_COVERED_XMAS_TREE(45),
    /**
     * <code>STRATEGY_TYPE_COVERED_CONDITIONAL_CURVE = 46;</code>
     */
    STRATEGY_TYPE_COVERED_CONDITIONAL_CURVE(46),
    /**
     * <code>STRATEGY_TYPE_COVERED_DOUBLE = 47;</code>
     */
    STRATEGY_TYPE_COVERED_DOUBLE(47),
    /**
     * <code>STRATEGY_TYPE_COVERED_HORIZONTAL_STRADDLE = 48;</code>
     */
    STRATEGY_TYPE_COVERED_HORIZONTAL_STRADDLE(48),
    /**
     * <code>STRATEGY_TYPE_COVERED_IRON_CONDOR = 49;</code>
     */
    STRATEGY_TYPE_COVERED_IRON_CONDOR(49),
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_1X2 = 50;</code>
     */
    STRATEGY_TYPE_COVERED_RATIO_1X2(50),
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_1X3 = 51;</code>
     */
    STRATEGY_TYPE_COVERED_RATIO_1X3(51),
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_2X3 = 52;</code>
     */
    STRATEGY_TYPE_COVERED_RATIO_2X3(52),
    /**
     * <code>STRATEGY_TYPE_COVERED_RISK_REVERSAL = 53;</code>
     */
    STRATEGY_TYPE_COVERED_RISK_REVERSAL(53),
    /**
     * <code>STRATEGY_TYPE_COVERED_STRADDLE_STRIP = 54;</code>
     */
    STRATEGY_TYPE_COVERED_STRADDLE_STRIP(54),
    /**
     * <code>STRATEGY_TYPE_COVERED_STRADDLE = 55;</code>
     */
    STRATEGY_TYPE_COVERED_STRADDLE(55),
    /**
     * <code>STRATEGY_TYPE_COVERED_STRANGLE = 56;</code>
     */
    STRATEGY_TYPE_COVERED_STRANGLE(56),
    /**
     * <code>STRATEGY_TYPE_COVERED_VERTICAL = 57;</code>
     */
    STRATEGY_TYPE_COVERED_VERTICAL(57),
    /**
     * <code>STRATEGY_TYPE_COVERED_JELLY_ROLL = 58;</code>
     */
    STRATEGY_TYPE_COVERED_JELLY_ROLL(58),
    /**
     * <code>STRATEGY_TYPE_COVERED_IRON_BUTTERFLY = 59;</code>
     */
    STRATEGY_TYPE_COVERED_IRON_BUTTERFLY(59),
    /**
     * <code>STRATEGY_TYPE_COVERED_GUTS = 60;</code>
     */
    STRATEGY_TYPE_COVERED_GUTS(60),
    /**
     * <code>STRATEGY_TYPE_COVERED_GENERIC = 61;</code>
     */
    STRATEGY_TYPE_COVERED_GENERIC(61),
    /**
     * <code>STRATEGY_TYPE_COVERED_DIAGONAL = 62;</code>
     */
    STRATEGY_TYPE_COVERED_DIAGONAL(62),
    /**
     * <code>STRATEGY_TYPE_COVERED_BUTTERFLY = 63;</code>
     */
    STRATEGY_TYPE_COVERED_BUTTERFLY(63),
    /**
     * <code>STRATEGY_TYPE_COVERED_CONDOR = 64;</code>
     */
    STRATEGY_TYPE_COVERED_CONDOR(64),
    /**
     * <code>STRATEGY_TYPE_COVERED_HORIZONTAL = 65;</code>
     */
    STRATEGY_TYPE_COVERED_HORIZONTAL(65),
    /**
     * <code>STRATEGY_TYPE_COVERED_STRIP = 66;</code>
     */
    STRATEGY_TYPE_COVERED_STRIP(66),
    /**
     * <code>STRATEGY_TYPE_COVERED_OPTION = 67;</code>
     */
    STRATEGY_TYPE_COVERED_OPTION(67),
    /**
     * <code>STRATEGY_TYPE_BALANCED_STRIP = 68;</code>
     */
    STRATEGY_TYPE_BALANCED_STRIP(68),
    /**
     * <code>STRATEGY_TYPE_UNBALANCED_STRIP = 69;</code>
     */
    STRATEGY_TYPE_UNBALANCED_STRIP(69),
    /**
     * <code>STRATEGY_TYPE_INTER_CONTRACT_STRIP = 70;</code>
     */
    STRATEGY_TYPE_INTER_CONTRACT_STRIP(70),
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP = 71;</code>
     */
    STRATEGY_TYPE_INVOICE_SWAP(71),
    /**
     * <code>STRATEGY_TYPE_INTEREST_RATE_SWAP = 72;</code>
     */
    STRATEGY_TYPE_INTEREST_RATE_SWAP(72),
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_STRIP = 73;</code>
     */
    STRATEGY_TYPE_AVERAGE_PRICE_STRIP(73),
    /**
     * <code>STRATEGY_TYPE_TREASURY_TAIL = 74;</code>
     */
    STRATEGY_TYPE_TREASURY_TAIL(74),
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_STRIP_SPREAD = 75;</code>
     */
    STRATEGY_TYPE_AVERAGE_PRICE_STRIP_SPREAD(75),
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP_CALENDAR = 76;</code>
     */
    STRATEGY_TYPE_INVOICE_SWAP_CALENDAR(76),
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP_SWITCHES = 77;</code>
     */
    STRATEGY_TYPE_INVOICE_SWAP_SWITCHES(77),
    /**
     * <code>STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION = 78;</code>
     */
    STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION(78),
    /**
     * <code>STRATEGY_TYPE_FX_SPOT = 79;</code>
     */
    STRATEGY_TYPE_FX_SPOT(79),
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_BUNDLE = 80;</code>
     */
    STRATEGY_TYPE_AVERAGE_PRICE_BUNDLE(80),
    /**
     * <code>STRATEGY_TYPE_FIXED_PRICE_RATIO_SPREAD = 81;</code>
     */
    STRATEGY_TYPE_FIXED_PRICE_RATIO_SPREAD(81),
    /**
     * <code>STRATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD = 82;</code>
     */
    STRATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD(82),
    /**
     * <code>STRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY = 83;</code>
     */
    STRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY(83),
    /**
     * <code>STRATEGY_TYPE_ANY = -1;</code>
     */
    STRATEGY_TYPE_ANY(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STRATEGY_TYPE_NONE = 0;</code>
     */
    public static final int STRATEGY_TYPE_NONE_VALUE = 0;
    /**
     * <code>STRATEGY_TYPE_CALENDAR_SPREAD = 1;</code>
     */
    public static final int STRATEGY_TYPE_CALENDAR_SPREAD_VALUE = 1;
    /**
     * <code>STRATEGY_TYPE_RT_CALENDAR_SPREAD = 2;</code>
     */
    public static final int STRATEGY_TYPE_RT_CALENDAR_SPREAD_VALUE = 2;
    /**
     * <code>STRATEGY_TYPE_INTER_CONTRACT_SPREAD = 3;</code>
     */
    public static final int STRATEGY_TYPE_INTER_CONTRACT_SPREAD_VALUE = 3;
    /**
     * <code>STRATEGY_TYPE_BUTTERFLY = 4;</code>
     */
    public static final int STRATEGY_TYPE_BUTTERFLY_VALUE = 4;
    /**
     * <code>STRATEGY_TYPE_CONDOR = 5;</code>
     */
    public static final int STRATEGY_TYPE_CONDOR_VALUE = 5;
    /**
     * <code>STRATEGY_TYPE_DOUBLE_BUTTERFLY = 6;</code>
     */
    public static final int STRATEGY_TYPE_DOUBLE_BUTTERFLY_VALUE = 6;
    /**
     * <code>STRATEGY_TYPE_HORIZONTAL = 7;</code>
     */
    public static final int STRATEGY_TYPE_HORIZONTAL_VALUE = 7;
    /**
     * <code>STRATEGY_TYPE_BUNDLE = 8;</code>
     */
    public static final int STRATEGY_TYPE_BUNDLE_VALUE = 8;
    /**
     * <code>STRATEGY_TYPE_MONTH_VS_PACK = 9;</code>
     */
    public static final int STRATEGY_TYPE_MONTH_VS_PACK_VALUE = 9;
    /**
     * <code>STRATEGY_TYPE_PACK = 10;</code>
     */
    public static final int STRATEGY_TYPE_PACK_VALUE = 10;
    /**
     * <code>STRATEGY_TYPE_PACK_SPREAD = 11;</code>
     */
    public static final int STRATEGY_TYPE_PACK_SPREAD_VALUE = 11;
    /**
     * <code>STRATEGY_TYPE_PACK_BUTTERFLY = 12;</code>
     */
    public static final int STRATEGY_TYPE_PACK_BUTTERFLY_VALUE = 12;
    /**
     * <code>STRATEGY_TYPE_BUNDLE_SPREAD = 13;</code>
     */
    public static final int STRATEGY_TYPE_BUNDLE_SPREAD_VALUE = 13;
    /**
     * <code>STRATEGY_TYPE_STRIP = 14;</code>
     */
    public static final int STRATEGY_TYPE_STRIP_VALUE = 14;
    /**
     * <code>STRATEGY_TYPE_CRACK = 15;</code>
     */
    public static final int STRATEGY_TYPE_CRACK_VALUE = 15;
    /**
     * <code>STRATEGY_TYPE_TREASURY_SPREAD = 16;</code>
     */
    public static final int STRATEGY_TYPE_TREASURY_SPREAD_VALUE = 16;
    /**
     * <code>STRATEGY_TYPE_CRUSH = 17;</code>
     */
    public static final int STRATEGY_TYPE_CRUSH_VALUE = 17;
    /**
     * <code>STRATEGY_TYPE_THREE_WAY = 19;</code>
     */
    public static final int STRATEGY_TYPE_THREE_WAY_VALUE = 19;
    /**
     * <code>STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_CALL = 20;</code>
     */
    public static final int STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_CALL_VALUE = 20;
    /**
     * <code>STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT = 21;</code>
     */
    public static final int STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT_VALUE = 21;
    /**
     * <code>STRATEGY_TYPE_BOX = 22;</code>
     */
    public static final int STRATEGY_TYPE_BOX_VALUE = 22;
    /**
     * <code>STRATEGY_TYPE_XMAS_TREE = 23;</code>
     */
    public static final int STRATEGY_TYPE_XMAS_TREE_VALUE = 23;
    /**
     * <code>STRATEGY_TYPE_CONDITIONAL_CURVE = 24;</code>
     */
    public static final int STRATEGY_TYPE_CONDITIONAL_CURVE_VALUE = 24;
    /**
     * <code>STRATEGY_TYPE_DOUBLE = 25;</code>
     */
    public static final int STRATEGY_TYPE_DOUBLE_VALUE = 25;
    /**
     * <code>STRATEGY_TYPE_HORIZONTAL_STRADDLE = 26;</code>
     */
    public static final int STRATEGY_TYPE_HORIZONTAL_STRADDLE_VALUE = 26;
    /**
     * <code>STRATEGY_TYPE_IRON_CONDOR = 27;</code>
     */
    public static final int STRATEGY_TYPE_IRON_CONDOR_VALUE = 27;
    /**
     * <code>STRATEGY_TYPE_RATIO_1X2 = 28;</code>
     */
    public static final int STRATEGY_TYPE_RATIO_1X2_VALUE = 28;
    /**
     * <code>STRATEGY_TYPE_RATIO_1X3 = 29;</code>
     */
    public static final int STRATEGY_TYPE_RATIO_1X3_VALUE = 29;
    /**
     * <code>STRATEGY_TYPE_RATIO_2X3 = 30;</code>
     */
    public static final int STRATEGY_TYPE_RATIO_2X3_VALUE = 30;
    /**
     * <code>STRATEGY_TYPE_RISK_REVERSAL = 31;</code>
     */
    public static final int STRATEGY_TYPE_RISK_REVERSAL_VALUE = 31;
    /**
     * <code>STRATEGY_TYPE_STRADDLE_STRIP = 32;</code>
     */
    public static final int STRATEGY_TYPE_STRADDLE_STRIP_VALUE = 32;
    /**
     * <code>STRATEGY_TYPE_STRADDLE = 33;</code>
     */
    public static final int STRATEGY_TYPE_STRADDLE_VALUE = 33;
    /**
     * <code>STRATEGY_TYPE_STRANGLE = 34;</code>
     */
    public static final int STRATEGY_TYPE_STRANGLE_VALUE = 34;
    /**
     * <code>STRATEGY_TYPE_VERTICAL = 35;</code>
     */
    public static final int STRATEGY_TYPE_VERTICAL_VALUE = 35;
    /**
     * <code>STRATEGY_TYPE_JELLY_ROLL = 36;</code>
     */
    public static final int STRATEGY_TYPE_JELLY_ROLL_VALUE = 36;
    /**
     * <code>STRATEGY_TYPE_IRON_BUTTERFLY = 37;</code>
     */
    public static final int STRATEGY_TYPE_IRON_BUTTERFLY_VALUE = 37;
    /**
     * <code>STRATEGY_TYPE_GUTS = 38;</code>
     */
    public static final int STRATEGY_TYPE_GUTS_VALUE = 38;
    /**
     * <code>STRATEGY_TYPE_GENERIC = 39;</code>
     */
    public static final int STRATEGY_TYPE_GENERIC_VALUE = 39;
    /**
     * <code>STRATEGY_TYPE_DIAGONAL = 40;</code>
     */
    public static final int STRATEGY_TYPE_DIAGONAL_VALUE = 40;
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY = 41;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_THREE_WAY_VALUE = 41;
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_CALL = 42;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_CALL_VALUE = 42;
    /**
     * <code>STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_PUT = 43;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_PUT_VALUE = 43;
    /**
     * <code>STRATEGY_TYPE_COVERED_BOX = 44;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_BOX_VALUE = 44;
    /**
     * <code>STRATEGY_TYPE_COVERED_XMAS_TREE = 45;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_XMAS_TREE_VALUE = 45;
    /**
     * <code>STRATEGY_TYPE_COVERED_CONDITIONAL_CURVE = 46;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_CONDITIONAL_CURVE_VALUE = 46;
    /**
     * <code>STRATEGY_TYPE_COVERED_DOUBLE = 47;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_DOUBLE_VALUE = 47;
    /**
     * <code>STRATEGY_TYPE_COVERED_HORIZONTAL_STRADDLE = 48;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_HORIZONTAL_STRADDLE_VALUE = 48;
    /**
     * <code>STRATEGY_TYPE_COVERED_IRON_CONDOR = 49;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_IRON_CONDOR_VALUE = 49;
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_1X2 = 50;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_RATIO_1X2_VALUE = 50;
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_1X3 = 51;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_RATIO_1X3_VALUE = 51;
    /**
     * <code>STRATEGY_TYPE_COVERED_RATIO_2X3 = 52;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_RATIO_2X3_VALUE = 52;
    /**
     * <code>STRATEGY_TYPE_COVERED_RISK_REVERSAL = 53;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_RISK_REVERSAL_VALUE = 53;
    /**
     * <code>STRATEGY_TYPE_COVERED_STRADDLE_STRIP = 54;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_STRADDLE_STRIP_VALUE = 54;
    /**
     * <code>STRATEGY_TYPE_COVERED_STRADDLE = 55;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_STRADDLE_VALUE = 55;
    /**
     * <code>STRATEGY_TYPE_COVERED_STRANGLE = 56;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_STRANGLE_VALUE = 56;
    /**
     * <code>STRATEGY_TYPE_COVERED_VERTICAL = 57;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_VERTICAL_VALUE = 57;
    /**
     * <code>STRATEGY_TYPE_COVERED_JELLY_ROLL = 58;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_JELLY_ROLL_VALUE = 58;
    /**
     * <code>STRATEGY_TYPE_COVERED_IRON_BUTTERFLY = 59;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_IRON_BUTTERFLY_VALUE = 59;
    /**
     * <code>STRATEGY_TYPE_COVERED_GUTS = 60;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_GUTS_VALUE = 60;
    /**
     * <code>STRATEGY_TYPE_COVERED_GENERIC = 61;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_GENERIC_VALUE = 61;
    /**
     * <code>STRATEGY_TYPE_COVERED_DIAGONAL = 62;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_DIAGONAL_VALUE = 62;
    /**
     * <code>STRATEGY_TYPE_COVERED_BUTTERFLY = 63;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_BUTTERFLY_VALUE = 63;
    /**
     * <code>STRATEGY_TYPE_COVERED_CONDOR = 64;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_CONDOR_VALUE = 64;
    /**
     * <code>STRATEGY_TYPE_COVERED_HORIZONTAL = 65;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_HORIZONTAL_VALUE = 65;
    /**
     * <code>STRATEGY_TYPE_COVERED_STRIP = 66;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_STRIP_VALUE = 66;
    /**
     * <code>STRATEGY_TYPE_COVERED_OPTION = 67;</code>
     */
    public static final int STRATEGY_TYPE_COVERED_OPTION_VALUE = 67;
    /**
     * <code>STRATEGY_TYPE_BALANCED_STRIP = 68;</code>
     */
    public static final int STRATEGY_TYPE_BALANCED_STRIP_VALUE = 68;
    /**
     * <code>STRATEGY_TYPE_UNBALANCED_STRIP = 69;</code>
     */
    public static final int STRATEGY_TYPE_UNBALANCED_STRIP_VALUE = 69;
    /**
     * <code>STRATEGY_TYPE_INTER_CONTRACT_STRIP = 70;</code>
     */
    public static final int STRATEGY_TYPE_INTER_CONTRACT_STRIP_VALUE = 70;
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP = 71;</code>
     */
    public static final int STRATEGY_TYPE_INVOICE_SWAP_VALUE = 71;
    /**
     * <code>STRATEGY_TYPE_INTEREST_RATE_SWAP = 72;</code>
     */
    public static final int STRATEGY_TYPE_INTEREST_RATE_SWAP_VALUE = 72;
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_STRIP = 73;</code>
     */
    public static final int STRATEGY_TYPE_AVERAGE_PRICE_STRIP_VALUE = 73;
    /**
     * <code>STRATEGY_TYPE_TREASURY_TAIL = 74;</code>
     */
    public static final int STRATEGY_TYPE_TREASURY_TAIL_VALUE = 74;
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_STRIP_SPREAD = 75;</code>
     */
    public static final int STRATEGY_TYPE_AVERAGE_PRICE_STRIP_SPREAD_VALUE = 75;
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP_CALENDAR = 76;</code>
     */
    public static final int STRATEGY_TYPE_INVOICE_SWAP_CALENDAR_VALUE = 76;
    /**
     * <code>STRATEGY_TYPE_INVOICE_SWAP_SWITCHES = 77;</code>
     */
    public static final int STRATEGY_TYPE_INVOICE_SWAP_SWITCHES_VALUE = 77;
    /**
     * <code>STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION = 78;</code>
     */
    public static final int STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION_VALUE = 78;
    /**
     * <code>STRATEGY_TYPE_FX_SPOT = 79;</code>
     */
    public static final int STRATEGY_TYPE_FX_SPOT_VALUE = 79;
    /**
     * <code>STRATEGY_TYPE_AVERAGE_PRICE_BUNDLE = 80;</code>
     */
    public static final int STRATEGY_TYPE_AVERAGE_PRICE_BUNDLE_VALUE = 80;
    /**
     * <code>STRATEGY_TYPE_FIXED_PRICE_RATIO_SPREAD = 81;</code>
     */
    public static final int STRATEGY_TYPE_FIXED_PRICE_RATIO_SPREAD_VALUE = 81;
    /**
     * <code>STRATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD = 82;</code>
     */
    public static final int STRATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD_VALUE = 82;
    /**
     * <code>STRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY = 83;</code>
     */
    public static final int STRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY_VALUE = 83;
    /**
     * <code>STRATEGY_TYPE_ANY = -1;</code>
     */
    public static final int STRATEGY_TYPE_ANY_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StrategyType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static StrategyType forNumber(int value) {
      switch (value) {
        case 0: return STRATEGY_TYPE_NONE;
        case 1: return STRATEGY_TYPE_CALENDAR_SPREAD;
        case 2: return STRATEGY_TYPE_RT_CALENDAR_SPREAD;
        case 3: return STRATEGY_TYPE_INTER_CONTRACT_SPREAD;
        case 4: return STRATEGY_TYPE_BUTTERFLY;
        case 5: return STRATEGY_TYPE_CONDOR;
        case 6: return STRATEGY_TYPE_DOUBLE_BUTTERFLY;
        case 7: return STRATEGY_TYPE_HORIZONTAL;
        case 8: return STRATEGY_TYPE_BUNDLE;
        case 9: return STRATEGY_TYPE_MONTH_VS_PACK;
        case 10: return STRATEGY_TYPE_PACK;
        case 11: return STRATEGY_TYPE_PACK_SPREAD;
        case 12: return STRATEGY_TYPE_PACK_BUTTERFLY;
        case 13: return STRATEGY_TYPE_BUNDLE_SPREAD;
        case 14: return STRATEGY_TYPE_STRIP;
        case 15: return STRATEGY_TYPE_CRACK;
        case 16: return STRATEGY_TYPE_TREASURY_SPREAD;
        case 17: return STRATEGY_TYPE_CRUSH;
        case 19: return STRATEGY_TYPE_THREE_WAY;
        case 20: return STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_CALL;
        case 21: return STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT;
        case 22: return STRATEGY_TYPE_BOX;
        case 23: return STRATEGY_TYPE_XMAS_TREE;
        case 24: return STRATEGY_TYPE_CONDITIONAL_CURVE;
        case 25: return STRATEGY_TYPE_DOUBLE;
        case 26: return STRATEGY_TYPE_HORIZONTAL_STRADDLE;
        case 27: return STRATEGY_TYPE_IRON_CONDOR;
        case 28: return STRATEGY_TYPE_RATIO_1X2;
        case 29: return STRATEGY_TYPE_RATIO_1X3;
        case 30: return STRATEGY_TYPE_RATIO_2X3;
        case 31: return STRATEGY_TYPE_RISK_REVERSAL;
        case 32: return STRATEGY_TYPE_STRADDLE_STRIP;
        case 33: return STRATEGY_TYPE_STRADDLE;
        case 34: return STRATEGY_TYPE_STRANGLE;
        case 35: return STRATEGY_TYPE_VERTICAL;
        case 36: return STRATEGY_TYPE_JELLY_ROLL;
        case 37: return STRATEGY_TYPE_IRON_BUTTERFLY;
        case 38: return STRATEGY_TYPE_GUTS;
        case 39: return STRATEGY_TYPE_GENERIC;
        case 40: return STRATEGY_TYPE_DIAGONAL;
        case 41: return STRATEGY_TYPE_COVERED_THREE_WAY;
        case 42: return STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_CALL;
        case 43: return STRATEGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_PUT;
        case 44: return STRATEGY_TYPE_COVERED_BOX;
        case 45: return STRATEGY_TYPE_COVERED_XMAS_TREE;
        case 46: return STRATEGY_TYPE_COVERED_CONDITIONAL_CURVE;
        case 47: return STRATEGY_TYPE_COVERED_DOUBLE;
        case 48: return STRATEGY_TYPE_COVERED_HORIZONTAL_STRADDLE;
        case 49: return STRATEGY_TYPE_COVERED_IRON_CONDOR;
        case 50: return STRATEGY_TYPE_COVERED_RATIO_1X2;
        case 51: return STRATEGY_TYPE_COVERED_RATIO_1X3;
        case 52: return STRATEGY_TYPE_COVERED_RATIO_2X3;
        case 53: return STRATEGY_TYPE_COVERED_RISK_REVERSAL;
        case 54: return STRATEGY_TYPE_COVERED_STRADDLE_STRIP;
        case 55: return STRATEGY_TYPE_COVERED_STRADDLE;
        case 56: return STRATEGY_TYPE_COVERED_STRANGLE;
        case 57: return STRATEGY_TYPE_COVERED_VERTICAL;
        case 58: return STRATEGY_TYPE_COVERED_JELLY_ROLL;
        case 59: return STRATEGY_TYPE_COVERED_IRON_BUTTERFLY;
        case 60: return STRATEGY_TYPE_COVERED_GUTS;
        case 61: return STRATEGY_TYPE_COVERED_GENERIC;
        case 62: return STRATEGY_TYPE_COVERED_DIAGONAL;
        case 63: return STRATEGY_TYPE_COVERED_BUTTERFLY;
        case 64: return STRATEGY_TYPE_COVERED_CONDOR;
        case 65: return STRATEGY_TYPE_COVERED_HORIZONTAL;
        case 66: return STRATEGY_TYPE_COVERED_STRIP;
        case 67: return STRATEGY_TYPE_COVERED_OPTION;
        case 68: return STRATEGY_TYPE_BALANCED_STRIP;
        case 69: return STRATEGY_TYPE_UNBALANCED_STRIP;
        case 70: return STRATEGY_TYPE_INTER_CONTRACT_STRIP;
        case 71: return STRATEGY_TYPE_INVOICE_SWAP;
        case 72: return STRATEGY_TYPE_INTEREST_RATE_SWAP;
        case 73: return STRATEGY_TYPE_AVERAGE_PRICE_STRIP;
        case 74: return STRATEGY_TYPE_TREASURY_TAIL;
        case 75: return STRATEGY_TYPE_AVERAGE_PRICE_STRIP_SPREAD;
        case 76: return STRATEGY_TYPE_INVOICE_SWAP_CALENDAR;
        case 77: return STRATEGY_TYPE_INVOICE_SWAP_SWITCHES;
        case 78: return STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION;
        case 79: return STRATEGY_TYPE_FX_SPOT;
        case 80: return STRATEGY_TYPE_AVERAGE_PRICE_BUNDLE;
        case 81: return STRATEGY_TYPE_FIXED_PRICE_RATIO_SPREAD;
        case 82: return STRATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD;
        case 83: return STRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY;
        case -1: return STRATEGY_TYPE_ANY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StrategyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StrategyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StrategyType>() {
            public StrategyType findValueByNumber(int number) {
              return StrategyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(10);
    }

    private static final StrategyType[] VALUES = values();

    public static StrategyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StrategyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.StrategyType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ContractRiskStatus}
   */
  public enum ContractRiskStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CONTRACT_RISK_STATUS_NONE = 0;</code>
     */
    CONTRACT_RISK_STATUS_NONE(0),
    /**
     * <code>CONTRACT_RISK_STATUS_DAY_TRADING = 1;</code>
     */
    CONTRACT_RISK_STATUS_DAY_TRADING(1),
    /**
     * <code>CONTRACT_RISK_STATUS_ALERTING = 2;</code>
     */
    CONTRACT_RISK_STATUS_ALERTING(2),
    /**
     * <code>CONTRACT_RISK_STATUS_LIQUIDATION = 3;</code>
     */
    CONTRACT_RISK_STATUS_LIQUIDATION(3),
    /**
     * <code>CONTRACT_RISK_STATUS_LIQUIDATION_WAITING = 4;</code>
     */
    CONTRACT_RISK_STATUS_LIQUIDATION_WAITING(4),
    /**
     * <code>CONTRACT_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATION = 5;</code>
     */
    CONTRACT_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATION(5),
    /**
     * <code>CONTRACT_RISK_STATUS_PRICE_LIMIT_LIQUIDATION = 6;</code>
     */
    CONTRACT_RISK_STATUS_PRICE_LIMIT_LIQUIDATION(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CONTRACT_RISK_STATUS_NONE = 0;</code>
     */
    public static final int CONTRACT_RISK_STATUS_NONE_VALUE = 0;
    /**
     * <code>CONTRACT_RISK_STATUS_DAY_TRADING = 1;</code>
     */
    public static final int CONTRACT_RISK_STATUS_DAY_TRADING_VALUE = 1;
    /**
     * <code>CONTRACT_RISK_STATUS_ALERTING = 2;</code>
     */
    public static final int CONTRACT_RISK_STATUS_ALERTING_VALUE = 2;
    /**
     * <code>CONTRACT_RISK_STATUS_LIQUIDATION = 3;</code>
     */
    public static final int CONTRACT_RISK_STATUS_LIQUIDATION_VALUE = 3;
    /**
     * <code>CONTRACT_RISK_STATUS_LIQUIDATION_WAITING = 4;</code>
     */
    public static final int CONTRACT_RISK_STATUS_LIQUIDATION_WAITING_VALUE = 4;
    /**
     * <code>CONTRACT_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATION = 5;</code>
     */
    public static final int CONTRACT_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATION_VALUE = 5;
    /**
     * <code>CONTRACT_RISK_STATUS_PRICE_LIMIT_LIQUIDATION = 6;</code>
     */
    public static final int CONTRACT_RISK_STATUS_PRICE_LIMIT_LIQUIDATION_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContractRiskStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ContractRiskStatus forNumber(int value) {
      switch (value) {
        case 0: return CONTRACT_RISK_STATUS_NONE;
        case 1: return CONTRACT_RISK_STATUS_DAY_TRADING;
        case 2: return CONTRACT_RISK_STATUS_ALERTING;
        case 3: return CONTRACT_RISK_STATUS_LIQUIDATION;
        case 4: return CONTRACT_RISK_STATUS_LIQUIDATION_WAITING;
        case 5: return CONTRACT_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATION;
        case 6: return CONTRACT_RISK_STATUS_PRICE_LIMIT_LIQUIDATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ContractRiskStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ContractRiskStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ContractRiskStatus>() {
            public ContractRiskStatus findValueByNumber(int number) {
              return ContractRiskStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(11);
    }

    private static final ContractRiskStatus[] VALUES = values();

    public static ContractRiskStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ContractRiskStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ContractRiskStatus)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountStatus}
   */
  public enum AccountStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_STATUS_UNKNOWN = 0;</code>
     */
    ACCOUNT_STATUS_UNKNOWN(0),
    /**
     * <code>ACCOUNT_STATUS_BLOCKED = 1;</code>
     */
    ACCOUNT_STATUS_BLOCKED(1),
    /**
     * <code>ACCOUNT_STATUS_OK = 2;</code>
     */
    ACCOUNT_STATUS_OK(2),
    /**
     * <code>ACCOUNT_STATUS_UNRESTRICTED = 3;</code>
     */
    ACCOUNT_STATUS_UNRESTRICTED(3),
    /**
     * <code>ACCOUNT_STATUS_DELETED = 4;</code>
     */
    ACCOUNT_STATUS_DELETED(4),
    /**
     * <code>ACCOUNT_STATUS_DISABLED = 5;</code>
     */
    ACCOUNT_STATUS_DISABLED(5),
    /**
     * <code>ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME = 6;</code>
     */
    ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME(6),
    /**
     * <code>ACCOUNT_STATUS_NOT_ACCESSIBLE = 7;</code>
     */
    ACCOUNT_STATUS_NOT_ACCESSIBLE(7),
    /**
     * <code>ACCOUNT_STATUS_PIT_TRADE_ONLY = 8;</code>
     */
    ACCOUNT_STATUS_PIT_TRADE_ONLY(8),
    /**
     * <code>ACCOUNT_STATUS_LOSS_LIMIT_EXCEEDED = 9;</code>
     */
    ACCOUNT_STATUS_LOSS_LIMIT_EXCEEDED(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_STATUS_UNKNOWN = 0;</code>
     */
    public static final int ACCOUNT_STATUS_UNKNOWN_VALUE = 0;
    /**
     * <code>ACCOUNT_STATUS_BLOCKED = 1;</code>
     */
    public static final int ACCOUNT_STATUS_BLOCKED_VALUE = 1;
    /**
     * <code>ACCOUNT_STATUS_OK = 2;</code>
     */
    public static final int ACCOUNT_STATUS_OK_VALUE = 2;
    /**
     * <code>ACCOUNT_STATUS_UNRESTRICTED = 3;</code>
     */
    public static final int ACCOUNT_STATUS_UNRESTRICTED_VALUE = 3;
    /**
     * <code>ACCOUNT_STATUS_DELETED = 4;</code>
     */
    public static final int ACCOUNT_STATUS_DELETED_VALUE = 4;
    /**
     * <code>ACCOUNT_STATUS_DISABLED = 5;</code>
     */
    public static final int ACCOUNT_STATUS_DISABLED_VALUE = 5;
    /**
     * <code>ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME = 6;</code>
     */
    public static final int ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME_VALUE = 6;
    /**
     * <code>ACCOUNT_STATUS_NOT_ACCESSIBLE = 7;</code>
     */
    public static final int ACCOUNT_STATUS_NOT_ACCESSIBLE_VALUE = 7;
    /**
     * <code>ACCOUNT_STATUS_PIT_TRADE_ONLY = 8;</code>
     */
    public static final int ACCOUNT_STATUS_PIT_TRADE_ONLY_VALUE = 8;
    /**
     * <code>ACCOUNT_STATUS_LOSS_LIMIT_EXCEEDED = 9;</code>
     */
    public static final int ACCOUNT_STATUS_LOSS_LIMIT_EXCEEDED_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountStatus forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_STATUS_UNKNOWN;
        case 1: return ACCOUNT_STATUS_BLOCKED;
        case 2: return ACCOUNT_STATUS_OK;
        case 3: return ACCOUNT_STATUS_UNRESTRICTED;
        case 4: return ACCOUNT_STATUS_DELETED;
        case 5: return ACCOUNT_STATUS_DISABLED;
        case 6: return ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME;
        case 7: return ACCOUNT_STATUS_NOT_ACCESSIBLE;
        case 8: return ACCOUNT_STATUS_PIT_TRADE_ONLY;
        case 9: return ACCOUNT_STATUS_LOSS_LIMIT_EXCEEDED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountStatus>() {
            public AccountStatus findValueByNumber(int number) {
              return AccountStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(12);
    }

    private static final AccountStatus[] VALUES = values();

    public static AccountStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountStatus)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountEnabled}
   */
  public enum AccountEnabled
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_ENABLED_DISABLED = 0;</code>
     */
    ACCOUNT_ENABLED_DISABLED(0),
    /**
     * <code>ACCOUNT_ENABLED_ENABLED = 1;</code>
     */
    ACCOUNT_ENABLED_ENABLED(1),
    /**
     * <code>ACCOUNT_ENABLED_BACK_OFFICE_ONLY = 2;</code>
     */
    ACCOUNT_ENABLED_BACK_OFFICE_ONLY(2),
    /**
     * <code>ACCOUNT_ENABLED_PIT_TRADE_ONLY = 3;</code>
     */
    ACCOUNT_ENABLED_PIT_TRADE_ONLY(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_ENABLED_DISABLED = 0;</code>
     */
    public static final int ACCOUNT_ENABLED_DISABLED_VALUE = 0;
    /**
     * <code>ACCOUNT_ENABLED_ENABLED = 1;</code>
     */
    public static final int ACCOUNT_ENABLED_ENABLED_VALUE = 1;
    /**
     * <code>ACCOUNT_ENABLED_BACK_OFFICE_ONLY = 2;</code>
     */
    public static final int ACCOUNT_ENABLED_BACK_OFFICE_ONLY_VALUE = 2;
    /**
     * <code>ACCOUNT_ENABLED_PIT_TRADE_ONLY = 3;</code>
     */
    public static final int ACCOUNT_ENABLED_PIT_TRADE_ONLY_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountEnabled valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountEnabled forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_ENABLED_DISABLED;
        case 1: return ACCOUNT_ENABLED_ENABLED;
        case 2: return ACCOUNT_ENABLED_BACK_OFFICE_ONLY;
        case 3: return ACCOUNT_ENABLED_PIT_TRADE_ONLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountEnabled>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountEnabled> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountEnabled>() {
            public AccountEnabled findValueByNumber(int number) {
              return AccountEnabled.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(13);
    }

    private static final AccountEnabled[] VALUES = values();

    public static AccountEnabled valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountEnabled(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountEnabled)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountMarginType}
   */
  public enum AccountMarginType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_MARGIN_TYPE_SPEC = 0;</code>
     */
    ACCOUNT_MARGIN_TYPE_SPEC(0),
    /**
     * <code>ACCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER = 1;</code>
     */
    ACCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER(1),
    /**
     * <code>ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT = 2;</code>
     */
    ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_MARGIN_TYPE_SPEC = 0;</code>
     */
    public static final int ACCOUNT_MARGIN_TYPE_SPEC_VALUE = 0;
    /**
     * <code>ACCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER = 1;</code>
     */
    public static final int ACCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER_VALUE = 1;
    /**
     * <code>ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT = 2;</code>
     */
    public static final int ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountMarginType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountMarginType forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_MARGIN_TYPE_SPEC;
        case 1: return ACCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER;
        case 2: return ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountMarginType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountMarginType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountMarginType>() {
            public AccountMarginType findValueByNumber(int number) {
              return AccountMarginType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(14);
    }

    private static final AccountMarginType[] VALUES = values();

    public static AccountMarginType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountMarginType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountMarginType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OrderChange}
   */
  public enum OrderChange
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_CHANGE_NONE = 0;</code>
     */
    ORDER_CHANGE_NONE(0),
    /**
     * <code>ORDER_CHANGE_FAILED = 1;</code>
     */
    ORDER_CHANGE_FAILED(1),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_RISK_SUCCESS = 2;</code>
     */
    ORDER_CHANGE_SUBMISSION_RISK_SUCCESS(2),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_RISK_REJECTED = 3;</code>
     */
    ORDER_CHANGE_SUBMISSION_RISK_REJECTED(3),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_SENT = 4;</code>
     */
    ORDER_CHANGE_SUBMISSION_SENT(4),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_FAILED = 5;</code>
     */
    ORDER_CHANGE_SUBMISSION_FAILED(5),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_SUCCESS = 6;</code>
     */
    ORDER_CHANGE_SUBMISSION_SUCCESS(6),
    /**
     * <code>ORDER_CHANGE_SUBMISSION_REJECTED = 7;</code>
     */
    ORDER_CHANGE_SUBMISSION_REJECTED(7),
    /**
     * <code>ORDER_CHANGE_REVISION_RISK_SUCCESS = 8;</code>
     */
    ORDER_CHANGE_REVISION_RISK_SUCCESS(8),
    /**
     * <code>ORDER_CHANGE_REVISION_RISK_FAILED = 9;</code>
     */
    ORDER_CHANGE_REVISION_RISK_FAILED(9),
    /**
     * <code>ORDER_CHANGE_REVISION_SENT = 10;</code>
     */
    ORDER_CHANGE_REVISION_SENT(10),
    /**
     * <code>ORDER_CHANGE_REVISION_FAILED = 11;</code>
     */
    ORDER_CHANGE_REVISION_FAILED(11),
    /**
     * <code>ORDER_CHANGE_REVISION_SUCCESS = 12;</code>
     */
    ORDER_CHANGE_REVISION_SUCCESS(12),
    /**
     * <code>ORDER_CHANGE_REVISION_REJECTED = 13;</code>
     */
    ORDER_CHANGE_REVISION_REJECTED(13),
    /**
     * <code>ORDER_CHANGE_PULL_RISK_SUCCESS = 14;</code>
     */
    ORDER_CHANGE_PULL_RISK_SUCCESS(14),
    /**
     * <code>ORDER_CHANGE_PULL_RISK_FAILED = 15;</code>
     */
    ORDER_CHANGE_PULL_RISK_FAILED(15),
    /**
     * <code>ORDER_CHANGE_PULL_SENT = 16;</code>
     */
    ORDER_CHANGE_PULL_SENT(16),
    /**
     * <code>ORDER_CHANGE_PULL_FAILED = 17;</code>
     */
    ORDER_CHANGE_PULL_FAILED(17),
    /**
     * <code>ORDER_CHANGE_PULL_SUCCESS = 18;</code>
     */
    ORDER_CHANGE_PULL_SUCCESS(18),
    /**
     * <code>ORDER_CHANGE_PULL_REJECTED = 19;</code>
     */
    ORDER_CHANGE_PULL_REJECTED(19),
    /**
     * <code>ORDER_CHANGE_TRADE = 20;</code>
     */
    ORDER_CHANGE_TRADE(20),
    /**
     * <code>ORDER_CHANGE_TRADE_COMPLETED = 21;</code>
     */
    ORDER_CHANGE_TRADE_COMPLETED(21),
    /**
     * <code>ORDER_CHANGE_TRADE_BUSTED = 22;</code>
     */
    ORDER_CHANGE_TRADE_BUSTED(22),
    /**
     * <code>ORDER_CHANGE_HANDOVER = 23;</code>
     */
    ORDER_CHANGE_HANDOVER(23),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_RISK_SUCCESS = 24;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_RISK_SUCCESS(24),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_RISK_FAILED = 25;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_RISK_FAILED(25),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_SENT = 26;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_SENT(26),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_FAILED = 27;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_FAILED(27),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_SUCCESS = 28;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_SUCCESS(28),
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_REJECTED = 29;</code>
     */
    ORDER_CHANGE_STATUS_REQUEST_REJECTED(29),
    /**
     * <code>ORDER_CHANGE_ROLLOVER = 30;</code>
     */
    ORDER_CHANGE_ROLLOVER(30),
    /**
     * <code>ORDER_CHANGE_TAG_SUCCESS = 31;</code>
     */
    ORDER_CHANGE_TAG_SUCCESS(31),
    /**
     * <code>ORDER_CHANGE_TAG_FAILED = 32;</code>
     */
    ORDER_CHANGE_TAG_FAILED(32),
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_SUCCESS = 33;</code>
     */
    ORDER_CHANGE_ADD_PIT_TRADE_SUCCESS(33),
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_FAILED = 34;</code>
     */
    ORDER_CHANGE_ADD_PIT_TRADE_FAILED(34),
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_REJECTED = 35;</code>
     */
    ORDER_CHANGE_ADD_PIT_TRADE_REJECTED(35),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_CHANGE_NONE = 0;</code>
     */
    public static final int ORDER_CHANGE_NONE_VALUE = 0;
    /**
     * <code>ORDER_CHANGE_FAILED = 1;</code>
     */
    public static final int ORDER_CHANGE_FAILED_VALUE = 1;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_RISK_SUCCESS = 2;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_RISK_SUCCESS_VALUE = 2;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_RISK_REJECTED = 3;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_RISK_REJECTED_VALUE = 3;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_SENT = 4;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_SENT_VALUE = 4;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_FAILED = 5;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_FAILED_VALUE = 5;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_SUCCESS = 6;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_SUCCESS_VALUE = 6;
    /**
     * <code>ORDER_CHANGE_SUBMISSION_REJECTED = 7;</code>
     */
    public static final int ORDER_CHANGE_SUBMISSION_REJECTED_VALUE = 7;
    /**
     * <code>ORDER_CHANGE_REVISION_RISK_SUCCESS = 8;</code>
     */
    public static final int ORDER_CHANGE_REVISION_RISK_SUCCESS_VALUE = 8;
    /**
     * <code>ORDER_CHANGE_REVISION_RISK_FAILED = 9;</code>
     */
    public static final int ORDER_CHANGE_REVISION_RISK_FAILED_VALUE = 9;
    /**
     * <code>ORDER_CHANGE_REVISION_SENT = 10;</code>
     */
    public static final int ORDER_CHANGE_REVISION_SENT_VALUE = 10;
    /**
     * <code>ORDER_CHANGE_REVISION_FAILED = 11;</code>
     */
    public static final int ORDER_CHANGE_REVISION_FAILED_VALUE = 11;
    /**
     * <code>ORDER_CHANGE_REVISION_SUCCESS = 12;</code>
     */
    public static final int ORDER_CHANGE_REVISION_SUCCESS_VALUE = 12;
    /**
     * <code>ORDER_CHANGE_REVISION_REJECTED = 13;</code>
     */
    public static final int ORDER_CHANGE_REVISION_REJECTED_VALUE = 13;
    /**
     * <code>ORDER_CHANGE_PULL_RISK_SUCCESS = 14;</code>
     */
    public static final int ORDER_CHANGE_PULL_RISK_SUCCESS_VALUE = 14;
    /**
     * <code>ORDER_CHANGE_PULL_RISK_FAILED = 15;</code>
     */
    public static final int ORDER_CHANGE_PULL_RISK_FAILED_VALUE = 15;
    /**
     * <code>ORDER_CHANGE_PULL_SENT = 16;</code>
     */
    public static final int ORDER_CHANGE_PULL_SENT_VALUE = 16;
    /**
     * <code>ORDER_CHANGE_PULL_FAILED = 17;</code>
     */
    public static final int ORDER_CHANGE_PULL_FAILED_VALUE = 17;
    /**
     * <code>ORDER_CHANGE_PULL_SUCCESS = 18;</code>
     */
    public static final int ORDER_CHANGE_PULL_SUCCESS_VALUE = 18;
    /**
     * <code>ORDER_CHANGE_PULL_REJECTED = 19;</code>
     */
    public static final int ORDER_CHANGE_PULL_REJECTED_VALUE = 19;
    /**
     * <code>ORDER_CHANGE_TRADE = 20;</code>
     */
    public static final int ORDER_CHANGE_TRADE_VALUE = 20;
    /**
     * <code>ORDER_CHANGE_TRADE_COMPLETED = 21;</code>
     */
    public static final int ORDER_CHANGE_TRADE_COMPLETED_VALUE = 21;
    /**
     * <code>ORDER_CHANGE_TRADE_BUSTED = 22;</code>
     */
    public static final int ORDER_CHANGE_TRADE_BUSTED_VALUE = 22;
    /**
     * <code>ORDER_CHANGE_HANDOVER = 23;</code>
     */
    public static final int ORDER_CHANGE_HANDOVER_VALUE = 23;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_RISK_SUCCESS = 24;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_RISK_SUCCESS_VALUE = 24;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_RISK_FAILED = 25;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_RISK_FAILED_VALUE = 25;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_SENT = 26;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_SENT_VALUE = 26;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_FAILED = 27;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_FAILED_VALUE = 27;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_SUCCESS = 28;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_SUCCESS_VALUE = 28;
    /**
     * <code>ORDER_CHANGE_STATUS_REQUEST_REJECTED = 29;</code>
     */
    public static final int ORDER_CHANGE_STATUS_REQUEST_REJECTED_VALUE = 29;
    /**
     * <code>ORDER_CHANGE_ROLLOVER = 30;</code>
     */
    public static final int ORDER_CHANGE_ROLLOVER_VALUE = 30;
    /**
     * <code>ORDER_CHANGE_TAG_SUCCESS = 31;</code>
     */
    public static final int ORDER_CHANGE_TAG_SUCCESS_VALUE = 31;
    /**
     * <code>ORDER_CHANGE_TAG_FAILED = 32;</code>
     */
    public static final int ORDER_CHANGE_TAG_FAILED_VALUE = 32;
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_SUCCESS = 33;</code>
     */
    public static final int ORDER_CHANGE_ADD_PIT_TRADE_SUCCESS_VALUE = 33;
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_FAILED = 34;</code>
     */
    public static final int ORDER_CHANGE_ADD_PIT_TRADE_FAILED_VALUE = 34;
    /**
     * <code>ORDER_CHANGE_ADD_PIT_TRADE_REJECTED = 35;</code>
     */
    public static final int ORDER_CHANGE_ADD_PIT_TRADE_REJECTED_VALUE = 35;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderChange valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrderChange forNumber(int value) {
      switch (value) {
        case 0: return ORDER_CHANGE_NONE;
        case 1: return ORDER_CHANGE_FAILED;
        case 2: return ORDER_CHANGE_SUBMISSION_RISK_SUCCESS;
        case 3: return ORDER_CHANGE_SUBMISSION_RISK_REJECTED;
        case 4: return ORDER_CHANGE_SUBMISSION_SENT;
        case 5: return ORDER_CHANGE_SUBMISSION_FAILED;
        case 6: return ORDER_CHANGE_SUBMISSION_SUCCESS;
        case 7: return ORDER_CHANGE_SUBMISSION_REJECTED;
        case 8: return ORDER_CHANGE_REVISION_RISK_SUCCESS;
        case 9: return ORDER_CHANGE_REVISION_RISK_FAILED;
        case 10: return ORDER_CHANGE_REVISION_SENT;
        case 11: return ORDER_CHANGE_REVISION_FAILED;
        case 12: return ORDER_CHANGE_REVISION_SUCCESS;
        case 13: return ORDER_CHANGE_REVISION_REJECTED;
        case 14: return ORDER_CHANGE_PULL_RISK_SUCCESS;
        case 15: return ORDER_CHANGE_PULL_RISK_FAILED;
        case 16: return ORDER_CHANGE_PULL_SENT;
        case 17: return ORDER_CHANGE_PULL_FAILED;
        case 18: return ORDER_CHANGE_PULL_SUCCESS;
        case 19: return ORDER_CHANGE_PULL_REJECTED;
        case 20: return ORDER_CHANGE_TRADE;
        case 21: return ORDER_CHANGE_TRADE_COMPLETED;
        case 22: return ORDER_CHANGE_TRADE_BUSTED;
        case 23: return ORDER_CHANGE_HANDOVER;
        case 24: return ORDER_CHANGE_STATUS_REQUEST_RISK_SUCCESS;
        case 25: return ORDER_CHANGE_STATUS_REQUEST_RISK_FAILED;
        case 26: return ORDER_CHANGE_STATUS_REQUEST_SENT;
        case 27: return ORDER_CHANGE_STATUS_REQUEST_FAILED;
        case 28: return ORDER_CHANGE_STATUS_REQUEST_SUCCESS;
        case 29: return ORDER_CHANGE_STATUS_REQUEST_REJECTED;
        case 30: return ORDER_CHANGE_ROLLOVER;
        case 31: return ORDER_CHANGE_TAG_SUCCESS;
        case 32: return ORDER_CHANGE_TAG_FAILED;
        case 33: return ORDER_CHANGE_ADD_PIT_TRADE_SUCCESS;
        case 34: return ORDER_CHANGE_ADD_PIT_TRADE_FAILED;
        case 35: return ORDER_CHANGE_ADD_PIT_TRADE_REJECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderChange>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderChange> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderChange>() {
            public OrderChange findValueByNumber(int number) {
              return OrderChange.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(15);
    }

    private static final OrderChange[] VALUES = values();

    public static OrderChange valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderChange(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OrderChange)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OrderStatus}
   */
  public enum OrderStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_STATUS_NONE = 0;</code>
     */
    ORDER_STATUS_NONE(0),
    /**
     * <code>ORDER_STATUS_WORKING = 1;</code>
     */
    ORDER_STATUS_WORKING(1),
    /**
     * <code>ORDER_STATUS_FINISHED = 2;</code>
     */
    ORDER_STATUS_FINISHED(2),
    /**
     * <code>ORDER_STATUS_REJECTED = 3;</code>
     */
    ORDER_STATUS_REJECTED(3),
    /**
     * <code>ORDER_STATUS_HELD = 4;</code>
     */
    ORDER_STATUS_HELD(4),
    /**
     * <code>ORDER_STATUS_NO_CHANGE = 5;</code>
     */
    ORDER_STATUS_NO_CHANGE(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_STATUS_NONE = 0;</code>
     */
    public static final int ORDER_STATUS_NONE_VALUE = 0;
    /**
     * <code>ORDER_STATUS_WORKING = 1;</code>
     */
    public static final int ORDER_STATUS_WORKING_VALUE = 1;
    /**
     * <code>ORDER_STATUS_FINISHED = 2;</code>
     */
    public static final int ORDER_STATUS_FINISHED_VALUE = 2;
    /**
     * <code>ORDER_STATUS_REJECTED = 3;</code>
     */
    public static final int ORDER_STATUS_REJECTED_VALUE = 3;
    /**
     * <code>ORDER_STATUS_HELD = 4;</code>
     */
    public static final int ORDER_STATUS_HELD_VALUE = 4;
    /**
     * <code>ORDER_STATUS_NO_CHANGE = 5;</code>
     */
    public static final int ORDER_STATUS_NO_CHANGE_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrderStatus forNumber(int value) {
      switch (value) {
        case 0: return ORDER_STATUS_NONE;
        case 1: return ORDER_STATUS_WORKING;
        case 2: return ORDER_STATUS_FINISHED;
        case 3: return ORDER_STATUS_REJECTED;
        case 4: return ORDER_STATUS_HELD;
        case 5: return ORDER_STATUS_NO_CHANGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderStatus>() {
            public OrderStatus findValueByNumber(int number) {
              return OrderStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(16);
    }

    private static final OrderStatus[] VALUES = values();

    public static OrderStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OrderStatus)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ResponsePending}
   */
  public enum ResponsePending
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESPONSE_PENDING_NONE = 0;</code>
     */
    RESPONSE_PENDING_NONE(0),
    /**
     * <code>RESPONSE_PENDING_SUBMISSION = 1;</code>
     */
    RESPONSE_PENDING_SUBMISSION(1),
    /**
     * <code>RESPONSE_PENDING_REVISION = 2;</code>
     */
    RESPONSE_PENDING_REVISION(2),
    /**
     * <code>RESPONSE_PENDING_PULL = 3;</code>
     */
    RESPONSE_PENDING_PULL(3),
    /**
     * <code>RESPONSE_PENDING_STATUS = 4;</code>
     */
    RESPONSE_PENDING_STATUS(4),
    /**
     * <code>RESPONSE_PENDING_NO_CHANGE = 5;</code>
     */
    RESPONSE_PENDING_NO_CHANGE(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RESPONSE_PENDING_NONE = 0;</code>
     */
    public static final int RESPONSE_PENDING_NONE_VALUE = 0;
    /**
     * <code>RESPONSE_PENDING_SUBMISSION = 1;</code>
     */
    public static final int RESPONSE_PENDING_SUBMISSION_VALUE = 1;
    /**
     * <code>RESPONSE_PENDING_REVISION = 2;</code>
     */
    public static final int RESPONSE_PENDING_REVISION_VALUE = 2;
    /**
     * <code>RESPONSE_PENDING_PULL = 3;</code>
     */
    public static final int RESPONSE_PENDING_PULL_VALUE = 3;
    /**
     * <code>RESPONSE_PENDING_STATUS = 4;</code>
     */
    public static final int RESPONSE_PENDING_STATUS_VALUE = 4;
    /**
     * <code>RESPONSE_PENDING_NO_CHANGE = 5;</code>
     */
    public static final int RESPONSE_PENDING_NO_CHANGE_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResponsePending valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ResponsePending forNumber(int value) {
      switch (value) {
        case 0: return RESPONSE_PENDING_NONE;
        case 1: return RESPONSE_PENDING_SUBMISSION;
        case 2: return RESPONSE_PENDING_REVISION;
        case 3: return RESPONSE_PENDING_PULL;
        case 4: return RESPONSE_PENDING_STATUS;
        case 5: return RESPONSE_PENDING_NO_CHANGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ResponsePending>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ResponsePending> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ResponsePending>() {
            public ResponsePending findValueByNumber(int number) {
              return ResponsePending.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(17);
    }

    private static final ResponsePending[] VALUES = values();

    public static ResponsePending valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ResponsePending(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ResponsePending)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ActivationType}
   */
  public enum ActivationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACTIVATION_TYPE_IMMEDIATE = 0;</code>
     */
    ACTIVATION_TYPE_IMMEDIATE(0),
    /**
     * <code>ACTIVATION_TYPE_HOLD = 1;</code>
     */
    ACTIVATION_TYPE_HOLD(1),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED = 2;</code>
     */
    ACTIVATION_TYPE_TRIGGERED(2),
    /**
     * <code>ACTIVATION_TYPE_AT_OR_AFTER_TIME = 3;</code>
     */
    ACTIVATION_TYPE_AT_OR_AFTER_TIME(3),
    /**
     * <code>ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TICKS = 4;</code>
     */
    ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TICKS(4),
    /**
     * <code>ACTIVATION_TYPE_AT_OR_BELOW_TRADE_TICKS = 5;</code>
     */
    ACTIVATION_TYPE_AT_OR_BELOW_TRADE_TICKS(5),
    /**
     * <code>ACTIVATION_TYPE_ON_MARKET_MODE = 6;</code>
     */
    ACTIVATION_TYPE_ON_MARKET_MODE(6),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME = 7;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME(7),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TRADE_TICKS = 8;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TRADE_TICKS(8),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TICKS = 9;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TICKS(9),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_ON_MARKET_MODE = 10;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_ON_MARKET_MODE(10),
    /**
     * <code>ACTIVATION_TYPE_QUEUE = 11;</code>
     */
    ACTIVATION_TYPE_QUEUE(11),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_QUEUE = 12;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_QUEUE(12),
    /**
     * <code>ACTIVATION_TYPE_PIT_FILLED_QUEUE = 13;</code>
     */
    ACTIVATION_TYPE_PIT_FILLED_QUEUE(13),
    /**
     * <code>ACTIVATION_TYPE_AT_OR_ABOVE_TICKS = 14;</code>
     */
    ACTIVATION_TYPE_AT_OR_ABOVE_TICKS(14),
    /**
     * <code>ACTIVATION_TYPE_AT_OR_BELOW_TICKS = 15;</code>
     */
    ACTIVATION_TYPE_AT_OR_BELOW_TICKS(15),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS = 16;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS(16),
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TICKS = 17;</code>
     */
    ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TICKS(17),
    /**
     * <code>ACTIVATION_TYPE_MARKET_ON_CLOSE = 18;</code>
     */
    ACTIVATION_TYPE_MARKET_ON_CLOSE(18),
    /**
     * <code>ACTIVATION_TYPE_UNDEFINED = -1;</code>
     */
    ACTIVATION_TYPE_UNDEFINED(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACTIVATION_TYPE_IMMEDIATE = 0;</code>
     */
    public static final int ACTIVATION_TYPE_IMMEDIATE_VALUE = 0;
    /**
     * <code>ACTIVATION_TYPE_HOLD = 1;</code>
     */
    public static final int ACTIVATION_TYPE_HOLD_VALUE = 1;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED = 2;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_VALUE = 2;
    /**
     * <code>ACTIVATION_TYPE_AT_OR_AFTER_TIME = 3;</code>
     */
    public static final int ACTIVATION_TYPE_AT_OR_AFTER_TIME_VALUE = 3;
    /**
     * <code>ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TICKS = 4;</code>
     */
    public static final int ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TICKS_VALUE = 4;
    /**
     * <code>ACTIVATION_TYPE_AT_OR_BELOW_TRADE_TICKS = 5;</code>
     */
    public static final int ACTIVATION_TYPE_AT_OR_BELOW_TRADE_TICKS_VALUE = 5;
    /**
     * <code>ACTIVATION_TYPE_ON_MARKET_MODE = 6;</code>
     */
    public static final int ACTIVATION_TYPE_ON_MARKET_MODE_VALUE = 6;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME = 7;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME_VALUE = 7;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TRADE_TICKS = 8;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TRADE_TICKS_VALUE = 8;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TICKS = 9;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TICKS_VALUE = 9;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_ON_MARKET_MODE = 10;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_ON_MARKET_MODE_VALUE = 10;
    /**
     * <code>ACTIVATION_TYPE_QUEUE = 11;</code>
     */
    public static final int ACTIVATION_TYPE_QUEUE_VALUE = 11;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_QUEUE = 12;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_QUEUE_VALUE = 12;
    /**
     * <code>ACTIVATION_TYPE_PIT_FILLED_QUEUE = 13;</code>
     */
    public static final int ACTIVATION_TYPE_PIT_FILLED_QUEUE_VALUE = 13;
    /**
     * <code>ACTIVATION_TYPE_AT_OR_ABOVE_TICKS = 14;</code>
     */
    public static final int ACTIVATION_TYPE_AT_OR_ABOVE_TICKS_VALUE = 14;
    /**
     * <code>ACTIVATION_TYPE_AT_OR_BELOW_TICKS = 15;</code>
     */
    public static final int ACTIVATION_TYPE_AT_OR_BELOW_TICKS_VALUE = 15;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS = 16;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS_VALUE = 16;
    /**
     * <code>ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TICKS = 17;</code>
     */
    public static final int ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TICKS_VALUE = 17;
    /**
     * <code>ACTIVATION_TYPE_MARKET_ON_CLOSE = 18;</code>
     */
    public static final int ACTIVATION_TYPE_MARKET_ON_CLOSE_VALUE = 18;
    /**
     * <code>ACTIVATION_TYPE_UNDEFINED = -1;</code>
     */
    public static final int ACTIVATION_TYPE_UNDEFINED_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActivationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ActivationType forNumber(int value) {
      switch (value) {
        case 0: return ACTIVATION_TYPE_IMMEDIATE;
        case 1: return ACTIVATION_TYPE_HOLD;
        case 2: return ACTIVATION_TYPE_TRIGGERED;
        case 3: return ACTIVATION_TYPE_AT_OR_AFTER_TIME;
        case 4: return ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TICKS;
        case 5: return ACTIVATION_TYPE_AT_OR_BELOW_TRADE_TICKS;
        case 6: return ACTIVATION_TYPE_ON_MARKET_MODE;
        case 7: return ACTIVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME;
        case 8: return ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TRADE_TICKS;
        case 9: return ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TICKS;
        case 10: return ACTIVATION_TYPE_TRIGGERED_ON_MARKET_MODE;
        case 11: return ACTIVATION_TYPE_QUEUE;
        case 12: return ACTIVATION_TYPE_TRIGGERED_QUEUE;
        case 13: return ACTIVATION_TYPE_PIT_FILLED_QUEUE;
        case 14: return ACTIVATION_TYPE_AT_OR_ABOVE_TICKS;
        case 15: return ACTIVATION_TYPE_AT_OR_BELOW_TICKS;
        case 16: return ACTIVATION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS;
        case 17: return ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW_TICKS;
        case 18: return ACTIVATION_TYPE_MARKET_ON_CLOSE;
        case -1: return ACTIVATION_TYPE_UNDEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ActivationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ActivationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActivationType>() {
            public ActivationType findValueByNumber(int number) {
              return ActivationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(18);
    }

    private static final ActivationType[] VALUES = values();

    public static ActivationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ActivationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ActivationType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.PriceType}
   */
  public enum PriceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRICE_TYPE_MARKET = 0;</code>
     */
    PRICE_TYPE_MARKET(0),
    /**
     * <code>PRICE_TYPE_LIMIT = 1;</code>
     */
    PRICE_TYPE_LIMIT(1),
    /**
     * <code>PRICE_TYPE_STOP_MARKET = 2;</code>
     */
    PRICE_TYPE_STOP_MARKET(2),
    /**
     * <code>PRICE_TYPE_STOP_LIMIT = 3;</code>
     */
    PRICE_TYPE_STOP_LIMIT(3),
    /**
     * <code>PRICE_TYPE_OVERNIGHT_POSITION = 4;</code>
     */
    PRICE_TYPE_OVERNIGHT_POSITION(4),
    /**
     * <code>PRICE_TYPE_PIT = 5;</code>
     */
    PRICE_TYPE_PIT(5),
    /**
     * <code>PRICE_TYPE_MARKET_IF_TOUCHED = 6;</code>
     */
    PRICE_TYPE_MARKET_IF_TOUCHED(6),
    /**
     * <code>PRICE_TYPE_STOP_SAME_LIMIT = 7;</code>
     */
    PRICE_TYPE_STOP_SAME_LIMIT(7),
    /**
     * <code>PRICE_TYPE_JOIN = 8;</code>
     */
    PRICE_TYPE_JOIN(8),
    /**
     * <code>PRICE_TYPE_HIT = 9;</code>
     */
    PRICE_TYPE_HIT(9),
    /**
     * <code>PRICE_TYPE_BACK_OFFICE_POSITION = 10;</code>
     */
    PRICE_TYPE_BACK_OFFICE_POSITION(10),
    /**
     * <code>PRICE_TYPE_SYNTHETIC_MARKET = 11;</code>
     */
    PRICE_TYPE_SYNTHETIC_MARKET(11),
    /**
     * <code>PRICE_TYPE_SYNTHETIC_LIMIT = 12;</code>
     */
    PRICE_TYPE_SYNTHETIC_LIMIT(12),
    /**
     * <code>PRICE_TYPE_SYNTHETIC_STOP_MARKET = 13;</code>
     */
    PRICE_TYPE_SYNTHETIC_STOP_MARKET(13),
    /**
     * <code>PRICE_TYPE_SYNTHETIC_STOP_LIMIT = 14;</code>
     */
    PRICE_TYPE_SYNTHETIC_STOP_LIMIT(14),
    /**
     * <code>PRICE_TYPE_RFQ = 15;</code>
     */
    PRICE_TYPE_RFQ(15),
    /**
     * <code>PRICE_TYPE_FLATTEN = 16;</code>
     */
    PRICE_TYPE_FLATTEN(16),
    /**
     * <code>PRICE_TYPE_IMPORT = 17;</code>
     */
    PRICE_TYPE_IMPORT(17),
    /**
     * <code>PRICE_TYPE_OPTIONS_SETTLEMENT = 18;</code>
     */
    PRICE_TYPE_OPTIONS_SETTLEMENT(18),
    /**
     * <code>PRICE_TYPE_UNDEFINED = -1;</code>
     */
    PRICE_TYPE_UNDEFINED(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PRICE_TYPE_MARKET = 0;</code>
     */
    public static final int PRICE_TYPE_MARKET_VALUE = 0;
    /**
     * <code>PRICE_TYPE_LIMIT = 1;</code>
     */
    public static final int PRICE_TYPE_LIMIT_VALUE = 1;
    /**
     * <code>PRICE_TYPE_STOP_MARKET = 2;</code>
     */
    public static final int PRICE_TYPE_STOP_MARKET_VALUE = 2;
    /**
     * <code>PRICE_TYPE_STOP_LIMIT = 3;</code>
     */
    public static final int PRICE_TYPE_STOP_LIMIT_VALUE = 3;
    /**
     * <code>PRICE_TYPE_OVERNIGHT_POSITION = 4;</code>
     */
    public static final int PRICE_TYPE_OVERNIGHT_POSITION_VALUE = 4;
    /**
     * <code>PRICE_TYPE_PIT = 5;</code>
     */
    public static final int PRICE_TYPE_PIT_VALUE = 5;
    /**
     * <code>PRICE_TYPE_MARKET_IF_TOUCHED = 6;</code>
     */
    public static final int PRICE_TYPE_MARKET_IF_TOUCHED_VALUE = 6;
    /**
     * <code>PRICE_TYPE_STOP_SAME_LIMIT = 7;</code>
     */
    public static final int PRICE_TYPE_STOP_SAME_LIMIT_VALUE = 7;
    /**
     * <code>PRICE_TYPE_JOIN = 8;</code>
     */
    public static final int PRICE_TYPE_JOIN_VALUE = 8;
    /**
     * <code>PRICE_TYPE_HIT = 9;</code>
     */
    public static final int PRICE_TYPE_HIT_VALUE = 9;
    /**
     * <code>PRICE_TYPE_BACK_OFFICE_POSITION = 10;</code>
     */
    public static final int PRICE_TYPE_BACK_OFFICE_POSITION_VALUE = 10;
    /**
     * <code>PRICE_TYPE_SYNTHETIC_MARKET = 11;</code>
     */
    public static final int PRICE_TYPE_SYNTHETIC_MARKET_VALUE = 11;
    /**
     * <code>PRICE_TYPE_SYNTHETIC_LIMIT = 12;</code>
     */
    public static final int PRICE_TYPE_SYNTHETIC_LIMIT_VALUE = 12;
    /**
     * <code>PRICE_TYPE_SYNTHETIC_STOP_MARKET = 13;</code>
     */
    public static final int PRICE_TYPE_SYNTHETIC_STOP_MARKET_VALUE = 13;
    /**
     * <code>PRICE_TYPE_SYNTHETIC_STOP_LIMIT = 14;</code>
     */
    public static final int PRICE_TYPE_SYNTHETIC_STOP_LIMIT_VALUE = 14;
    /**
     * <code>PRICE_TYPE_RFQ = 15;</code>
     */
    public static final int PRICE_TYPE_RFQ_VALUE = 15;
    /**
     * <code>PRICE_TYPE_FLATTEN = 16;</code>
     */
    public static final int PRICE_TYPE_FLATTEN_VALUE = 16;
    /**
     * <code>PRICE_TYPE_IMPORT = 17;</code>
     */
    public static final int PRICE_TYPE_IMPORT_VALUE = 17;
    /**
     * <code>PRICE_TYPE_OPTIONS_SETTLEMENT = 18;</code>
     */
    public static final int PRICE_TYPE_OPTIONS_SETTLEMENT_VALUE = 18;
    /**
     * <code>PRICE_TYPE_UNDEFINED = -1;</code>
     */
    public static final int PRICE_TYPE_UNDEFINED_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PriceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PriceType forNumber(int value) {
      switch (value) {
        case 0: return PRICE_TYPE_MARKET;
        case 1: return PRICE_TYPE_LIMIT;
        case 2: return PRICE_TYPE_STOP_MARKET;
        case 3: return PRICE_TYPE_STOP_LIMIT;
        case 4: return PRICE_TYPE_OVERNIGHT_POSITION;
        case 5: return PRICE_TYPE_PIT;
        case 6: return PRICE_TYPE_MARKET_IF_TOUCHED;
        case 7: return PRICE_TYPE_STOP_SAME_LIMIT;
        case 8: return PRICE_TYPE_JOIN;
        case 9: return PRICE_TYPE_HIT;
        case 10: return PRICE_TYPE_BACK_OFFICE_POSITION;
        case 11: return PRICE_TYPE_SYNTHETIC_MARKET;
        case 12: return PRICE_TYPE_SYNTHETIC_LIMIT;
        case 13: return PRICE_TYPE_SYNTHETIC_STOP_MARKET;
        case 14: return PRICE_TYPE_SYNTHETIC_STOP_LIMIT;
        case 15: return PRICE_TYPE_RFQ;
        case 16: return PRICE_TYPE_FLATTEN;
        case 17: return PRICE_TYPE_IMPORT;
        case 18: return PRICE_TYPE_OPTIONS_SETTLEMENT;
        case -1: return PRICE_TYPE_UNDEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PriceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PriceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PriceType>() {
            public PriceType findValueByNumber(int number) {
              return PriceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(19);
    }

    private static final PriceType[] VALUES = values();

    public static PriceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PriceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.PriceType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.TimeType}
   */
  public enum TimeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TIME_TYPE_NORMAL = 0;</code>
     */
    TIME_TYPE_NORMAL(0),
    /**
     * <code>TIME_TYPE_IMMEDIATE_AND_CANCEL = 1;</code>
     */
    TIME_TYPE_IMMEDIATE_AND_CANCEL(1),
    /**
     * <code>TIME_TYPE_GOOD_TILL_CANCELLED = 2;</code>
     */
    TIME_TYPE_GOOD_TILL_CANCELLED(2),
    /**
     * <code>TIME_TYPE_COMPLETE_VOLUME = 3;</code>
     */
    TIME_TYPE_COMPLETE_VOLUME(3),
    /**
     * <code>TIME_TYPE_MARKET_ON_OPEN = 4;</code>
     */
    TIME_TYPE_MARKET_ON_OPEN(4),
    /**
     * <code>TIME_TYPE_MARKET_ON_CLOSE = 5;</code>
     */
    TIME_TYPE_MARKET_ON_CLOSE(5),
    /**
     * <code>TIME_TYPE_UNDEFINED = -1;</code>
     */
    TIME_TYPE_UNDEFINED(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TIME_TYPE_NORMAL = 0;</code>
     */
    public static final int TIME_TYPE_NORMAL_VALUE = 0;
    /**
     * <code>TIME_TYPE_IMMEDIATE_AND_CANCEL = 1;</code>
     */
    public static final int TIME_TYPE_IMMEDIATE_AND_CANCEL_VALUE = 1;
    /**
     * <code>TIME_TYPE_GOOD_TILL_CANCELLED = 2;</code>
     */
    public static final int TIME_TYPE_GOOD_TILL_CANCELLED_VALUE = 2;
    /**
     * <code>TIME_TYPE_COMPLETE_VOLUME = 3;</code>
     */
    public static final int TIME_TYPE_COMPLETE_VOLUME_VALUE = 3;
    /**
     * <code>TIME_TYPE_MARKET_ON_OPEN = 4;</code>
     */
    public static final int TIME_TYPE_MARKET_ON_OPEN_VALUE = 4;
    /**
     * <code>TIME_TYPE_MARKET_ON_CLOSE = 5;</code>
     */
    public static final int TIME_TYPE_MARKET_ON_CLOSE_VALUE = 5;
    /**
     * <code>TIME_TYPE_UNDEFINED = -1;</code>
     */
    public static final int TIME_TYPE_UNDEFINED_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TimeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TimeType forNumber(int value) {
      switch (value) {
        case 0: return TIME_TYPE_NORMAL;
        case 1: return TIME_TYPE_IMMEDIATE_AND_CANCEL;
        case 2: return TIME_TYPE_GOOD_TILL_CANCELLED;
        case 3: return TIME_TYPE_COMPLETE_VOLUME;
        case 4: return TIME_TYPE_MARKET_ON_OPEN;
        case 5: return TIME_TYPE_MARKET_ON_CLOSE;
        case -1: return TIME_TYPE_UNDEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TimeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TimeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimeType>() {
            public TimeType findValueByNumber(int number) {
              return TimeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(20);
    }

    private static final TimeType[] VALUES = values();

    public static TimeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TimeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.TimeType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ApplicationType}
   */
  public enum ApplicationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>APPLICATION_TYPE_MANUAL = 0;</code>
     */
    APPLICATION_TYPE_MANUAL(0),
    /**
     * <code>APPLICATION_TYPE_ATS = 1;</code>
     */
    APPLICATION_TYPE_ATS(1),
    /**
     * <code>APPLICATION_TYPE_PROFESSIONAL = 2;</code>
     */
    APPLICATION_TYPE_PROFESSIONAL(2),
    /**
     * <code>APPLICATION_TYPE_NON_PROFESSIONAL = 3;</code>
     */
    APPLICATION_TYPE_NON_PROFESSIONAL(3),
    /**
     * <code>APPLICATION_TYPE_TRADE_DESK = 4;</code>
     */
    APPLICATION_TYPE_TRADE_DESK(4),
    /**
     * <code>APPLICATION_TYPE_WALLBOARD = 5;</code>
     */
    APPLICATION_TYPE_WALLBOARD(5),
    /**
     * <code>APPLICATION_TYPE_SUB_VENDOR = 6;</code>
     */
    APPLICATION_TYPE_SUB_VENDOR(6),
    /**
     * <code>APPLICATION_TYPE_ATS_DISPLAY = 7;</code>
     */
    APPLICATION_TYPE_ATS_DISPLAY(7),
    /**
     * <code>APPLICATION_TYPE_FINANCIAL_PROFESSIONAL = 8;</code>
     */
    APPLICATION_TYPE_FINANCIAL_PROFESSIONAL(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>APPLICATION_TYPE_MANUAL = 0;</code>
     */
    public static final int APPLICATION_TYPE_MANUAL_VALUE = 0;
    /**
     * <code>APPLICATION_TYPE_ATS = 1;</code>
     */
    public static final int APPLICATION_TYPE_ATS_VALUE = 1;
    /**
     * <code>APPLICATION_TYPE_PROFESSIONAL = 2;</code>
     */
    public static final int APPLICATION_TYPE_PROFESSIONAL_VALUE = 2;
    /**
     * <code>APPLICATION_TYPE_NON_PROFESSIONAL = 3;</code>
     */
    public static final int APPLICATION_TYPE_NON_PROFESSIONAL_VALUE = 3;
    /**
     * <code>APPLICATION_TYPE_TRADE_DESK = 4;</code>
     */
    public static final int APPLICATION_TYPE_TRADE_DESK_VALUE = 4;
    /**
     * <code>APPLICATION_TYPE_WALLBOARD = 5;</code>
     */
    public static final int APPLICATION_TYPE_WALLBOARD_VALUE = 5;
    /**
     * <code>APPLICATION_TYPE_SUB_VENDOR = 6;</code>
     */
    public static final int APPLICATION_TYPE_SUB_VENDOR_VALUE = 6;
    /**
     * <code>APPLICATION_TYPE_ATS_DISPLAY = 7;</code>
     */
    public static final int APPLICATION_TYPE_ATS_DISPLAY_VALUE = 7;
    /**
     * <code>APPLICATION_TYPE_FINANCIAL_PROFESSIONAL = 8;</code>
     */
    public static final int APPLICATION_TYPE_FINANCIAL_PROFESSIONAL_VALUE = 8;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ApplicationType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ApplicationType forNumber(int value) {
      switch (value) {
        case 0: return APPLICATION_TYPE_MANUAL;
        case 1: return APPLICATION_TYPE_ATS;
        case 2: return APPLICATION_TYPE_PROFESSIONAL;
        case 3: return APPLICATION_TYPE_NON_PROFESSIONAL;
        case 4: return APPLICATION_TYPE_TRADE_DESK;
        case 5: return APPLICATION_TYPE_WALLBOARD;
        case 6: return APPLICATION_TYPE_SUB_VENDOR;
        case 7: return APPLICATION_TYPE_ATS_DISPLAY;
        case 8: return APPLICATION_TYPE_FINANCIAL_PROFESSIONAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ApplicationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ApplicationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ApplicationType>() {
            public ApplicationType findValueByNumber(int number) {
              return ApplicationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(21);
    }

    private static final ApplicationType[] VALUES = values();

    public static ApplicationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ApplicationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ApplicationType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.BuySell}
   */
  public enum BuySell
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BUY_SELL_UNDEFINED = 0;</code>
     */
    BUY_SELL_UNDEFINED(0),
    /**
     * <code>BUY_SELL_BUY = 1;</code>
     */
    BUY_SELL_BUY(1),
    /**
     * <code>BUY_SELL_SELL = -1;</code>
     */
    BUY_SELL_SELL(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BUY_SELL_UNDEFINED = 0;</code>
     */
    public static final int BUY_SELL_UNDEFINED_VALUE = 0;
    /**
     * <code>BUY_SELL_BUY = 1;</code>
     */
    public static final int BUY_SELL_BUY_VALUE = 1;
    /**
     * <code>BUY_SELL_SELL = -1;</code>
     */
    public static final int BUY_SELL_SELL_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BuySell valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BuySell forNumber(int value) {
      switch (value) {
        case 0: return BUY_SELL_UNDEFINED;
        case 1: return BUY_SELL_BUY;
        case -1: return BUY_SELL_SELL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuySell>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BuySell> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuySell>() {
            public BuySell findValueByNumber(int number) {
              return BuySell.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(22);
    }

    private static final BuySell[] VALUES = values();

    public static BuySell valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BuySell(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.BuySell)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.CTI}
   */
  public enum CTI
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CTI_UNDEFINED = 0;</code>
     */
    CTI_UNDEFINED(0),
    /**
     * <code>CTI_MEMBER = 1;</code>
     */
    CTI_MEMBER(1),
    /**
     * <code>CTI_PROPRIETARY = 2;</code>
     */
    CTI_PROPRIETARY(2),
    /**
     * <code>CTI_BROKER_MEMBER = 3;</code>
     */
    CTI_BROKER_MEMBER(3),
    /**
     * <code>CTI_BROKER_CUSTOMER = 4;</code>
     */
    CTI_BROKER_CUSTOMER(4),
    /**
     * <code>CTI_NONE = -1;</code>
     */
    CTI_NONE(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CTI_UNDEFINED = 0;</code>
     */
    public static final int CTI_UNDEFINED_VALUE = 0;
    /**
     * <code>CTI_MEMBER = 1;</code>
     */
    public static final int CTI_MEMBER_VALUE = 1;
    /**
     * <code>CTI_PROPRIETARY = 2;</code>
     */
    public static final int CTI_PROPRIETARY_VALUE = 2;
    /**
     * <code>CTI_BROKER_MEMBER = 3;</code>
     */
    public static final int CTI_BROKER_MEMBER_VALUE = 3;
    /**
     * <code>CTI_BROKER_CUSTOMER = 4;</code>
     */
    public static final int CTI_BROKER_CUSTOMER_VALUE = 4;
    /**
     * <code>CTI_NONE = -1;</code>
     */
    public static final int CTI_NONE_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CTI valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CTI forNumber(int value) {
      switch (value) {
        case 0: return CTI_UNDEFINED;
        case 1: return CTI_MEMBER;
        case 2: return CTI_PROPRIETARY;
        case 3: return CTI_BROKER_MEMBER;
        case 4: return CTI_BROKER_CUSTOMER;
        case -1: return CTI_NONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CTI>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CTI> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CTI>() {
            public CTI findValueByNumber(int number) {
              return CTI.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(23);
    }

    private static final CTI[] VALUES = values();

    public static CTI valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CTI(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.CTI)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.Origin}
   */
  public enum Origin
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORIGIN_UNDEFINED = 0;</code>
     */
    ORIGIN_UNDEFINED(0),
    /**
     * <code>ORIGIN_CUSTOMER = 1;</code>
     */
    ORIGIN_CUSTOMER(1),
    /**
     * <code>ORIGIN_NON_CUSTOMER = 2;</code>
     */
    ORIGIN_NON_CUSTOMER(2),
    /**
     * <code>ORIGIN_OTHER_MEMBERS = 3;</code>
     */
    ORIGIN_OTHER_MEMBERS(3),
    /**
     * <code>ORIGIN_FLOOR_BROKERS = 4;</code>
     */
    ORIGIN_FLOOR_BROKERS(4),
    /**
     * <code>ORIGIN_POSTING_NONE = 5;</code>
     */
    ORIGIN_POSTING_NONE(5),
    /**
     * <code>ORIGIN_POSTING_MANUAL = 6;</code>
     */
    ORIGIN_POSTING_MANUAL(6),
    /**
     * <code>ORIGIN_POSTING_AUTOMATIC = 7;</code>
     */
    ORIGIN_POSTING_AUTOMATIC(7),
    /**
     * <code>ORIGIN_POSTING_GIVE_UP = 8;</code>
     */
    ORIGIN_POSTING_GIVE_UP(8),
    /**
     * <code>ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATION = 9;</code>
     */
    ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATION(9),
    /**
     * <code>ORIGIN_POSTING_MANUAL_AND_ACT_AUTHORISATION = 10;</code>
     */
    ORIGIN_POSTING_MANUAL_AND_ACT_AUTHORISATION(10),
    /**
     * <code>ORIGIN_PRINCIPAL = 11;</code>
     */
    ORIGIN_PRINCIPAL(11),
    /**
     * <code>ORIGIN_MARKET_MAKER = 12;</code>
     */
    ORIGIN_MARKET_MAKER(12),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORIGIN_UNDEFINED = 0;</code>
     */
    public static final int ORIGIN_UNDEFINED_VALUE = 0;
    /**
     * <code>ORIGIN_CUSTOMER = 1;</code>
     */
    public static final int ORIGIN_CUSTOMER_VALUE = 1;
    /**
     * <code>ORIGIN_NON_CUSTOMER = 2;</code>
     */
    public static final int ORIGIN_NON_CUSTOMER_VALUE = 2;
    /**
     * <code>ORIGIN_OTHER_MEMBERS = 3;</code>
     */
    public static final int ORIGIN_OTHER_MEMBERS_VALUE = 3;
    /**
     * <code>ORIGIN_FLOOR_BROKERS = 4;</code>
     */
    public static final int ORIGIN_FLOOR_BROKERS_VALUE = 4;
    /**
     * <code>ORIGIN_POSTING_NONE = 5;</code>
     */
    public static final int ORIGIN_POSTING_NONE_VALUE = 5;
    /**
     * <code>ORIGIN_POSTING_MANUAL = 6;</code>
     */
    public static final int ORIGIN_POSTING_MANUAL_VALUE = 6;
    /**
     * <code>ORIGIN_POSTING_AUTOMATIC = 7;</code>
     */
    public static final int ORIGIN_POSTING_AUTOMATIC_VALUE = 7;
    /**
     * <code>ORIGIN_POSTING_GIVE_UP = 8;</code>
     */
    public static final int ORIGIN_POSTING_GIVE_UP_VALUE = 8;
    /**
     * <code>ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATION = 9;</code>
     */
    public static final int ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATION_VALUE = 9;
    /**
     * <code>ORIGIN_POSTING_MANUAL_AND_ACT_AUTHORISATION = 10;</code>
     */
    public static final int ORIGIN_POSTING_MANUAL_AND_ACT_AUTHORISATION_VALUE = 10;
    /**
     * <code>ORIGIN_PRINCIPAL = 11;</code>
     */
    public static final int ORIGIN_PRINCIPAL_VALUE = 11;
    /**
     * <code>ORIGIN_MARKET_MAKER = 12;</code>
     */
    public static final int ORIGIN_MARKET_MAKER_VALUE = 12;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Origin valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Origin forNumber(int value) {
      switch (value) {
        case 0: return ORIGIN_UNDEFINED;
        case 1: return ORIGIN_CUSTOMER;
        case 2: return ORIGIN_NON_CUSTOMER;
        case 3: return ORIGIN_OTHER_MEMBERS;
        case 4: return ORIGIN_FLOOR_BROKERS;
        case 5: return ORIGIN_POSTING_NONE;
        case 6: return ORIGIN_POSTING_MANUAL;
        case 7: return ORIGIN_POSTING_AUTOMATIC;
        case 8: return ORIGIN_POSTING_GIVE_UP;
        case 9: return ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATION;
        case 10: return ORIGIN_POSTING_MANUAL_AND_ACT_AUTHORISATION;
        case 11: return ORIGIN_PRINCIPAL;
        case 12: return ORIGIN_MARKET_MAKER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Origin>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Origin> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Origin>() {
            public Origin findValueByNumber(int number) {
              return Origin.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(24);
    }

    private static final Origin[] VALUES = values();

    public static Origin valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Origin(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.Origin)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountCode}
   */
  public enum AccountCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_CODE_UNDEFINED = 0;</code>
     */
    ACCOUNT_CODE_UNDEFINED(0),
    /**
     * <code>ACCOUNT_CODE_NONE = 1;</code>
     */
    ACCOUNT_CODE_NONE(1),
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_TO_SINGLE_FIRM = 2;</code>
     */
    ACCOUNT_CODE_GIVE_UP_TO_SINGLE_FIRM(2),
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_TO_MULTIPLE_FIRMS = 3;</code>
     */
    ACCOUNT_CODE_GIVE_UP_TO_MULTIPLE_FIRMS(3),
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER = 4;</code>
     */
    ACCOUNT_CODE_MARKET_MAKER(4),
    /**
     * <code>ACCOUNT_CODE_AGENT_A1 = 5;</code>
     */
    ACCOUNT_CODE_AGENT_A1(5),
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_G1 = 6;</code>
     */
    ACCOUNT_CODE_GIVE_UP_G1(6),
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_G2 = 7;</code>
     */
    ACCOUNT_CODE_GIVE_UP_G2(7),
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER_M1 = 8;</code>
     */
    ACCOUNT_CODE_MARKET_MAKER_M1(8),
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER_M2 = 9;</code>
     */
    ACCOUNT_CODE_MARKET_MAKER_M2(9),
    /**
     * <code>ACCOUNT_CODE_PROPRIETARY_P1 = 10;</code>
     */
    ACCOUNT_CODE_PROPRIETARY_P1(10),
    /**
     * <code>ACCOUNT_CODE_PROPRIETARY_P2 = 11;</code>
     */
    ACCOUNT_CODE_PROPRIETARY_P2(11),
    /**
     * <code>ACCOUNT_CODE_SEGREGATED = 12;</code>
     */
    ACCOUNT_CODE_SEGREGATED(12),
    /**
     * <code>ACCOUNT_CODE_NON_SEGREGATED = 13;</code>
     */
    ACCOUNT_CODE_NON_SEGREGATED(13),
    /**
     * <code>ACCOUNT_CODE_HOUSE = 14;</code>
     */
    ACCOUNT_CODE_HOUSE(14),
    /**
     * <code>ACCOUNT_CODE_LOCAL = 15;</code>
     */
    ACCOUNT_CODE_LOCAL(15),
    /**
     * <code>ACCOUNT_CODE_DEFAULT = 16;</code>
     */
    ACCOUNT_CODE_DEFAULT(16),
    /**
     * <code>ACCOUNT_CODE_ALLOCATED = 17;</code>
     */
    ACCOUNT_CODE_ALLOCATED(17),
    /**
     * <code>ACCOUNT_CODE_SPLIT = 18;</code>
     */
    ACCOUNT_CODE_SPLIT(18),
    /**
     * <code>ACCOUNT_CODE_UNASSIGNED = 19;</code>
     */
    ACCOUNT_CODE_UNASSIGNED(19),
    /**
     * <code>ACCOUNT_CODE_GAS_ASSOCIATE = 20;</code>
     */
    ACCOUNT_CODE_GAS_ASSOCIATE(20),
    /**
     * <code>ACCOUNT_CODE_CUSTOMER = 21;</code>
     */
    ACCOUNT_CODE_CUSTOMER(21),
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_FUTURES = 22;</code>
     */
    ACCOUNT_CODE_US_CUSTOMER_FUTURES(22),
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_SWAPS = 23;</code>
     */
    ACCOUNT_CODE_US_CUSTOMER_SWAPS(23),
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_FBOT = 24;</code>
     */
    ACCOUNT_CODE_US_CUSTOMER_FBOT(24),
    /**
     * <code>ACCOUNT_CODE_FIRM = 25;</code>
     */
    ACCOUNT_CODE_FIRM(25),
    /**
     * <code>ACCOUNT_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUNT = 26;</code>
     */
    ACCOUNT_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUNT(26),
    /**
     * <code>ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT = 27;</code>
     */
    ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT(27),
    /**
     * <code>ACCOUNT_CODE_MEMBER_SIPC_PROTECTED_ACCOUNT = 28;</code>
     */
    ACCOUNT_CODE_MEMBER_SIPC_PROTECTED_ACCOUNT(28),
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATED_ACCOUNT = 29;</code>
     */
    ACCOUNT_CODE_USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATED_ACCOUNT(29),
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOUSE_ACCOUNT = 30;</code>
     */
    ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOUSE_ACCOUNT(30),
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_ACCOUNT = 31;</code>
     */
    ACCOUNT_CODE_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_ACCOUNT(31),
    /**
     * <code>ACCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT = 32;</code>
     */
    ACCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT(32),
    /**
     * <code>ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED_ACCOUNT = 33;</code>
     */
    ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED_ACCOUNT(33),
    /**
     * <code>ACCOUNT_CODE_CUSTOMER_FLOOR_BROKER_WORKSTATION = 34;</code>
     */
    ACCOUNT_CODE_CUSTOMER_FLOOR_BROKER_WORKSTATION(34),
    /**
     * <code>ACCOUNT_CODE_AGENT_A2 = 35;</code>
     */
    ACCOUNT_CODE_AGENT_A2(35),
    /**
     * <code>ACCOUNT_CODE_AGENT_A3 = 36;</code>
     */
    ACCOUNT_CODE_AGENT_A3(36),
    /**
     * <code>ACCOUNT_CODE_AGENT_A4 = 37;</code>
     */
    ACCOUNT_CODE_AGENT_A4(37),
    /**
     * <code>ACCOUNT_CODE_AGENT_A5 = 38;</code>
     */
    ACCOUNT_CODE_AGENT_A5(38),
    /**
     * <code>ACCOUNT_CODE_AGENT_A6 = 39;</code>
     */
    ACCOUNT_CODE_AGENT_A6(39),
    /**
     * <code>ACCOUNT_CODE_AGENT_A7 = 40;</code>
     */
    ACCOUNT_CODE_AGENT_A7(40),
    /**
     * <code>ACCOUNT_CODE_AGENT_A8 = 41;</code>
     */
    ACCOUNT_CODE_AGENT_A8(41),
    /**
     * <code>ACCOUNT_CODE_AGENT_A9 = 42;</code>
     */
    ACCOUNT_CODE_AGENT_A9(42),
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_E = 43;</code>
     */
    ACCOUNT_CODE_CLIENT_SEGREGATED_E(43),
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_K = 44;</code>
     */
    ACCOUNT_CODE_CLIENT_SEGREGATED_K(44),
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_R = 45;</code>
     */
    ACCOUNT_CODE_CLIENT_SEGREGATED_R(45),
    /**
     * <code>ACCOUNT_CODE_SEGREGATED_T = 46;</code>
     */
    ACCOUNT_CODE_SEGREGATED_T(46),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_CASS = 47;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_CASS(47),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_TTFCA = 48;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_TTFCA(48),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_CASS = 49;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_CASS(49),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_TTFCA = 50;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_TTFCA(50),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS = 51;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS(51),
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_NETS_TTFCA = 52;</code>
     */
    ACCOUNT_CODE_INDIRECT_CLEARING_NETS_TTFCA(52),
    /**
     * <code>ACCOUNT_CODE_RO = 53;</code>
     */
    ACCOUNT_CODE_RO(53),
    /**
     * <code>ACCOUNT_CODE_LIQUIDITY_PROVIDER = 54;</code>
     */
    ACCOUNT_CODE_LIQUIDITY_PROVIDER(54),
    /**
     * <code>ACCOUNT_CODE_RELATED_PARTY = 55;</code>
     */
    ACCOUNT_CODE_RELATED_PARTY(55),
    /**
     * <code>ACCOUNT_CODE_STRUCTURED_PRODUCT_MARKET_MAKER = 56;</code>
     */
    ACCOUNT_CODE_STRUCTURED_PRODUCT_MARKET_MAKER(56),
    /**
     * <code>ACCOUNT_CODE_OMEGA_CLIENT = 57;</code>
     */
    ACCOUNT_CODE_OMEGA_CLIENT(57),
    /**
     * <code>ACCOUNT_CODE_CERES_CLIENT = 58;</code>
     */
    ACCOUNT_CODE_CERES_CLIENT(58),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_CODE_UNDEFINED = 0;</code>
     */
    public static final int ACCOUNT_CODE_UNDEFINED_VALUE = 0;
    /**
     * <code>ACCOUNT_CODE_NONE = 1;</code>
     */
    public static final int ACCOUNT_CODE_NONE_VALUE = 1;
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_TO_SINGLE_FIRM = 2;</code>
     */
    public static final int ACCOUNT_CODE_GIVE_UP_TO_SINGLE_FIRM_VALUE = 2;
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_TO_MULTIPLE_FIRMS = 3;</code>
     */
    public static final int ACCOUNT_CODE_GIVE_UP_TO_MULTIPLE_FIRMS_VALUE = 3;
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER = 4;</code>
     */
    public static final int ACCOUNT_CODE_MARKET_MAKER_VALUE = 4;
    /**
     * <code>ACCOUNT_CODE_AGENT_A1 = 5;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A1_VALUE = 5;
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_G1 = 6;</code>
     */
    public static final int ACCOUNT_CODE_GIVE_UP_G1_VALUE = 6;
    /**
     * <code>ACCOUNT_CODE_GIVE_UP_G2 = 7;</code>
     */
    public static final int ACCOUNT_CODE_GIVE_UP_G2_VALUE = 7;
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER_M1 = 8;</code>
     */
    public static final int ACCOUNT_CODE_MARKET_MAKER_M1_VALUE = 8;
    /**
     * <code>ACCOUNT_CODE_MARKET_MAKER_M2 = 9;</code>
     */
    public static final int ACCOUNT_CODE_MARKET_MAKER_M2_VALUE = 9;
    /**
     * <code>ACCOUNT_CODE_PROPRIETARY_P1 = 10;</code>
     */
    public static final int ACCOUNT_CODE_PROPRIETARY_P1_VALUE = 10;
    /**
     * <code>ACCOUNT_CODE_PROPRIETARY_P2 = 11;</code>
     */
    public static final int ACCOUNT_CODE_PROPRIETARY_P2_VALUE = 11;
    /**
     * <code>ACCOUNT_CODE_SEGREGATED = 12;</code>
     */
    public static final int ACCOUNT_CODE_SEGREGATED_VALUE = 12;
    /**
     * <code>ACCOUNT_CODE_NON_SEGREGATED = 13;</code>
     */
    public static final int ACCOUNT_CODE_NON_SEGREGATED_VALUE = 13;
    /**
     * <code>ACCOUNT_CODE_HOUSE = 14;</code>
     */
    public static final int ACCOUNT_CODE_HOUSE_VALUE = 14;
    /**
     * <code>ACCOUNT_CODE_LOCAL = 15;</code>
     */
    public static final int ACCOUNT_CODE_LOCAL_VALUE = 15;
    /**
     * <code>ACCOUNT_CODE_DEFAULT = 16;</code>
     */
    public static final int ACCOUNT_CODE_DEFAULT_VALUE = 16;
    /**
     * <code>ACCOUNT_CODE_ALLOCATED = 17;</code>
     */
    public static final int ACCOUNT_CODE_ALLOCATED_VALUE = 17;
    /**
     * <code>ACCOUNT_CODE_SPLIT = 18;</code>
     */
    public static final int ACCOUNT_CODE_SPLIT_VALUE = 18;
    /**
     * <code>ACCOUNT_CODE_UNASSIGNED = 19;</code>
     */
    public static final int ACCOUNT_CODE_UNASSIGNED_VALUE = 19;
    /**
     * <code>ACCOUNT_CODE_GAS_ASSOCIATE = 20;</code>
     */
    public static final int ACCOUNT_CODE_GAS_ASSOCIATE_VALUE = 20;
    /**
     * <code>ACCOUNT_CODE_CUSTOMER = 21;</code>
     */
    public static final int ACCOUNT_CODE_CUSTOMER_VALUE = 21;
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_FUTURES = 22;</code>
     */
    public static final int ACCOUNT_CODE_US_CUSTOMER_FUTURES_VALUE = 22;
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_SWAPS = 23;</code>
     */
    public static final int ACCOUNT_CODE_US_CUSTOMER_SWAPS_VALUE = 23;
    /**
     * <code>ACCOUNT_CODE_US_CUSTOMER_FBOT = 24;</code>
     */
    public static final int ACCOUNT_CODE_US_CUSTOMER_FBOT_VALUE = 24;
    /**
     * <code>ACCOUNT_CODE_FIRM = 25;</code>
     */
    public static final int ACCOUNT_CODE_FIRM_VALUE = 25;
    /**
     * <code>ACCOUNT_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUNT = 26;</code>
     */
    public static final int ACCOUNT_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUNT_VALUE = 26;
    /**
     * <code>ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT = 27;</code>
     */
    public static final int ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT_VALUE = 27;
    /**
     * <code>ACCOUNT_CODE_MEMBER_SIPC_PROTECTED_ACCOUNT = 28;</code>
     */
    public static final int ACCOUNT_CODE_MEMBER_SIPC_PROTECTED_ACCOUNT_VALUE = 28;
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATED_ACCOUNT = 29;</code>
     */
    public static final int ACCOUNT_CODE_USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATED_ACCOUNT_VALUE = 29;
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOUSE_ACCOUNT = 30;</code>
     */
    public static final int ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOUSE_ACCOUNT_VALUE = 30;
    /**
     * <code>ACCOUNT_CODE_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_ACCOUNT = 31;</code>
     */
    public static final int ACCOUNT_CODE_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_ACCOUNT_VALUE = 31;
    /**
     * <code>ACCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT = 32;</code>
     */
    public static final int ACCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT_VALUE = 32;
    /**
     * <code>ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED_ACCOUNT = 33;</code>
     */
    public static final int ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED_ACCOUNT_VALUE = 33;
    /**
     * <code>ACCOUNT_CODE_CUSTOMER_FLOOR_BROKER_WORKSTATION = 34;</code>
     */
    public static final int ACCOUNT_CODE_CUSTOMER_FLOOR_BROKER_WORKSTATION_VALUE = 34;
    /**
     * <code>ACCOUNT_CODE_AGENT_A2 = 35;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A2_VALUE = 35;
    /**
     * <code>ACCOUNT_CODE_AGENT_A3 = 36;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A3_VALUE = 36;
    /**
     * <code>ACCOUNT_CODE_AGENT_A4 = 37;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A4_VALUE = 37;
    /**
     * <code>ACCOUNT_CODE_AGENT_A5 = 38;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A5_VALUE = 38;
    /**
     * <code>ACCOUNT_CODE_AGENT_A6 = 39;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A6_VALUE = 39;
    /**
     * <code>ACCOUNT_CODE_AGENT_A7 = 40;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A7_VALUE = 40;
    /**
     * <code>ACCOUNT_CODE_AGENT_A8 = 41;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A8_VALUE = 41;
    /**
     * <code>ACCOUNT_CODE_AGENT_A9 = 42;</code>
     */
    public static final int ACCOUNT_CODE_AGENT_A9_VALUE = 42;
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_E = 43;</code>
     */
    public static final int ACCOUNT_CODE_CLIENT_SEGREGATED_E_VALUE = 43;
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_K = 44;</code>
     */
    public static final int ACCOUNT_CODE_CLIENT_SEGREGATED_K_VALUE = 44;
    /**
     * <code>ACCOUNT_CODE_CLIENT_SEGREGATED_R = 45;</code>
     */
    public static final int ACCOUNT_CODE_CLIENT_SEGREGATED_R_VALUE = 45;
    /**
     * <code>ACCOUNT_CODE_SEGREGATED_T = 46;</code>
     */
    public static final int ACCOUNT_CODE_SEGREGATED_T_VALUE = 46;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_CASS = 47;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_CASS_VALUE = 47;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_TTFCA = 48;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_TTFCA_VALUE = 48;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_CASS = 49;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_CASS_VALUE = 49;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_TTFCA = 50;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_TTFCA_VALUE = 50;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS = 51;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS_VALUE = 51;
    /**
     * <code>ACCOUNT_CODE_INDIRECT_CLEARING_NETS_TTFCA = 52;</code>
     */
    public static final int ACCOUNT_CODE_INDIRECT_CLEARING_NETS_TTFCA_VALUE = 52;
    /**
     * <code>ACCOUNT_CODE_RO = 53;</code>
     */
    public static final int ACCOUNT_CODE_RO_VALUE = 53;
    /**
     * <code>ACCOUNT_CODE_LIQUIDITY_PROVIDER = 54;</code>
     */
    public static final int ACCOUNT_CODE_LIQUIDITY_PROVIDER_VALUE = 54;
    /**
     * <code>ACCOUNT_CODE_RELATED_PARTY = 55;</code>
     */
    public static final int ACCOUNT_CODE_RELATED_PARTY_VALUE = 55;
    /**
     * <code>ACCOUNT_CODE_STRUCTURED_PRODUCT_MARKET_MAKER = 56;</code>
     */
    public static final int ACCOUNT_CODE_STRUCTURED_PRODUCT_MARKET_MAKER_VALUE = 56;
    /**
     * <code>ACCOUNT_CODE_OMEGA_CLIENT = 57;</code>
     */
    public static final int ACCOUNT_CODE_OMEGA_CLIENT_VALUE = 57;
    /**
     * <code>ACCOUNT_CODE_CERES_CLIENT = 58;</code>
     */
    public static final int ACCOUNT_CODE_CERES_CLIENT_VALUE = 58;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountCode forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_CODE_UNDEFINED;
        case 1: return ACCOUNT_CODE_NONE;
        case 2: return ACCOUNT_CODE_GIVE_UP_TO_SINGLE_FIRM;
        case 3: return ACCOUNT_CODE_GIVE_UP_TO_MULTIPLE_FIRMS;
        case 4: return ACCOUNT_CODE_MARKET_MAKER;
        case 5: return ACCOUNT_CODE_AGENT_A1;
        case 6: return ACCOUNT_CODE_GIVE_UP_G1;
        case 7: return ACCOUNT_CODE_GIVE_UP_G2;
        case 8: return ACCOUNT_CODE_MARKET_MAKER_M1;
        case 9: return ACCOUNT_CODE_MARKET_MAKER_M2;
        case 10: return ACCOUNT_CODE_PROPRIETARY_P1;
        case 11: return ACCOUNT_CODE_PROPRIETARY_P2;
        case 12: return ACCOUNT_CODE_SEGREGATED;
        case 13: return ACCOUNT_CODE_NON_SEGREGATED;
        case 14: return ACCOUNT_CODE_HOUSE;
        case 15: return ACCOUNT_CODE_LOCAL;
        case 16: return ACCOUNT_CODE_DEFAULT;
        case 17: return ACCOUNT_CODE_ALLOCATED;
        case 18: return ACCOUNT_CODE_SPLIT;
        case 19: return ACCOUNT_CODE_UNASSIGNED;
        case 20: return ACCOUNT_CODE_GAS_ASSOCIATE;
        case 21: return ACCOUNT_CODE_CUSTOMER;
        case 22: return ACCOUNT_CODE_US_CUSTOMER_FUTURES;
        case 23: return ACCOUNT_CODE_US_CUSTOMER_SWAPS;
        case 24: return ACCOUNT_CODE_US_CUSTOMER_FBOT;
        case 25: return ACCOUNT_CODE_FIRM;
        case 26: return ACCOUNT_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUNT;
        case 27: return ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT;
        case 28: return ACCOUNT_CODE_MEMBER_SIPC_PROTECTED_ACCOUNT;
        case 29: return ACCOUNT_CODE_USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATED_ACCOUNT;
        case 30: return ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOUSE_ACCOUNT;
        case 31: return ACCOUNT_CODE_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_ACCOUNT;
        case 32: return ACCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT;
        case 33: return ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED_ACCOUNT;
        case 34: return ACCOUNT_CODE_CUSTOMER_FLOOR_BROKER_WORKSTATION;
        case 35: return ACCOUNT_CODE_AGENT_A2;
        case 36: return ACCOUNT_CODE_AGENT_A3;
        case 37: return ACCOUNT_CODE_AGENT_A4;
        case 38: return ACCOUNT_CODE_AGENT_A5;
        case 39: return ACCOUNT_CODE_AGENT_A6;
        case 40: return ACCOUNT_CODE_AGENT_A7;
        case 41: return ACCOUNT_CODE_AGENT_A8;
        case 42: return ACCOUNT_CODE_AGENT_A9;
        case 43: return ACCOUNT_CODE_CLIENT_SEGREGATED_E;
        case 44: return ACCOUNT_CODE_CLIENT_SEGREGATED_K;
        case 45: return ACCOUNT_CODE_CLIENT_SEGREGATED_R;
        case 46: return ACCOUNT_CODE_SEGREGATED_T;
        case 47: return ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_CASS;
        case 48: return ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC_TTFCA;
        case 49: return ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_CASS;
        case 50: return ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_TTFCA;
        case 51: return ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS;
        case 52: return ACCOUNT_CODE_INDIRECT_CLEARING_NETS_TTFCA;
        case 53: return ACCOUNT_CODE_RO;
        case 54: return ACCOUNT_CODE_LIQUIDITY_PROVIDER;
        case 55: return ACCOUNT_CODE_RELATED_PARTY;
        case 56: return ACCOUNT_CODE_STRUCTURED_PRODUCT_MARKET_MAKER;
        case 57: return ACCOUNT_CODE_OMEGA_CLIENT;
        case 58: return ACCOUNT_CODE_CERES_CLIENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountCode>() {
            public AccountCode findValueByNumber(int number) {
              return AccountCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(25);
    }

    private static final AccountCode[] VALUES = values();

    public static AccountCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountCode)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OpenClose}
   */
  public enum OpenClose
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OPEN_CLOSE_OPEN = 0;</code>
     */
    OPEN_CLOSE_OPEN(0),
    /**
     * <code>OPEN_CLOSE_CLOSE = 1;</code>
     */
    OPEN_CLOSE_CLOSE(1),
    /**
     * <code>OPEN_CLOSE_UNDEFINED = -1;</code>
     */
    OPEN_CLOSE_UNDEFINED(-1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>OPEN_CLOSE_OPEN = 0;</code>
     */
    public static final int OPEN_CLOSE_OPEN_VALUE = 0;
    /**
     * <code>OPEN_CLOSE_CLOSE = 1;</code>
     */
    public static final int OPEN_CLOSE_CLOSE_VALUE = 1;
    /**
     * <code>OPEN_CLOSE_UNDEFINED = -1;</code>
     */
    public static final int OPEN_CLOSE_UNDEFINED_VALUE = -1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OpenClose valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OpenClose forNumber(int value) {
      switch (value) {
        case 0: return OPEN_CLOSE_OPEN;
        case 1: return OPEN_CLOSE_CLOSE;
        case -1: return OPEN_CLOSE_UNDEFINED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OpenClose>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OpenClose> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OpenClose>() {
            public OpenClose findValueByNumber(int number) {
              return OpenClose.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(26);
    }

    private static final OpenClose[] VALUES = values();

    public static OpenClose valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OpenClose(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OpenClose)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.CustOrderHandlingInstType}
   */
  public enum CustOrderHandlingInstType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_NONE = 0;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_NONE(0),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_DESK = 1;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_DESK(1),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_ELECTRONIC = 2;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_ELECTRONIC(2),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_VENDOR_PROVIDED_PLATFORM = 3;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_VENDOR_PROVIDED_PLATFORM(3),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_API_OR_FIX = 4;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_API_OR_FIX(4),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_PROVIDER = 5;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_PROVIDER(5),
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_OTHER = 6;</code>
     */
    CUST_ORDER_HANDLING_INST_TYPE_OTHER(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_NONE = 0;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_NONE_VALUE = 0;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_DESK = 1;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_DESK_VALUE = 1;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_ELECTRONIC = 2;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_ELECTRONIC_VALUE = 2;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_VENDOR_PROVIDED_PLATFORM = 3;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_VENDOR_PROVIDED_PLATFORM_VALUE = 3;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_API_OR_FIX = 4;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_API_OR_FIX_VALUE = 4;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_PROVIDER = 5;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_PROVIDER_VALUE = 5;
    /**
     * <code>CUST_ORDER_HANDLING_INST_TYPE_OTHER = 6;</code>
     */
    public static final int CUST_ORDER_HANDLING_INST_TYPE_OTHER_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CustOrderHandlingInstType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CustOrderHandlingInstType forNumber(int value) {
      switch (value) {
        case 0: return CUST_ORDER_HANDLING_INST_TYPE_NONE;
        case 1: return CUST_ORDER_HANDLING_INST_TYPE_DESK;
        case 2: return CUST_ORDER_HANDLING_INST_TYPE_ELECTRONIC;
        case 3: return CUST_ORDER_HANDLING_INST_TYPE_VENDOR_PROVIDED_PLATFORM;
        case 4: return CUST_ORDER_HANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_API_OR_FIX;
        case 5: return CUST_ORDER_HANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_PROVIDER;
        case 6: return CUST_ORDER_HANDLING_INST_TYPE_OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CustOrderHandlingInstType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CustOrderHandlingInstType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CustOrderHandlingInstType>() {
            public CustOrderHandlingInstType findValueByNumber(int number) {
              return CustOrderHandlingInstType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(27);
    }

    private static final CustOrderHandlingInstType[] VALUES = values();

    public static CustOrderHandlingInstType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CustOrderHandlingInstType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.CustOrderHandlingInstType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AvgPriceIndicatorType}
   */
  public enum AvgPriceIndicatorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_NONE = 0;</code>
     */
    AVG_PRICE_INDICATOR_TYPE_NONE(0),
    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP = 1;</code>
     */
    AVG_PRICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP(1),
    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE = 2;</code>
     */
    AVG_PRICE_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_NONE = 0;</code>
     */
    public static final int AVG_PRICE_INDICATOR_TYPE_NONE_VALUE = 0;
    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP = 1;</code>
     */
    public static final int AVG_PRICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP_VALUE = 1;
    /**
     * <code>AVG_PRICE_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE = 2;</code>
     */
    public static final int AVG_PRICE_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AvgPriceIndicatorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AvgPriceIndicatorType forNumber(int value) {
      switch (value) {
        case 0: return AVG_PRICE_INDICATOR_TYPE_NONE;
        case 1: return AVG_PRICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP;
        case 2: return AVG_PRICE_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AvgPriceIndicatorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AvgPriceIndicatorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AvgPriceIndicatorType>() {
            public AvgPriceIndicatorType findValueByNumber(int number) {
              return AvgPriceIndicatorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(28);
    }

    private static final AvgPriceIndicatorType[] VALUES = values();

    public static AvgPriceIndicatorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AvgPriceIndicatorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AvgPriceIndicatorType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.ClearingTradePriceType}
   */
  public enum ClearingTradePriceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CLEARING_TRADE_PRICE_TYPE_EXECUTION_PRICE = 0;</code>
     */
    CLEARING_TRADE_PRICE_TYPE_EXECUTION_PRICE(0),
    /**
     * <code>CLEARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARING_PRICE = 1;</code>
     */
    CLEARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARING_PRICE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CLEARING_TRADE_PRICE_TYPE_EXECUTION_PRICE = 0;</code>
     */
    public static final int CLEARING_TRADE_PRICE_TYPE_EXECUTION_PRICE_VALUE = 0;
    /**
     * <code>CLEARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARING_PRICE = 1;</code>
     */
    public static final int CLEARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARING_PRICE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClearingTradePriceType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClearingTradePriceType forNumber(int value) {
      switch (value) {
        case 0: return CLEARING_TRADE_PRICE_TYPE_EXECUTION_PRICE;
        case 1: return CLEARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARING_PRICE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClearingTradePriceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClearingTradePriceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClearingTradePriceType>() {
            public ClearingTradePriceType findValueByNumber(int number) {
              return ClearingTradePriceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(29);
    }

    private static final ClearingTradePriceType[] VALUES = values();

    public static ClearingTradePriceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClearingTradePriceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.ClearingTradePriceType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.BillingFee}
   */
  public enum BillingFee
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BILLING_FEE_UNDEFINED = 0;</code>
     */
    BILLING_FEE_UNDEFINED(0),
    /**
     * <code>BILLING_FEE_CUSTOMER = 1;</code>
     */
    BILLING_FEE_CUSTOMER(1),
    /**
     * <code>BILLING_FEE_EQUITY_MEMBER = 2;</code>
     */
    BILLING_FEE_EQUITY_MEMBER(2),
    /**
     * <code>BILLING_FEE_FIRM_106HJ = 3;</code>
     */
    BILLING_FEE_FIRM_106HJ(3),
    /**
     * <code>BILLING_FEE_LESSEE_106F_EMPLOYEE = 4;</code>
     */
    BILLING_FEE_LESSEE_106F_EMPLOYEE(4),
    /**
     * <code>BILLING_FEE_CBOE_MEMBER = 5;</code>
     */
    BILLING_FEE_CBOE_MEMBER(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BILLING_FEE_UNDEFINED = 0;</code>
     */
    public static final int BILLING_FEE_UNDEFINED_VALUE = 0;
    /**
     * <code>BILLING_FEE_CUSTOMER = 1;</code>
     */
    public static final int BILLING_FEE_CUSTOMER_VALUE = 1;
    /**
     * <code>BILLING_FEE_EQUITY_MEMBER = 2;</code>
     */
    public static final int BILLING_FEE_EQUITY_MEMBER_VALUE = 2;
    /**
     * <code>BILLING_FEE_FIRM_106HJ = 3;</code>
     */
    public static final int BILLING_FEE_FIRM_106HJ_VALUE = 3;
    /**
     * <code>BILLING_FEE_LESSEE_106F_EMPLOYEE = 4;</code>
     */
    public static final int BILLING_FEE_LESSEE_106F_EMPLOYEE_VALUE = 4;
    /**
     * <code>BILLING_FEE_CBOE_MEMBER = 5;</code>
     */
    public static final int BILLING_FEE_CBOE_MEMBER_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static BillingFee valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static BillingFee forNumber(int value) {
      switch (value) {
        case 0: return BILLING_FEE_UNDEFINED;
        case 1: return BILLING_FEE_CUSTOMER;
        case 2: return BILLING_FEE_EQUITY_MEMBER;
        case 3: return BILLING_FEE_FIRM_106HJ;
        case 4: return BILLING_FEE_LESSEE_106F_EMPLOYEE;
        case 5: return BILLING_FEE_CBOE_MEMBER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BillingFee>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        BillingFee> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BillingFee>() {
            public BillingFee findValueByNumber(int number) {
              return BillingFee.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(30);
    }

    private static final BillingFee[] VALUES = values();

    public static BillingFee valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private BillingFee(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.BillingFee)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OrderLink}
   */
  public enum OrderLink
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_LINK_NONE = 0;</code>
     */
    ORDER_LINK_NONE(0),
    /**
     * <code>ORDER_LINK_OCO = 1;</code>
     */
    ORDER_LINK_OCO(1),
    /**
     * <code>ORDER_LINK_AUTO_OCO = 2;</code>
     */
    ORDER_LINK_AUTO_OCO(2),
    /**
     * <code>ORDER_LINK_SPARK = 3;</code>
     */
    ORDER_LINK_SPARK(3),
    /**
     * <code>ORDER_LINK_CLIENT_SYNTHETIC = 4;</code>
     */
    ORDER_LINK_CLIENT_SYNTHETIC(4),
    /**
     * <code>ORDER_LINK_SPARK2 = 5;</code>
     */
    ORDER_LINK_SPARK2(5),
    /**
     * <code>ORDER_LINK_CHAIN2 = 6;</code>
     */
    ORDER_LINK_CHAIN2(6),
    /**
     * <code>ORDER_LINK_AUTO_OCO_P = 7;</code>
     */
    ORDER_LINK_AUTO_OCO_P(7),
    /**
     * <code>ORDER_LINK_AUTO_OCO_M = 8;</code>
     */
    ORDER_LINK_AUTO_OCO_M(8),
    /**
     * <code>ORDER_LINK_AUTO_OCO_MP = 9;</code>
     */
    ORDER_LINK_AUTO_OCO_MP(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_LINK_NONE = 0;</code>
     */
    public static final int ORDER_LINK_NONE_VALUE = 0;
    /**
     * <code>ORDER_LINK_OCO = 1;</code>
     */
    public static final int ORDER_LINK_OCO_VALUE = 1;
    /**
     * <code>ORDER_LINK_AUTO_OCO = 2;</code>
     */
    public static final int ORDER_LINK_AUTO_OCO_VALUE = 2;
    /**
     * <code>ORDER_LINK_SPARK = 3;</code>
     */
    public static final int ORDER_LINK_SPARK_VALUE = 3;
    /**
     * <code>ORDER_LINK_CLIENT_SYNTHETIC = 4;</code>
     */
    public static final int ORDER_LINK_CLIENT_SYNTHETIC_VALUE = 4;
    /**
     * <code>ORDER_LINK_SPARK2 = 5;</code>
     */
    public static final int ORDER_LINK_SPARK2_VALUE = 5;
    /**
     * <code>ORDER_LINK_CHAIN2 = 6;</code>
     */
    public static final int ORDER_LINK_CHAIN2_VALUE = 6;
    /**
     * <code>ORDER_LINK_AUTO_OCO_P = 7;</code>
     */
    public static final int ORDER_LINK_AUTO_OCO_P_VALUE = 7;
    /**
     * <code>ORDER_LINK_AUTO_OCO_M = 8;</code>
     */
    public static final int ORDER_LINK_AUTO_OCO_M_VALUE = 8;
    /**
     * <code>ORDER_LINK_AUTO_OCO_MP = 9;</code>
     */
    public static final int ORDER_LINK_AUTO_OCO_MP_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderLink valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrderLink forNumber(int value) {
      switch (value) {
        case 0: return ORDER_LINK_NONE;
        case 1: return ORDER_LINK_OCO;
        case 2: return ORDER_LINK_AUTO_OCO;
        case 3: return ORDER_LINK_SPARK;
        case 4: return ORDER_LINK_CLIENT_SYNTHETIC;
        case 5: return ORDER_LINK_SPARK2;
        case 6: return ORDER_LINK_CHAIN2;
        case 7: return ORDER_LINK_AUTO_OCO_P;
        case 8: return ORDER_LINK_AUTO_OCO_M;
        case 9: return ORDER_LINK_AUTO_OCO_MP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderLink>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderLink> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderLink>() {
            public OrderLink findValueByNumber(int number) {
              return OrderLink.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(31);
    }

    private static final OrderLink[] VALUES = values();

    public static OrderLink valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderLink(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OrderLink)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.PrimaryUserType}
   */
  public enum PrimaryUserType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PRIMARY_USER_TYPE_PRIMARY = 0;</code>
     */
    PRIMARY_USER_TYPE_PRIMARY(0),
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY = 1;</code>
     */
    PRIMARY_USER_TYPE_SECONDARY(1),
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY_APPLIED = 2;</code>
     */
    PRIMARY_USER_TYPE_SECONDARY_APPLIED(2),
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY_NOT_APPLIED = 3;</code>
     */
    PRIMARY_USER_TYPE_SECONDARY_NOT_APPLIED(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PRIMARY_USER_TYPE_PRIMARY = 0;</code>
     */
    public static final int PRIMARY_USER_TYPE_PRIMARY_VALUE = 0;
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY = 1;</code>
     */
    public static final int PRIMARY_USER_TYPE_SECONDARY_VALUE = 1;
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY_APPLIED = 2;</code>
     */
    public static final int PRIMARY_USER_TYPE_SECONDARY_APPLIED_VALUE = 2;
    /**
     * <code>PRIMARY_USER_TYPE_SECONDARY_NOT_APPLIED = 3;</code>
     */
    public static final int PRIMARY_USER_TYPE_SECONDARY_NOT_APPLIED_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PrimaryUserType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PrimaryUserType forNumber(int value) {
      switch (value) {
        case 0: return PRIMARY_USER_TYPE_PRIMARY;
        case 1: return PRIMARY_USER_TYPE_SECONDARY;
        case 2: return PRIMARY_USER_TYPE_SECONDARY_APPLIED;
        case 3: return PRIMARY_USER_TYPE_SECONDARY_NOT_APPLIED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PrimaryUserType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PrimaryUserType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PrimaryUserType>() {
            public PrimaryUserType findValueByNumber(int number) {
              return PrimaryUserType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(32);
    }

    private static final PrimaryUserType[] VALUES = values();

    public static PrimaryUserType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PrimaryUserType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.PrimaryUserType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.MasterType}
   */
  public enum MasterType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MASTER_TYPE_MASTER = 0;</code>
     */
    MASTER_TYPE_MASTER(0),
    /**
     * <code>MASTER_TYPE_CHILD = 1;</code>
     */
    MASTER_TYPE_CHILD(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MASTER_TYPE_MASTER = 0;</code>
     */
    public static final int MASTER_TYPE_MASTER_VALUE = 0;
    /**
     * <code>MASTER_TYPE_CHILD = 1;</code>
     */
    public static final int MASTER_TYPE_CHILD_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MasterType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MasterType forNumber(int value) {
      switch (value) {
        case 0: return MASTER_TYPE_MASTER;
        case 1: return MASTER_TYPE_CHILD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MasterType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MasterType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MasterType>() {
            public MasterType findValueByNumber(int number) {
              return MasterType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(33);
    }

    private static final MasterType[] VALUES = values();

    public static MasterType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MasterType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.MasterType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OrderSource}
   */
  public enum OrderSource
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_SOURCE_UNKNOWN = 0;</code>
     */
    ORDER_SOURCE_UNKNOWN(0),
    /**
     * <code>ORDER_SOURCE_API = 1;</code>
     */
    ORDER_SOURCE_API(1),
    /**
     * <code>ORDER_SOURCE_WEB_TRADER = 2;</code>
     */
    ORDER_SOURCE_WEB_TRADER(2),
    /**
     * <code>ORDER_SOURCE_MOBILE = 3;</code>
     */
    ORDER_SOURCE_MOBILE(3),
    /**
     * <code>ORDER_SOURCE_DATA_IMPORT = 4;</code>
     */
    ORDER_SOURCE_DATA_IMPORT(4),
    /**
     * <code>ORDER_SOURCE_ACCOUNT_HANDLER = 5;</code>
     */
    ORDER_SOURCE_ACCOUNT_HANDLER(5),
    /**
     * <code>ORDER_SOURCE_STATIC_LADDER = 20;</code>
     */
    ORDER_SOURCE_STATIC_LADDER(20),
    /**
     * <code>ORDER_SOURCE_SCROLLING_LADDER = 21;</code>
     */
    ORDER_SOURCE_SCROLLING_LADDER(21),
    /**
     * <code>ORDER_SOURCE_CENTERED_LADDER = 22;</code>
     */
    ORDER_SOURCE_CENTERED_LADDER(22),
    /**
     * <code>ORDER_SOURCE_AUTO_RECENTERED_LADDER = 23;</code>
     */
    ORDER_SOURCE_AUTO_RECENTERED_LADDER(23),
    /**
     * <code>ORDER_SOURCE_DEPTH = 24;</code>
     */
    ORDER_SOURCE_DEPTH(24),
    /**
     * <code>ORDER_SOURCE_QUOTEBOARD = 25;</code>
     */
    ORDER_SOURCE_QUOTEBOARD(25),
    /**
     * <code>ORDER_SOURCE_OPTIONBOARD = 26;</code>
     */
    ORDER_SOURCE_OPTIONBOARD(26),
    /**
     * <code>ORDER_SOURCE_ADV_OPTIONBOARD = 27;</code>
     */
    ORDER_SOURCE_ADV_OPTIONBOARD(27),
    /**
     * <code>ORDER_SOURCE_ORDERBOOK = 28;</code>
     */
    ORDER_SOURCE_ORDERBOOK(28),
    /**
     * <code>ORDER_SOURCE_SPREAD_MATRIX = 29;</code>
     */
    ORDER_SOURCE_SPREAD_MATRIX(29),
    /**
     * <code>ORDER_SOURCE_FIX_API = 30;</code>
     */
    ORDER_SOURCE_FIX_API(30),
    /**
     * <code>ORDER_SOURCE_CLIENT_SPREADER = 31;</code>
     */
    ORDER_SOURCE_CLIENT_SPREADER(31),
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_SHEET = 32;</code>
     */
    ORDER_SOURCE_ANTS_OPTION_SHEET(32),
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_STRATEGY_SOLVER = 33;</code>
     */
    ORDER_SOURCE_ANTS_OPTION_STRATEGY_SOLVER(33),
    /**
     * <code>ORDER_SOURCE_JAVA_API = 34;</code>
     */
    ORDER_SOURCE_JAVA_API(34),
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_STRATEGIES_WINDOW = 35;</code>
     */
    ORDER_SOURCE_ANTS_OPTION_STRATEGIES_WINDOW(35),
    /**
     * <code>ORDER_SOURCE_CHART = 36;</code>
     */
    ORDER_SOURCE_CHART(36),
    /**
     * <code>ORDER_SOURCE_STP = 37;</code>
     */
    ORDER_SOURCE_STP(37),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_SCROLLING_LADDER = 38;</code>
     */
    ORDER_SOURCE_T4_ANDROID_SCROLLING_LADDER(38),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_CENTERED_LADDER = 39;</code>
     */
    ORDER_SOURCE_T4_ANDROID_CENTERED_LADDER(39),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LADDER = 40;</code>
     */
    ORDER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LADDER(40),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_DEPTH = 41;</code>
     */
    ORDER_SOURCE_T4_ANDROID_DEPTH(41),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_QUOTEBOARD = 42;</code>
     */
    ORDER_SOURCE_T4_ANDROID_QUOTEBOARD(42),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_POSITIONS = 43;</code>
     */
    ORDER_SOURCE_T4_ANDROID_POSITIONS(43),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_ORDERS = 44;</code>
     */
    ORDER_SOURCE_T4_ANDROID_ORDERS(44),
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_CHART = 45;</code>
     */
    ORDER_SOURCE_T4_ANDROID_CHART(45),
    /**
     * <code>ORDER_SOURCE_MQ = 46;</code>
     */
    ORDER_SOURCE_MQ(46),
    /**
     * <code>ORDER_SOURCE_IOS_API = 47;</code>
     */
    ORDER_SOURCE_IOS_API(47),
    /**
     * <code>ORDER_SOURCE_T4_IOS_SCROLLING_LADDER = 48;</code>
     */
    ORDER_SOURCE_T4_IOS_SCROLLING_LADDER(48),
    /**
     * <code>ORDER_SOURCE_T4_IOS_CENTERED_LADDER = 49;</code>
     */
    ORDER_SOURCE_T4_IOS_CENTERED_LADDER(49),
    /**
     * <code>ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_LADDER = 50;</code>
     */
    ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_LADDER(50),
    /**
     * <code>ORDER_SOURCE_T4_IOS_DEPTH = 51;</code>
     */
    ORDER_SOURCE_T4_IOS_DEPTH(51),
    /**
     * <code>ORDER_SOURCE_T4_IOS_QUOTEBOARD = 52;</code>
     */
    ORDER_SOURCE_T4_IOS_QUOTEBOARD(52),
    /**
     * <code>ORDER_SOURCE_T4_IOS_POSITIONS = 53;</code>
     */
    ORDER_SOURCE_T4_IOS_POSITIONS(53),
    /**
     * <code>ORDER_SOURCE_T4_IOS_ORDERS = 54;</code>
     */
    ORDER_SOURCE_T4_IOS_ORDERS(54),
    /**
     * <code>ORDER_SOURCE_T4_IOS_CHART = 55;</code>
     */
    ORDER_SOURCE_T4_IOS_CHART(55),
    /**
     * <code>ORDER_SOURCE_KEYBOARD = 56;</code>
     */
    ORDER_SOURCE_KEYBOARD(56),
    /**
     * <code>ORDER_SOURCE_HTTP_API = 57;</code>
     */
    ORDER_SOURCE_HTTP_API(57),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_SOURCE_UNKNOWN = 0;</code>
     */
    public static final int ORDER_SOURCE_UNKNOWN_VALUE = 0;
    /**
     * <code>ORDER_SOURCE_API = 1;</code>
     */
    public static final int ORDER_SOURCE_API_VALUE = 1;
    /**
     * <code>ORDER_SOURCE_WEB_TRADER = 2;</code>
     */
    public static final int ORDER_SOURCE_WEB_TRADER_VALUE = 2;
    /**
     * <code>ORDER_SOURCE_MOBILE = 3;</code>
     */
    public static final int ORDER_SOURCE_MOBILE_VALUE = 3;
    /**
     * <code>ORDER_SOURCE_DATA_IMPORT = 4;</code>
     */
    public static final int ORDER_SOURCE_DATA_IMPORT_VALUE = 4;
    /**
     * <code>ORDER_SOURCE_ACCOUNT_HANDLER = 5;</code>
     */
    public static final int ORDER_SOURCE_ACCOUNT_HANDLER_VALUE = 5;
    /**
     * <code>ORDER_SOURCE_STATIC_LADDER = 20;</code>
     */
    public static final int ORDER_SOURCE_STATIC_LADDER_VALUE = 20;
    /**
     * <code>ORDER_SOURCE_SCROLLING_LADDER = 21;</code>
     */
    public static final int ORDER_SOURCE_SCROLLING_LADDER_VALUE = 21;
    /**
     * <code>ORDER_SOURCE_CENTERED_LADDER = 22;</code>
     */
    public static final int ORDER_SOURCE_CENTERED_LADDER_VALUE = 22;
    /**
     * <code>ORDER_SOURCE_AUTO_RECENTERED_LADDER = 23;</code>
     */
    public static final int ORDER_SOURCE_AUTO_RECENTERED_LADDER_VALUE = 23;
    /**
     * <code>ORDER_SOURCE_DEPTH = 24;</code>
     */
    public static final int ORDER_SOURCE_DEPTH_VALUE = 24;
    /**
     * <code>ORDER_SOURCE_QUOTEBOARD = 25;</code>
     */
    public static final int ORDER_SOURCE_QUOTEBOARD_VALUE = 25;
    /**
     * <code>ORDER_SOURCE_OPTIONBOARD = 26;</code>
     */
    public static final int ORDER_SOURCE_OPTIONBOARD_VALUE = 26;
    /**
     * <code>ORDER_SOURCE_ADV_OPTIONBOARD = 27;</code>
     */
    public static final int ORDER_SOURCE_ADV_OPTIONBOARD_VALUE = 27;
    /**
     * <code>ORDER_SOURCE_ORDERBOOK = 28;</code>
     */
    public static final int ORDER_SOURCE_ORDERBOOK_VALUE = 28;
    /**
     * <code>ORDER_SOURCE_SPREAD_MATRIX = 29;</code>
     */
    public static final int ORDER_SOURCE_SPREAD_MATRIX_VALUE = 29;
    /**
     * <code>ORDER_SOURCE_FIX_API = 30;</code>
     */
    public static final int ORDER_SOURCE_FIX_API_VALUE = 30;
    /**
     * <code>ORDER_SOURCE_CLIENT_SPREADER = 31;</code>
     */
    public static final int ORDER_SOURCE_CLIENT_SPREADER_VALUE = 31;
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_SHEET = 32;</code>
     */
    public static final int ORDER_SOURCE_ANTS_OPTION_SHEET_VALUE = 32;
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_STRATEGY_SOLVER = 33;</code>
     */
    public static final int ORDER_SOURCE_ANTS_OPTION_STRATEGY_SOLVER_VALUE = 33;
    /**
     * <code>ORDER_SOURCE_JAVA_API = 34;</code>
     */
    public static final int ORDER_SOURCE_JAVA_API_VALUE = 34;
    /**
     * <code>ORDER_SOURCE_ANTS_OPTION_STRATEGIES_WINDOW = 35;</code>
     */
    public static final int ORDER_SOURCE_ANTS_OPTION_STRATEGIES_WINDOW_VALUE = 35;
    /**
     * <code>ORDER_SOURCE_CHART = 36;</code>
     */
    public static final int ORDER_SOURCE_CHART_VALUE = 36;
    /**
     * <code>ORDER_SOURCE_STP = 37;</code>
     */
    public static final int ORDER_SOURCE_STP_VALUE = 37;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_SCROLLING_LADDER = 38;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_SCROLLING_LADDER_VALUE = 38;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_CENTERED_LADDER = 39;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_CENTERED_LADDER_VALUE = 39;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LADDER = 40;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LADDER_VALUE = 40;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_DEPTH = 41;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_DEPTH_VALUE = 41;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_QUOTEBOARD = 42;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_QUOTEBOARD_VALUE = 42;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_POSITIONS = 43;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_POSITIONS_VALUE = 43;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_ORDERS = 44;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_ORDERS_VALUE = 44;
    /**
     * <code>ORDER_SOURCE_T4_ANDROID_CHART = 45;</code>
     */
    public static final int ORDER_SOURCE_T4_ANDROID_CHART_VALUE = 45;
    /**
     * <code>ORDER_SOURCE_MQ = 46;</code>
     */
    public static final int ORDER_SOURCE_MQ_VALUE = 46;
    /**
     * <code>ORDER_SOURCE_IOS_API = 47;</code>
     */
    public static final int ORDER_SOURCE_IOS_API_VALUE = 47;
    /**
     * <code>ORDER_SOURCE_T4_IOS_SCROLLING_LADDER = 48;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_SCROLLING_LADDER_VALUE = 48;
    /**
     * <code>ORDER_SOURCE_T4_IOS_CENTERED_LADDER = 49;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_CENTERED_LADDER_VALUE = 49;
    /**
     * <code>ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_LADDER = 50;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_LADDER_VALUE = 50;
    /**
     * <code>ORDER_SOURCE_T4_IOS_DEPTH = 51;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_DEPTH_VALUE = 51;
    /**
     * <code>ORDER_SOURCE_T4_IOS_QUOTEBOARD = 52;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_QUOTEBOARD_VALUE = 52;
    /**
     * <code>ORDER_SOURCE_T4_IOS_POSITIONS = 53;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_POSITIONS_VALUE = 53;
    /**
     * <code>ORDER_SOURCE_T4_IOS_ORDERS = 54;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_ORDERS_VALUE = 54;
    /**
     * <code>ORDER_SOURCE_T4_IOS_CHART = 55;</code>
     */
    public static final int ORDER_SOURCE_T4_IOS_CHART_VALUE = 55;
    /**
     * <code>ORDER_SOURCE_KEYBOARD = 56;</code>
     */
    public static final int ORDER_SOURCE_KEYBOARD_VALUE = 56;
    /**
     * <code>ORDER_SOURCE_HTTP_API = 57;</code>
     */
    public static final int ORDER_SOURCE_HTTP_API_VALUE = 57;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderSource valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrderSource forNumber(int value) {
      switch (value) {
        case 0: return ORDER_SOURCE_UNKNOWN;
        case 1: return ORDER_SOURCE_API;
        case 2: return ORDER_SOURCE_WEB_TRADER;
        case 3: return ORDER_SOURCE_MOBILE;
        case 4: return ORDER_SOURCE_DATA_IMPORT;
        case 5: return ORDER_SOURCE_ACCOUNT_HANDLER;
        case 20: return ORDER_SOURCE_STATIC_LADDER;
        case 21: return ORDER_SOURCE_SCROLLING_LADDER;
        case 22: return ORDER_SOURCE_CENTERED_LADDER;
        case 23: return ORDER_SOURCE_AUTO_RECENTERED_LADDER;
        case 24: return ORDER_SOURCE_DEPTH;
        case 25: return ORDER_SOURCE_QUOTEBOARD;
        case 26: return ORDER_SOURCE_OPTIONBOARD;
        case 27: return ORDER_SOURCE_ADV_OPTIONBOARD;
        case 28: return ORDER_SOURCE_ORDERBOOK;
        case 29: return ORDER_SOURCE_SPREAD_MATRIX;
        case 30: return ORDER_SOURCE_FIX_API;
        case 31: return ORDER_SOURCE_CLIENT_SPREADER;
        case 32: return ORDER_SOURCE_ANTS_OPTION_SHEET;
        case 33: return ORDER_SOURCE_ANTS_OPTION_STRATEGY_SOLVER;
        case 34: return ORDER_SOURCE_JAVA_API;
        case 35: return ORDER_SOURCE_ANTS_OPTION_STRATEGIES_WINDOW;
        case 36: return ORDER_SOURCE_CHART;
        case 37: return ORDER_SOURCE_STP;
        case 38: return ORDER_SOURCE_T4_ANDROID_SCROLLING_LADDER;
        case 39: return ORDER_SOURCE_T4_ANDROID_CENTERED_LADDER;
        case 40: return ORDER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LADDER;
        case 41: return ORDER_SOURCE_T4_ANDROID_DEPTH;
        case 42: return ORDER_SOURCE_T4_ANDROID_QUOTEBOARD;
        case 43: return ORDER_SOURCE_T4_ANDROID_POSITIONS;
        case 44: return ORDER_SOURCE_T4_ANDROID_ORDERS;
        case 45: return ORDER_SOURCE_T4_ANDROID_CHART;
        case 46: return ORDER_SOURCE_MQ;
        case 47: return ORDER_SOURCE_IOS_API;
        case 48: return ORDER_SOURCE_T4_IOS_SCROLLING_LADDER;
        case 49: return ORDER_SOURCE_T4_IOS_CENTERED_LADDER;
        case 50: return ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_LADDER;
        case 51: return ORDER_SOURCE_T4_IOS_DEPTH;
        case 52: return ORDER_SOURCE_T4_IOS_QUOTEBOARD;
        case 53: return ORDER_SOURCE_T4_IOS_POSITIONS;
        case 54: return ORDER_SOURCE_T4_IOS_ORDERS;
        case 55: return ORDER_SOURCE_T4_IOS_CHART;
        case 56: return ORDER_SOURCE_KEYBOARD;
        case 57: return ORDER_SOURCE_HTTP_API;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderSource> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderSource>() {
            public OrderSource findValueByNumber(int number) {
              return OrderSource.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(34);
    }

    private static final OrderSource[] VALUES = values();

    public static OrderSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderSource(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OrderSource)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.OrderSourceMethod}
   */
  public enum OrderSourceMethod
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORDER_SOURCE_METHOD_UNKNOWN = 0;</code>
     */
    ORDER_SOURCE_METHOD_UNKNOWN(0),
    /**
     * <code>ORDER_SOURCE_METHOD_CLICK = 1;</code>
     */
    ORDER_SOURCE_METHOD_CLICK(1),
    /**
     * <code>ORDER_SOURCE_METHOD_PROMPT = 2;</code>
     */
    ORDER_SOURCE_METHOD_PROMPT(2),
    /**
     * <code>ORDER_SOURCE_METHOD_PRICE_CONFIRM = 3;</code>
     */
    ORDER_SOURCE_METHOD_PRICE_CONFIRM(3),
    /**
     * <code>ORDER_SOURCE_METHOD_ORDER_TICKET = 4;</code>
     */
    ORDER_SOURCE_METHOD_ORDER_TICKET(4),
    /**
     * <code>ORDER_SOURCE_METHOD_KEY_ENTRY = 5;</code>
     */
    ORDER_SOURCE_METHOD_KEY_ENTRY(5),
    /**
     * <code>ORDER_SOURCE_METHOD_ORDER_LOAD_BAR = 6;</code>
     */
    ORDER_SOURCE_METHOD_ORDER_LOAD_BAR(6),
    /**
     * <code>ORDER_SOURCE_METHOD_CONTRACT_TICKET = 7;</code>
     */
    ORDER_SOURCE_METHOD_CONTRACT_TICKET(7),
    /**
     * <code>ORDER_SOURCE_METHOD_QUEUED_ORDER_TICKET = 8;</code>
     */
    ORDER_SOURCE_METHOD_QUEUED_ORDER_TICKET(8),
    /**
     * <code>ORDER_SOURCE_METHOD_CLEARING_HOUSE = 9;</code>
     */
    ORDER_SOURCE_METHOD_CLEARING_HOUSE(9),
    /**
     * <code>ORDER_SOURCE_METHOD_ELECTRONIC = 10;</code>
     */
    ORDER_SOURCE_METHOD_ELECTRONIC(10),
    /**
     * <code>ORDER_SOURCE_METHOD_OFF_FACILITY_SWAP = 11;</code>
     */
    ORDER_SOURCE_METHOD_OFF_FACILITY_SWAP(11),
    /**
     * <code>ORDER_SOURCE_METHOD_PIT = 12;</code>
     */
    ORDER_SOURCE_METHOD_PIT(12),
    /**
     * <code>ORDER_SOURCE_METHOD_REGISTERED_MARKET = 13;</code>
     */
    ORDER_SOURCE_METHOD_REGISTERED_MARKET(13),
    /**
     * <code>ORDER_SOURCE_METHOD_EX_PIT = 14;</code>
     */
    ORDER_SOURCE_METHOD_EX_PIT(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORDER_SOURCE_METHOD_UNKNOWN = 0;</code>
     */
    public static final int ORDER_SOURCE_METHOD_UNKNOWN_VALUE = 0;
    /**
     * <code>ORDER_SOURCE_METHOD_CLICK = 1;</code>
     */
    public static final int ORDER_SOURCE_METHOD_CLICK_VALUE = 1;
    /**
     * <code>ORDER_SOURCE_METHOD_PROMPT = 2;</code>
     */
    public static final int ORDER_SOURCE_METHOD_PROMPT_VALUE = 2;
    /**
     * <code>ORDER_SOURCE_METHOD_PRICE_CONFIRM = 3;</code>
     */
    public static final int ORDER_SOURCE_METHOD_PRICE_CONFIRM_VALUE = 3;
    /**
     * <code>ORDER_SOURCE_METHOD_ORDER_TICKET = 4;</code>
     */
    public static final int ORDER_SOURCE_METHOD_ORDER_TICKET_VALUE = 4;
    /**
     * <code>ORDER_SOURCE_METHOD_KEY_ENTRY = 5;</code>
     */
    public static final int ORDER_SOURCE_METHOD_KEY_ENTRY_VALUE = 5;
    /**
     * <code>ORDER_SOURCE_METHOD_ORDER_LOAD_BAR = 6;</code>
     */
    public static final int ORDER_SOURCE_METHOD_ORDER_LOAD_BAR_VALUE = 6;
    /**
     * <code>ORDER_SOURCE_METHOD_CONTRACT_TICKET = 7;</code>
     */
    public static final int ORDER_SOURCE_METHOD_CONTRACT_TICKET_VALUE = 7;
    /**
     * <code>ORDER_SOURCE_METHOD_QUEUED_ORDER_TICKET = 8;</code>
     */
    public static final int ORDER_SOURCE_METHOD_QUEUED_ORDER_TICKET_VALUE = 8;
    /**
     * <code>ORDER_SOURCE_METHOD_CLEARING_HOUSE = 9;</code>
     */
    public static final int ORDER_SOURCE_METHOD_CLEARING_HOUSE_VALUE = 9;
    /**
     * <code>ORDER_SOURCE_METHOD_ELECTRONIC = 10;</code>
     */
    public static final int ORDER_SOURCE_METHOD_ELECTRONIC_VALUE = 10;
    /**
     * <code>ORDER_SOURCE_METHOD_OFF_FACILITY_SWAP = 11;</code>
     */
    public static final int ORDER_SOURCE_METHOD_OFF_FACILITY_SWAP_VALUE = 11;
    /**
     * <code>ORDER_SOURCE_METHOD_PIT = 12;</code>
     */
    public static final int ORDER_SOURCE_METHOD_PIT_VALUE = 12;
    /**
     * <code>ORDER_SOURCE_METHOD_REGISTERED_MARKET = 13;</code>
     */
    public static final int ORDER_SOURCE_METHOD_REGISTERED_MARKET_VALUE = 13;
    /**
     * <code>ORDER_SOURCE_METHOD_EX_PIT = 14;</code>
     */
    public static final int ORDER_SOURCE_METHOD_EX_PIT_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrderSourceMethod valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OrderSourceMethod forNumber(int value) {
      switch (value) {
        case 0: return ORDER_SOURCE_METHOD_UNKNOWN;
        case 1: return ORDER_SOURCE_METHOD_CLICK;
        case 2: return ORDER_SOURCE_METHOD_PROMPT;
        case 3: return ORDER_SOURCE_METHOD_PRICE_CONFIRM;
        case 4: return ORDER_SOURCE_METHOD_ORDER_TICKET;
        case 5: return ORDER_SOURCE_METHOD_KEY_ENTRY;
        case 6: return ORDER_SOURCE_METHOD_ORDER_LOAD_BAR;
        case 7: return ORDER_SOURCE_METHOD_CONTRACT_TICKET;
        case 8: return ORDER_SOURCE_METHOD_QUEUED_ORDER_TICKET;
        case 9: return ORDER_SOURCE_METHOD_CLEARING_HOUSE;
        case 10: return ORDER_SOURCE_METHOD_ELECTRONIC;
        case 11: return ORDER_SOURCE_METHOD_OFF_FACILITY_SWAP;
        case 12: return ORDER_SOURCE_METHOD_PIT;
        case 13: return ORDER_SOURCE_METHOD_REGISTERED_MARKET;
        case 14: return ORDER_SOURCE_METHOD_EX_PIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrderSourceMethod>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrderSourceMethod> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrderSourceMethod>() {
            public OrderSourceMethod findValueByNumber(int number) {
              return OrderSourceMethod.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(35);
    }

    private static final OrderSourceMethod[] VALUES = values();

    public static OrderSourceMethod valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OrderSourceMethod(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.OrderSourceMethod)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.AccountSubscribeType}
   */
  public enum AccountSubscribeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACCOUNT_SUBSCRIBE_TYPE_NONE = 0;</code>
     */
    ACCOUNT_SUBSCRIBE_TYPE_NONE(0),
    /**
     * <code>ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES = 2;</code>
     */
    ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACCOUNT_SUBSCRIBE_TYPE_NONE = 0;</code>
     */
    public static final int ACCOUNT_SUBSCRIBE_TYPE_NONE_VALUE = 0;
    /**
     * <code>ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES = 2;</code>
     */
    public static final int ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccountSubscribeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccountSubscribeType forNumber(int value) {
      switch (value) {
        case 0: return ACCOUNT_SUBSCRIBE_TYPE_NONE;
        case 2: return ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccountSubscribeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccountSubscribeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccountSubscribeType>() {
            public AccountSubscribeType findValueByNumber(int number) {
              return AccountSubscribeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(36);
    }

    private static final AccountSubscribeType[] VALUES = values();

    public static AccountSubscribeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccountSubscribeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.AccountSubscribeType)
  }

  /**
   * Protobuf enum {@code t4proto.v1.common.UDSStatus}
   */
  public enum UDSStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UDS_STATUS_UNKNOWN = 0;</code>
     */
    UDS_STATUS_UNKNOWN(0),
    /**
     * <code>UDS_STATUS_Success = 1;</code>
     */
    UDS_STATUS_Success(1),
    /**
     * <code>UDS_STATUS_FAILED = 2;</code>
     */
    UDS_STATUS_FAILED(2),
    /**
     * <code>UDS_STATUS_ALREADY_EXISTS = 3;</code>
     */
    UDS_STATUS_ALREADY_EXISTS(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UDS_STATUS_UNKNOWN = 0;</code>
     */
    public static final int UDS_STATUS_UNKNOWN_VALUE = 0;
    /**
     * <code>UDS_STATUS_Success = 1;</code>
     */
    public static final int UDS_STATUS_Success_VALUE = 1;
    /**
     * <code>UDS_STATUS_FAILED = 2;</code>
     */
    public static final int UDS_STATUS_FAILED_VALUE = 2;
    /**
     * <code>UDS_STATUS_ALREADY_EXISTS = 3;</code>
     */
    public static final int UDS_STATUS_ALREADY_EXISTS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static UDSStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static UDSStatus forNumber(int value) {
      switch (value) {
        case 0: return UDS_STATUS_UNKNOWN;
        case 1: return UDS_STATUS_Success;
        case 2: return UDS_STATUS_FAILED;
        case 3: return UDS_STATUS_ALREADY_EXISTS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UDSStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        UDSStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UDSStatus>() {
            public UDSStatus findValueByNumber(int number) {
              return UDSStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return t4proto.v1.common.Enums.getDescriptor().getEnumTypes().get(37);
    }

    private static final UDSStatus[] VALUES = values();

    public static UDSStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private UDSStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:t4proto.v1.common.UDSStatus)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030t4/v1/common/enums.proto\022\021t4proto.v1.c" +
      "ommon*\255\007\n\013LoginResult\022\030\n\024LOGIN_RESULT_SU" +
      "CCESS\020\000\022\027\n\023LOGIN_RESULT_FAILED\020\001\022&\n\"LOGI" +
      "N_RESULT_APPLICATION_NOT_VALID\020\002\022!\n\035LOGI" +
      "N_RESULT_FIRM_NOT_ALLOWED\020\003\022!\n\035LOGIN_RES" +
      "ULT_USER_NOT_ALLOWED\020\004\022\"\n\036LOGIN_RESULT_I" +
      "NCORRECT_VERSION\020\005\022$\n LOGIN_RESULT_LOGGE" +
      "D_IN_ELSEWHERE\020\006\022\027\n\023LOGIN_RESULT_LOGOUT\020" +
      "\007\022&\n\"LOGIN_RESULT_UNEXPECTED_DISCONNECT\020" +
      "\010\022\035\n\031LOGIN_RESULT_UNAUTHORIZED\020\t\022!\n\035LOGI" +
      "N_RESULT_UNEXPECTED_ERROR\020\n\022#\n\037LOGIN_RES" +
      "ULT_ROLE_NOT_SUPPORTED\020\013\022$\n LOGIN_RESULT" +
      "_API_MESSAGE_BACKLOG\020\014\022\'\n#LOGIN_RESULT_S" +
      "ERVER_MESSAGE_BACKLOG\020\r\022!\n\035LOGIN_RESULT_" +
      "PASSWORD_EXPIRED\020\016\022\'\n#LOGIN_RESULT_PASSW" +
      "ORD_CHANGE_FAILED\020\020\022&\n\"LOGIN_RESULT_PASS" +
      "WORD_ALREADY_USED\020\021\022\033\n\027LOGIN_RESULT_LOCK" +
      "ED_OUT\020\022\022-\n)LOGIN_RESULT_ADDITIONAL_USER" +
      "S_NOT_ALLOWED\020\023\022&\n\"LOGIN_RESULT_MARKET_D" +
      "ATA_NOT_SETUP\020\024\022%\n!LOGIN_RESULT_TWO_FACT" +
      "OR_NOT_SETUP\020\025\022\"\n\036LOGIN_RESULT_TWO_FACTO" +
      "R_FAILED\020\026\022\"\n\036LOGIN_RESULT_FIX_SESSION_E" +
      "RROR\020\027\022$\n LOGIN_RESULT_TWO_FACTOR_REQUIR" +
      "ED\020\030\022\034\n\030LOGIN_RESULT_USER_EXISTS\020\031\022!\n\024LO" +
      "GIN_RESULT_UNKNOWN\020\377\377\377\377\377\377\377\377\377\001*a\n\013PriceFo" +
      "rmat\022\030\n\024PRICE_FORMAT_DECIMAL\020\000\022\025\n\021PRICE_" +
      "FORMAT_REAL\020\001\022!\n\035PRICE_FORMAT_CLEARING_D" +
      "ECIMAL\020\002*\225\002\n\013AccountMode\022\032\n\026ACCOUNT_MODE" +
      "_BY_MARKET\020\000\022\034\n\030ACCOUNT_MODE_BY_CONTRACT" +
      "\020\001\022\033\n\027ACCOUNT_MODE_BY_ACCOUNT\020\002\022\037\n\033ACCOU" +
      "NT_MODE_BY_ACCOUNT_DAY\020\003\022\035\n\031ACCOUNT_MODE" +
      "_BY_PORTFOLIO\020\004\022\025\n\021ACCOUNT_MODE_T500\020\005\022\032" +
      "\n\026ACCOUNT_MODE_T500_DEMO\020\006\022\031\n\025ACCOUNT_MO" +
      "DE_AUTO_LIQ\020\007\022!\n\024ACCOUNT_MODE_UNKNOWN\020\377\377" +
      "\377\377\377\377\377\377\377\001*\230\003\n\nMarketMode\022\031\n\025MARKET_MODE_U" +
      "NDEFINED\020\000\022\030\n\024MARKET_MODE_PRE_OPEN\020\001\022\024\n\020" +
      "MARKET_MODE_OPEN\020\002\022\037\n\033MARKET_MODE_RESTRI" +
      "CTED_OPEN\020\003\022\032\n\026MARKET_MODE_PRE_CLOSED\020\004\022" +
      "\026\n\022MARKET_MODE_CLOSED\020\005\022\031\n\025MARKET_MODE_S" +
      "USPENDED\020\006\022\026\n\022MARKET_MODE_HALTED\020\007\022\026\n\022MA" +
      "RKET_MODE_FAILED\020\010\022\031\n\025MARKET_MODE_PRE_CR" +
      "OSS\020\t\022\025\n\021MARKET_MODE_CROSS\020\n\022\027\n\023MARKET_M" +
      "ODE_EXPIRED\020\013\022\030\n\024MARKET_MODE_REJECTED\020\014\022" +
      "\033\n\027MARKET_MODE_UNAVAILABLE\020\r\022\035\n\031MARKET_M" +
      "ODE_NO_PERMISSION\020\016*\214\002\n\013DepthBuffer\022 \n\034D" +
      "EPTH_BUFFER_NO_SUBSCRIPTION\020\000\022\033\n\027DEPTH_B" +
      "UFFER_SLOW_TRADE\020\001\022\034\n\030DEPTH_BUFFER_SMART" +
      "_TRADE\020\002\022\033\n\027DEPTH_BUFFER_SLOW_SMART\020\003\022\026\n" +
      "\022DEPTH_BUFFER_SMART\020\004\022\033\n\027DEPTH_BUFFER_FA" +
      "ST_SMART\020\005\022\024\n\020DEPTH_BUFFER_ALL\020\006\022\033\n\027DEPT" +
      "H_BUFFER_FAST_TRADE\020\007\022\033\n\027DEPTH_BUFFER_TR" +
      "ADE_ONLY\020\010*u\n\013DepthLevels\022\032\n\026DEPTH_LEVEL" +
      "S_UNDEFINED\020\000\022\032\n\026DEPTH_LEVELS_BEST_ONLY\020" +
      "\001\022\027\n\023DEPTH_LEVELS_NORMAL\020\n\022\025\n\020DEPTH_LEVE" +
      "LS_ALL\020\377\001*T\n\010BidOffer\022\027\n\023BID_OFFER_UNDEF" +
      "INED\020\000\022\021\n\rBID_OFFER_BID\020\001\022\034\n\017BID_OFFER_O" +
      "FFER\020\377\377\377\377\377\377\377\377\377\001*\210\004\n\014MarketFlags2\022\033\n\027MARK" +
      "ET_FLAGS2_UNDEFINED\020\000\022\026\n\022MARKET_FLAGS2_F" +
      "AST\020\001\022&\n\"MARKET_FLAGS2_PRICE_LIMITS_ENAB" +
      "LED\020\002\022\033\n\027MARKET_FLAGS2_NO_CANCEL\020\004\022\035\n\031MA" +
      "RKET_FLAGS2_IMPLIED_OFF\020\010\022&\n\"MARKET_FLAG" +
      "S2_NEW_PRICE_INDICATION\020\020\022+\n\'MARKET_FLAG" +
      "S2_NOT_AVAILABLE_FOR_TRADING\020 \022\034\n\030MARKET" +
      "_FLAGS2_POST_CLOSE\020@\022!\n\034MARKET_FLAGS2_GR" +
      "OUP_SCHEDULE\020\200\001\022(\n#MARKET_FLAGS2_INSTRUM" +
      "ENT_ACTIVATION\020\200\002\022(\n#MARKET_FLAGS2_INSTR" +
      "UMENT_EXPIRATION\020\200\004\022\037\n\032MARKET_FLAGS2_MAR" +
      "KET_EVENT\020\200\010\022&\n!MARKET_FLAGS2_RECOVERY_I" +
      "N_PROCESS\020\200\020\022,\n\'MARKET_FLAGS2_SURVEILLAN" +
      "CE_INTERVENTION\020\200 *\334\002\n\014ContractType\022\031\n\025C" +
      "ONTRACT_TYPE_UNKNOWN\020\000\022\030\n\024CONTRACT_TYPE_" +
      "OPTION\020\001\022\035\n\031CONTRACT_TYPE_OPTION_CALL\020\002\022" +
      "\034\n\030CONTRACT_TYPE_OPTION_PUT\020\003\022\027\n\023CONTRAC" +
      "T_TYPE_STOCK\020\004\022\030\n\024CONTRACT_TYPE_FUTURE\020\005" +
      "\022\027\n\023CONTRACT_TYPE_INDEX\020\006\022\033\n\027CONTRACT_TY" +
      "PE_SYNTHETIC\020\007\022\037\n\033CONTRACT_TYPE_BINARY_O" +
      "PTION\020\010\022\025\n\021CONTRACT_TYPE_UDS\020\t\022\031\n\025CONTRA" +
      "CT_TYPE_FX_SPOT\020\n\022\036\n\021CONTRACT_TYPE_ANY\020\377" +
      "\377\377\377\377\377\377\377\377\001*\303\001\n\016MarketDataType\022\031\n\025MARKET_D" +
      "ATA_TYPE_NONE\020\000\022\030\n\024MARKET_DATA_TYPE_TOB\020" +
      "\001\022\032\n\026MARKET_DATA_TYPE_DEPTH\020\002\022\033\n\027MARKET_" +
      "DATA_TYPE_E_MINI\020\004\022\034\n\030MARKET_DATA_TYPE_D" +
      "ELAYED\020\010\022%\n\030MARKET_DATA_TYPE_NOT_SET\020\377\377\377" +
      "\377\377\377\377\377\377\001*\375\026\n\014StrategyType\022\026\n\022STRATEGY_TYP" +
      "E_NONE\020\000\022!\n\035STRATEGY_TYPE_CALENDAR_SPREA" +
      "D\020\001\022$\n STRATEGY_TYPE_RT_CALENDAR_SPREAD\020" +
      "\002\022\'\n#STRATEGY_TYPE_INTER_CONTRACT_SPREAD" +
      "\020\003\022\033\n\027STRATEGY_TYPE_BUTTERFLY\020\004\022\030\n\024STRAT" +
      "EGY_TYPE_CONDOR\020\005\022\"\n\036STRATEGY_TYPE_DOUBL" +
      "E_BUTTERFLY\020\006\022\034\n\030STRATEGY_TYPE_HORIZONTA" +
      "L\020\007\022\030\n\024STRATEGY_TYPE_BUNDLE\020\010\022\037\n\033STRATEG" +
      "Y_TYPE_MONTH_VS_PACK\020\t\022\026\n\022STRATEGY_TYPE_" +
      "PACK\020\n\022\035\n\031STRATEGY_TYPE_PACK_SPREAD\020\013\022 \n" +
      "\034STRATEGY_TYPE_PACK_BUTTERFLY\020\014\022\037\n\033STRAT" +
      "EGY_TYPE_BUNDLE_SPREAD\020\r\022\027\n\023STRATEGY_TYP" +
      "E_STRIP\020\016\022\027\n\023STRATEGY_TYPE_CRACK\020\017\022!\n\035ST" +
      "RATEGY_TYPE_TREASURY_SPREAD\020\020\022\027\n\023STRATEG" +
      "Y_TYPE_CRUSH\020\021\022\033\n\027STRATEGY_TYPE_THREE_WA" +
      "Y\020\023\022,\n(STRATEGY_TYPE_THREE_WAY_STRADDLE_" +
      "VS_CALL\020\024\022+\n\'STRATEGY_TYPE_THREE_WAY_STR" +
      "ADDLE_VS_PUT\020\025\022\025\n\021STRATEGY_TYPE_BOX\020\026\022\033\n" +
      "\027STRATEGY_TYPE_XMAS_TREE\020\027\022#\n\037STRATEGY_T" +
      "YPE_CONDITIONAL_CURVE\020\030\022\030\n\024STRATEGY_TYPE" +
      "_DOUBLE\020\031\022%\n!STRATEGY_TYPE_HORIZONTAL_ST" +
      "RADDLE\020\032\022\035\n\031STRATEGY_TYPE_IRON_CONDOR\020\033\022" +
      "\033\n\027STRATEGY_TYPE_RATIO_1X2\020\034\022\033\n\027STRATEGY" +
      "_TYPE_RATIO_1X3\020\035\022\033\n\027STRATEGY_TYPE_RATIO" +
      "_2X3\020\036\022\037\n\033STRATEGY_TYPE_RISK_REVERSAL\020\037\022" +
      " \n\034STRATEGY_TYPE_STRADDLE_STRIP\020 \022\032\n\026STR" +
      "ATEGY_TYPE_STRADDLE\020!\022\032\n\026STRATEGY_TYPE_S" +
      "TRANGLE\020\"\022\032\n\026STRATEGY_TYPE_VERTICAL\020#\022\034\n" +
      "\030STRATEGY_TYPE_JELLY_ROLL\020$\022 \n\034STRATEGY_" +
      "TYPE_IRON_BUTTERFLY\020%\022\026\n\022STRATEGY_TYPE_G" +
      "UTS\020&\022\031\n\025STRATEGY_TYPE_GENERIC\020\'\022\032\n\026STRA" +
      "TEGY_TYPE_DIAGONAL\020(\022#\n\037STRATEGY_TYPE_CO" +
      "VERED_THREE_WAY\020)\0224\n0STRATEGY_TYPE_COVER" +
      "ED_THREE_WAY_STRADDLE_VS_CALL\020*\0223\n/STRAT" +
      "EGY_TYPE_COVERED_THREE_WAY_STRADDLE_VS_P" +
      "UT\020+\022\035\n\031STRATEGY_TYPE_COVERED_BOX\020,\022#\n\037S" +
      "TRATEGY_TYPE_COVERED_XMAS_TREE\020-\022+\n\'STRA" +
      "TEGY_TYPE_COVERED_CONDITIONAL_CURVE\020.\022 \n" +
      "\034STRATEGY_TYPE_COVERED_DOUBLE\020/\022-\n)STRAT" +
      "EGY_TYPE_COVERED_HORIZONTAL_STRADDLE\0200\022%" +
      "\n!STRATEGY_TYPE_COVERED_IRON_CONDOR\0201\022#\n" +
      "\037STRATEGY_TYPE_COVERED_RATIO_1X2\0202\022#\n\037ST" +
      "RATEGY_TYPE_COVERED_RATIO_1X3\0203\022#\n\037STRAT" +
      "EGY_TYPE_COVERED_RATIO_2X3\0204\022\'\n#STRATEGY" +
      "_TYPE_COVERED_RISK_REVERSAL\0205\022(\n$STRATEG" +
      "Y_TYPE_COVERED_STRADDLE_STRIP\0206\022\"\n\036STRAT" +
      "EGY_TYPE_COVERED_STRADDLE\0207\022\"\n\036STRATEGY_" +
      "TYPE_COVERED_STRANGLE\0208\022\"\n\036STRATEGY_TYPE" +
      "_COVERED_VERTICAL\0209\022$\n STRATEGY_TYPE_COV" +
      "ERED_JELLY_ROLL\020:\022(\n$STRATEGY_TYPE_COVER" +
      "ED_IRON_BUTTERFLY\020;\022\036\n\032STRATEGY_TYPE_COV" +
      "ERED_GUTS\020<\022!\n\035STRATEGY_TYPE_COVERED_GEN" +
      "ERIC\020=\022\"\n\036STRATEGY_TYPE_COVERED_DIAGONAL" +
      "\020>\022#\n\037STRATEGY_TYPE_COVERED_BUTTERFLY\020?\022" +
      " \n\034STRATEGY_TYPE_COVERED_CONDOR\020@\022$\n STR" +
      "ATEGY_TYPE_COVERED_HORIZONTAL\020A\022\037\n\033STRAT" +
      "EGY_TYPE_COVERED_STRIP\020B\022 \n\034STRATEGY_TYP" +
      "E_COVERED_OPTION\020C\022 \n\034STRATEGY_TYPE_BALA" +
      "NCED_STRIP\020D\022\"\n\036STRATEGY_TYPE_UNBALANCED" +
      "_STRIP\020E\022&\n\"STRATEGY_TYPE_INTER_CONTRACT" +
      "_STRIP\020F\022\036\n\032STRATEGY_TYPE_INVOICE_SWAP\020G" +
      "\022$\n STRATEGY_TYPE_INTEREST_RATE_SWAP\020H\022%" +
      "\n!STRATEGY_TYPE_AVERAGE_PRICE_STRIP\020I\022\037\n" +
      "\033STRATEGY_TYPE_TREASURY_TAIL\020J\022,\n(STRATE" +
      "GY_TYPE_AVERAGE_PRICE_STRIP_SPREAD\020K\022\'\n#" +
      "STRATEGY_TYPE_INVOICE_SWAP_CALENDAR\020L\022\'\n" +
      "#STRATEGY_TYPE_INVOICE_SWAP_SWITCHES\020M\022*" +
      "\n&STRATEGY_TYPE_VOLATILITY_QUOTED_OPTION" +
      "\020N\022\031\n\025STRATEGY_TYPE_FX_SPOT\020O\022&\n\"STRATEG" +
      "Y_TYPE_AVERAGE_PRICE_BUNDLE\020P\022*\n&STRATEG" +
      "Y_TYPE_FIXED_PRICE_RATIO_SPREAD\020Q\022(\n$STR" +
      "ATEGY_TYPE_SA_CBOT_SOYBEAN_SPREAD\020R\022*\n&S" +
      "TRATEGY_TYPE_BALANCED_STRIP_BUTTERFLY\020S\022" +
      "\036\n\021STRATEGY_TYPE_ANY\020\377\377\377\377\377\377\377\377\377\001*\271\002\n\022Cont" +
      "ractRiskStatus\022\035\n\031CONTRACT_RISK_STATUS_N" +
      "ONE\020\000\022$\n CONTRACT_RISK_STATUS_DAY_TRADIN" +
      "G\020\001\022!\n\035CONTRACT_RISK_STATUS_ALERTING\020\002\022$" +
      "\n CONTRACT_RISK_STATUS_LIQUIDATION\020\003\022,\n(" +
      "CONTRACT_RISK_STATUS_LIQUIDATION_WAITING" +
      "\020\004\0225\n1CONTRACT_RISK_STATUS_BLOCK_EXPIRAT" +
      "ION_LIQUIDATION\020\005\0220\n,CONTRACT_RISK_STATU" +
      "S_PRICE_LIMIT_LIQUIDATION\020\006*\316\002\n\rAccountS" +
      "tatus\022\032\n\026ACCOUNT_STATUS_UNKNOWN\020\000\022\032\n\026ACC" +
      "OUNT_STATUS_BLOCKED\020\001\022\025\n\021ACCOUNT_STATUS_" +
      "OK\020\002\022\037\n\033ACCOUNT_STATUS_UNRESTRICTED\020\003\022\032\n" +
      "\026ACCOUNT_STATUS_DELETED\020\004\022\033\n\027ACCOUNT_STA" +
      "TUS_DISABLED\020\005\022&\n\"ACCOUNT_STATUS_OUTSIDE" +
      "_ACTIVE_TIME\020\006\022!\n\035ACCOUNT_STATUS_NOT_ACC" +
      "ESSIBLE\020\007\022!\n\035ACCOUNT_STATUS_PIT_TRADE_ON" +
      "LY\020\010\022&\n\"ACCOUNT_STATUS_LOSS_LIMIT_EXCEED" +
      "ED\020\t*\225\001\n\016AccountEnabled\022\034\n\030ACCOUNT_ENABL" +
      "ED_DISABLED\020\000\022\033\n\027ACCOUNT_ENABLED_ENABLED" +
      "\020\001\022$\n ACCOUNT_ENABLED_BACK_OFFICE_ONLY\020\002" +
      "\022\"\n\036ACCOUNT_ENABLED_PIT_TRADE_ONLY\020\003*\203\001\n" +
      "\021AccountMarginType\022\034\n\030ACCOUNT_MARGIN_TYP" +
      "E_SPEC\020\000\022\'\n#ACCOUNT_MARGIN_TYPE_HEDGE_OR" +
      "_MEMBER\020\001\022\'\n#ACCOUNT_MARGIN_TYPE_FIRM_OR" +
      "_ACCOUNT\020\002*\371\t\n\013OrderChange\022\025\n\021ORDER_CHAN" +
      "GE_NONE\020\000\022\027\n\023ORDER_CHANGE_FAILED\020\001\022(\n$OR" +
      "DER_CHANGE_SUBMISSION_RISK_SUCCESS\020\002\022)\n%" +
      "ORDER_CHANGE_SUBMISSION_RISK_REJECTED\020\003\022" +
      " \n\034ORDER_CHANGE_SUBMISSION_SENT\020\004\022\"\n\036ORD" +
      "ER_CHANGE_SUBMISSION_FAILED\020\005\022#\n\037ORDER_C" +
      "HANGE_SUBMISSION_SUCCESS\020\006\022$\n ORDER_CHAN" +
      "GE_SUBMISSION_REJECTED\020\007\022&\n\"ORDER_CHANGE" +
      "_REVISION_RISK_SUCCESS\020\010\022%\n!ORDER_CHANGE" +
      "_REVISION_RISK_FAILED\020\t\022\036\n\032ORDER_CHANGE_" +
      "REVISION_SENT\020\n\022 \n\034ORDER_CHANGE_REVISION" +
      "_FAILED\020\013\022!\n\035ORDER_CHANGE_REVISION_SUCCE" +
      "SS\020\014\022\"\n\036ORDER_CHANGE_REVISION_REJECTED\020\r" +
      "\022\"\n\036ORDER_CHANGE_PULL_RISK_SUCCESS\020\016\022!\n\035" +
      "ORDER_CHANGE_PULL_RISK_FAILED\020\017\022\032\n\026ORDER" +
      "_CHANGE_PULL_SENT\020\020\022\034\n\030ORDER_CHANGE_PULL" +
      "_FAILED\020\021\022\035\n\031ORDER_CHANGE_PULL_SUCCESS\020\022" +
      "\022\036\n\032ORDER_CHANGE_PULL_REJECTED\020\023\022\026\n\022ORDE" +
      "R_CHANGE_TRADE\020\024\022 \n\034ORDER_CHANGE_TRADE_C" +
      "OMPLETED\020\025\022\035\n\031ORDER_CHANGE_TRADE_BUSTED\020" +
      "\026\022\031\n\025ORDER_CHANGE_HANDOVER\020\027\022,\n(ORDER_CH" +
      "ANGE_STATUS_REQUEST_RISK_SUCCESS\020\030\022+\n\'OR" +
      "DER_CHANGE_STATUS_REQUEST_RISK_FAILED\020\031\022" +
      "$\n ORDER_CHANGE_STATUS_REQUEST_SENT\020\032\022&\n" +
      "\"ORDER_CHANGE_STATUS_REQUEST_FAILED\020\033\022\'\n" +
      "#ORDER_CHANGE_STATUS_REQUEST_SUCCESS\020\034\022(" +
      "\n$ORDER_CHANGE_STATUS_REQUEST_REJECTED\020\035" +
      "\022\031\n\025ORDER_CHANGE_ROLLOVER\020\036\022\034\n\030ORDER_CHA" +
      "NGE_TAG_SUCCESS\020\037\022\033\n\027ORDER_CHANGE_TAG_FA" +
      "ILED\020 \022&\n\"ORDER_CHANGE_ADD_PIT_TRADE_SUC" +
      "CESS\020!\022%\n!ORDER_CHANGE_ADD_PIT_TRADE_FAI" +
      "LED\020\"\022\'\n#ORDER_CHANGE_ADD_PIT_TRADE_REJE" +
      "CTED\020#*\247\001\n\013OrderStatus\022\025\n\021ORDER_STATUS_N" +
      "ONE\020\000\022\030\n\024ORDER_STATUS_WORKING\020\001\022\031\n\025ORDER" +
      "_STATUS_FINISHED\020\002\022\031\n\025ORDER_STATUS_REJEC" +
      "TED\020\003\022\025\n\021ORDER_STATUS_HELD\020\004\022\032\n\026ORDER_ST" +
      "ATUS_NO_CHANGE\020\005*\304\001\n\017ResponsePending\022\031\n\025" +
      "RESPONSE_PENDING_NONE\020\000\022\037\n\033RESPONSE_PEND" +
      "ING_SUBMISSION\020\001\022\035\n\031RESPONSE_PENDING_REV" +
      "ISION\020\002\022\031\n\025RESPONSE_PENDING_PULL\020\003\022\033\n\027RE" +
      "SPONSE_PENDING_STATUS\020\004\022\036\n\032RESPONSE_PEND" +
      "ING_NO_CHANGE\020\005*\273\006\n\016ActivationType\022\035\n\031AC" +
      "TIVATION_TYPE_IMMEDIATE\020\000\022\030\n\024ACTIVATION_" +
      "TYPE_HOLD\020\001\022\035\n\031ACTIVATION_TYPE_TRIGGERED" +
      "\020\002\022$\n ACTIVATION_TYPE_AT_OR_AFTER_TIME\020\003" +
      "\022+\n\'ACTIVATION_TYPE_AT_OR_ABOVE_TRADE_TI" +
      "CKS\020\004\022+\n\'ACTIVATION_TYPE_AT_OR_BELOW_TRA" +
      "DE_TICKS\020\005\022\"\n\036ACTIVATION_TYPE_ON_MARKET_" +
      "MODE\020\006\022.\n*ACTIVATION_TYPE_TRIGGERED_AT_O" +
      "R_AFTER_TIME\020\007\0225\n1ACTIVATION_TYPE_TRIGGE" +
      "RED_AT_OR_ABOVE_TRADE_TICKS\020\010\0225\n1ACTIVAT" +
      "ION_TYPE_TRIGGERED_AT_OR_BELOW_TRADE_TIC" +
      "KS\020\t\022,\n(ACTIVATION_TYPE_TRIGGERED_ON_MAR" +
      "KET_MODE\020\n\022\031\n\025ACTIVATION_TYPE_QUEUE\020\013\022#\n" +
      "\037ACTIVATION_TYPE_TRIGGERED_QUEUE\020\014\022$\n AC" +
      "TIVATION_TYPE_PIT_FILLED_QUEUE\020\r\022%\n!ACTI" +
      "VATION_TYPE_AT_OR_ABOVE_TICKS\020\016\022%\n!ACTIV" +
      "ATION_TYPE_AT_OR_BELOW_TICKS\020\017\022/\n+ACTIVA" +
      "TION_TYPE_TRIGGERED_AT_OR_ABOVE_TICKS\020\020\022" +
      "/\n+ACTIVATION_TYPE_TRIGGERED_AT_OR_BELOW" +
      "_TICKS\020\021\022#\n\037ACTIVATION_TYPE_MARKET_ON_CL" +
      "OSE\020\022\022&\n\031ACTIVATION_TYPE_UNDEFINED\020\377\377\377\377\377" +
      "\377\377\377\377\001*\313\004\n\tPriceType\022\025\n\021PRICE_TYPE_MARKET" +
      "\020\000\022\024\n\020PRICE_TYPE_LIMIT\020\001\022\032\n\026PRICE_TYPE_S" +
      "TOP_MARKET\020\002\022\031\n\025PRICE_TYPE_STOP_LIMIT\020\003\022" +
      "!\n\035PRICE_TYPE_OVERNIGHT_POSITION\020\004\022\022\n\016PR" +
      "ICE_TYPE_PIT\020\005\022 \n\034PRICE_TYPE_MARKET_IF_T" +
      "OUCHED\020\006\022\036\n\032PRICE_TYPE_STOP_SAME_LIMIT\020\007" +
      "\022\023\n\017PRICE_TYPE_JOIN\020\010\022\022\n\016PRICE_TYPE_HIT\020" +
      "\t\022#\n\037PRICE_TYPE_BACK_OFFICE_POSITION\020\n\022\037" +
      "\n\033PRICE_TYPE_SYNTHETIC_MARKET\020\013\022\036\n\032PRICE" +
      "_TYPE_SYNTHETIC_LIMIT\020\014\022$\n PRICE_TYPE_SY" +
      "NTHETIC_STOP_MARKET\020\r\022#\n\037PRICE_TYPE_SYNT" +
      "HETIC_STOP_LIMIT\020\016\022\022\n\016PRICE_TYPE_RFQ\020\017\022\026" +
      "\n\022PRICE_TYPE_FLATTEN\020\020\022\025\n\021PRICE_TYPE_IMP" +
      "ORT\020\021\022!\n\035PRICE_TYPE_OPTIONS_SETTLEMENT\020\022" +
      "\022!\n\024PRICE_TYPE_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001*\345\001\n\010" +
      "TimeType\022\024\n\020TIME_TYPE_NORMAL\020\000\022\"\n\036TIME_T" +
      "YPE_IMMEDIATE_AND_CANCEL\020\001\022!\n\035TIME_TYPE_" +
      "GOOD_TILL_CANCELLED\020\002\022\035\n\031TIME_TYPE_COMPL" +
      "ETE_VOLUME\020\003\022\034\n\030TIME_TYPE_MARKET_ON_OPEN" +
      "\020\004\022\035\n\031TIME_TYPE_MARKET_ON_CLOSE\020\005\022 \n\023TIM" +
      "E_TYPE_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001*\303\002\n\017Applicat" +
      "ionType\022\033\n\027APPLICATION_TYPE_MANUAL\020\000\022\030\n\024" +
      "APPLICATION_TYPE_ATS\020\001\022!\n\035APPLICATION_TY" +
      "PE_PROFESSIONAL\020\002\022%\n!APPLICATION_TYPE_NO" +
      "N_PROFESSIONAL\020\003\022\037\n\033APPLICATION_TYPE_TRA" +
      "DE_DESK\020\004\022\036\n\032APPLICATION_TYPE_WALLBOARD\020" +
      "\005\022\037\n\033APPLICATION_TYPE_SUB_VENDOR\020\006\022 \n\034AP" +
      "PLICATION_TYPE_ATS_DISPLAY\020\007\022+\n\'APPLICAT" +
      "ION_TYPE_FINANCIAL_PROFESSIONAL\020\010*O\n\007Buy" +
      "Sell\022\026\n\022BUY_SELL_UNDEFINED\020\000\022\020\n\014BUY_SELL" +
      "_BUY\020\001\022\032\n\rBUY_SELL_SELL\020\377\377\377\377\377\377\377\377\377\001*\204\001\n\003C" +
      "TI\022\021\n\rCTI_UNDEFINED\020\000\022\016\n\nCTI_MEMBER\020\001\022\023\n" +
      "\017CTI_PROPRIETARY\020\002\022\025\n\021CTI_BROKER_MEMBER\020" +
      "\003\022\027\n\023CTI_BROKER_CUSTOMER\020\004\022\025\n\010CTI_NONE\020\377" +
      "\377\377\377\377\377\377\377\377\001*\375\002\n\006Origin\022\024\n\020ORIGIN_UNDEFINED" +
      "\020\000\022\023\n\017ORIGIN_CUSTOMER\020\001\022\027\n\023ORIGIN_NON_CU" +
      "STOMER\020\002\022\030\n\024ORIGIN_OTHER_MEMBERS\020\003\022\030\n\024OR" +
      "IGIN_FLOOR_BROKERS\020\004\022\027\n\023ORIGIN_POSTING_N" +
      "ONE\020\005\022\031\n\025ORIGIN_POSTING_MANUAL\020\006\022\034\n\030ORIG" +
      "IN_POSTING_AUTOMATIC\020\007\022\032\n\026ORIGIN_POSTING" +
      "_GIVE_UP\020\010\022-\n)ORIGIN_POSTING_AUTO_AND_AC" +
      "T_AUTHORISATION\020\t\022/\n+ORIGIN_POSTING_MANU" +
      "AL_AND_ACT_AUTHORISATION\020\n\022\024\n\020ORIGIN_PRI" +
      "NCIPAL\020\013\022\027\n\023ORIGIN_MARKET_MAKER\020\014*\326\020\n\013Ac" +
      "countCode\022\032\n\026ACCOUNT_CODE_UNDEFINED\020\000\022\025\n" +
      "\021ACCOUNT_CODE_NONE\020\001\022\'\n#ACCOUNT_CODE_GIV" +
      "E_UP_TO_SINGLE_FIRM\020\002\022*\n&ACCOUNT_CODE_GI" +
      "VE_UP_TO_MULTIPLE_FIRMS\020\003\022\035\n\031ACCOUNT_COD" +
      "E_MARKET_MAKER\020\004\022\031\n\025ACCOUNT_CODE_AGENT_A" +
      "1\020\005\022\033\n\027ACCOUNT_CODE_GIVE_UP_G1\020\006\022\033\n\027ACCO" +
      "UNT_CODE_GIVE_UP_G2\020\007\022 \n\034ACCOUNT_CODE_MA" +
      "RKET_MAKER_M1\020\010\022 \n\034ACCOUNT_CODE_MARKET_M" +
      "AKER_M2\020\t\022\037\n\033ACCOUNT_CODE_PROPRIETARY_P1" +
      "\020\n\022\037\n\033ACCOUNT_CODE_PROPRIETARY_P2\020\013\022\033\n\027A" +
      "CCOUNT_CODE_SEGREGATED\020\014\022\037\n\033ACCOUNT_CODE" +
      "_NON_SEGREGATED\020\r\022\026\n\022ACCOUNT_CODE_HOUSE\020" +
      "\016\022\026\n\022ACCOUNT_CODE_LOCAL\020\017\022\030\n\024ACCOUNT_COD" +
      "E_DEFAULT\020\020\022\032\n\026ACCOUNT_CODE_ALLOCATED\020\021\022" +
      "\026\n\022ACCOUNT_CODE_SPLIT\020\022\022\033\n\027ACCOUNT_CODE_" +
      "UNASSIGNED\020\023\022\036\n\032ACCOUNT_CODE_GAS_ASSOCIA" +
      "TE\020\024\022\031\n\025ACCOUNT_CODE_CUSTOMER\020\025\022$\n ACCOU" +
      "NT_CODE_US_CUSTOMER_FUTURES\020\026\022\"\n\036ACCOUNT" +
      "_CODE_US_CUSTOMER_SWAPS\020\027\022!\n\035ACCOUNT_COD" +
      "E_US_CUSTOMER_FBOT\020\030\022\025\n\021ACCOUNT_CODE_FIR" +
      "M\020\031\0223\n/ACCOUNT_CODE_MEMBER_CUSTOMER_SEGR" +
      "EGATED_ACCOUNT\020\032\022%\n!ACCOUNT_CODE_MEMBER_" +
      "HOUSE_ACCOUNT\020\033\022.\n*ACCOUNT_CODE_MEMBER_S" +
      "IPC_PROTECTED_ACCOUNT\020\034\022B\n>ACCOUNT_CODE_" +
      "USER_PROXY_FOR_TRADER_CUSTOMER_SEGREGATE" +
      "D_ACCOUNT\020\035\0224\n0ACCOUNT_CODE_USER_PROXY_F" +
      "OR_TRADER_HOUSE_ACCOUNT\020\036\022=\n9ACCOUNT_COD" +
      "E_USER_PROXY_FOR_TRADER_SIPC_PROTECTED_A" +
      "CCOUNT\020\037\022)\n%ACCOUNT_CODE_NON_MEMBER_HOUS" +
      "E_ACCOUNT\020 \0222\n.ACCOUNT_CODE_NON_MEMBER_S" +
      "IPC_PROTECTED_ACCOUNT\020!\0222\n.ACCOUNT_CODE_" +
      "CUSTOMER_FLOOR_BROKER_WORKSTATION\020\"\022\031\n\025A" +
      "CCOUNT_CODE_AGENT_A2\020#\022\031\n\025ACCOUNT_CODE_A" +
      "GENT_A3\020$\022\031\n\025ACCOUNT_CODE_AGENT_A4\020%\022\031\n\025" +
      "ACCOUNT_CODE_AGENT_A5\020&\022\031\n\025ACCOUNT_CODE_" +
      "AGENT_A6\020\'\022\031\n\025ACCOUNT_CODE_AGENT_A7\020(\022\031\n" +
      "\025ACCOUNT_CODE_AGENT_A8\020)\022\031\n\025ACCOUNT_CODE" +
      "_AGENT_A9\020*\022$\n ACCOUNT_CODE_CLIENT_SEGRE" +
      "GATED_E\020+\022$\n ACCOUNT_CODE_CLIENT_SEGREGA" +
      "TED_K\020,\022$\n ACCOUNT_CODE_CLIENT_SEGREGATE" +
      "D_R\020-\022\035\n\031ACCOUNT_CODE_SEGREGATED_T\020.\0222\n." +
      "ACCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISO" +
      "C_CASS\020/\0223\n/ACCOUNT_CODE_INDIRECT_CLEARI" +
      "NG_GROSS_ISOC_TTFCA\0200\022-\n)ACCOUNT_CODE_IN" +
      "DIRECT_CLEARING_GROSS_CASS\0201\022.\n*ACCOUNT_" +
      "CODE_INDIRECT_CLEARING_GROSS_TTFCA\0202\022+\n\'" +
      "ACCOUNT_CODE_INDIRECT_CLEARING_NET_CASS\020" +
      "3\022-\n)ACCOUNT_CODE_INDIRECT_CLEARING_NETS" +
      "_TTFCA\0204\022\023\n\017ACCOUNT_CODE_RO\0205\022#\n\037ACCOUNT" +
      "_CODE_LIQUIDITY_PROVIDER\0206\022\036\n\032ACCOUNT_CO" +
      "DE_RELATED_PARTY\0207\0220\n,ACCOUNT_CODE_STRUC" +
      "TURED_PRODUCT_MARKET_MAKER\0208\022\035\n\031ACCOUNT_" +
      "CODE_OMEGA_CLIENT\0209\022\035\n\031ACCOUNT_CODE_CERE" +
      "S_CLIENT\020:*Y\n\tOpenClose\022\023\n\017OPEN_CLOSE_OP" +
      "EN\020\000\022\024\n\020OPEN_CLOSE_CLOSE\020\001\022!\n\024OPEN_CLOSE" +
      "_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001*\202\003\n\031CustOrderHandl" +
      "ingInstType\022&\n\"CUST_ORDER_HANDLING_INST_" +
      "TYPE_NONE\020\000\022&\n\"CUST_ORDER_HANDLING_INST_" +
      "TYPE_DESK\020\001\022,\n(CUST_ORDER_HANDLING_INST_" +
      "TYPE_ELECTRONIC\020\002\022:\n6CUST_ORDER_HANDLING" +
      "_INST_TYPE_VENDOR_PROVIDED_PLATFORM\020\003\022A\n" +
      "=CUST_ORDER_HANDLING_INST_TYPE_SPONSORED" +
      "_ACCESS_VIA_API_OR_FIX\020\004\022?\n;CUST_ORDER_H" +
      "ANDLING_INST_TYPE_PREMIUM_ALGO_TRADING_P" +
      "ROVIDER\020\005\022\'\n#CUST_ORDER_HANDLING_INST_TY" +
      "PE_OTHER\020\006*\241\001\n\025AvgPriceIndicatorType\022!\n\035" +
      "AVG_PRICE_INDICATOR_TYPE_NONE\020\000\0220\n,AVG_P" +
      "RICE_INDICATOR_TYPE_AVERAGE_PRICE_GROUP\020" +
      "\001\0223\n/AVG_PRICE_INDICATOR_TYPE_NOTIONAL_V" +
      "ALUE_AVERAGE\020\002*\177\n\026ClearingTradePriceType" +
      "\022-\n)CLEARING_TRADE_PRICE_TYPE_EXECUTION_" +
      "PRICE\020\000\0226\n2CLEARING_TRADE_PRICE_TYPE_ALT" +
      "ERNATE_CLEARING_PRICE\020\001*\277\001\n\nBillingFee\022\031" +
      "\n\025BILLING_FEE_UNDEFINED\020\000\022\030\n\024BILLING_FEE" +
      "_CUSTOMER\020\001\022\035\n\031BILLING_FEE_EQUITY_MEMBER" +
      "\020\002\022\032\n\026BILLING_FEE_FIRM_106HJ\020\003\022$\n BILLIN" +
      "G_FEE_LESSEE_106F_EMPLOYEE\020\004\022\033\n\027BILLING_" +
      "FEE_CBOE_MEMBER\020\005*\204\002\n\tOrderLink\022\023\n\017ORDER" +
      "_LINK_NONE\020\000\022\022\n\016ORDER_LINK_OCO\020\001\022\027\n\023ORDE" +
      "R_LINK_AUTO_OCO\020\002\022\024\n\020ORDER_LINK_SPARK\020\003\022" +
      "\037\n\033ORDER_LINK_CLIENT_SYNTHETIC\020\004\022\025\n\021ORDE" +
      "R_LINK_SPARK2\020\005\022\025\n\021ORDER_LINK_CHAIN2\020\006\022\031" +
      "\n\025ORDER_LINK_AUTO_OCO_P\020\007\022\031\n\025ORDER_LINK_" +
      "AUTO_OCO_M\020\010\022\032\n\026ORDER_LINK_AUTO_OCO_MP\020\t" +
      "*\247\001\n\017PrimaryUserType\022\035\n\031PRIMARY_USER_TYP" +
      "E_PRIMARY\020\000\022\037\n\033PRIMARY_USER_TYPE_SECONDA" +
      "RY\020\001\022\'\n#PRIMARY_USER_TYPE_SECONDARY_APPL" +
      "IED\020\002\022+\n\'PRIMARY_USER_TYPE_SECONDARY_NOT" +
      "_APPLIED\020\003*;\n\nMasterType\022\026\n\022MASTER_TYPE_" +
      "MASTER\020\000\022\025\n\021MASTER_TYPE_CHILD\020\001*\316\013\n\013Orde" +
      "rSource\022\030\n\024ORDER_SOURCE_UNKNOWN\020\000\022\024\n\020ORD" +
      "ER_SOURCE_API\020\001\022\033\n\027ORDER_SOURCE_WEB_TRAD" +
      "ER\020\002\022\027\n\023ORDER_SOURCE_MOBILE\020\003\022\034\n\030ORDER_S" +
      "OURCE_DATA_IMPORT\020\004\022 \n\034ORDER_SOURCE_ACCO" +
      "UNT_HANDLER\020\005\022\036\n\032ORDER_SOURCE_STATIC_LAD" +
      "DER\020\024\022!\n\035ORDER_SOURCE_SCROLLING_LADDER\020\025" +
      "\022 \n\034ORDER_SOURCE_CENTERED_LADDER\020\026\022\'\n#OR" +
      "DER_SOURCE_AUTO_RECENTERED_LADDER\020\027\022\026\n\022O" +
      "RDER_SOURCE_DEPTH\020\030\022\033\n\027ORDER_SOURCE_QUOT" +
      "EBOARD\020\031\022\034\n\030ORDER_SOURCE_OPTIONBOARD\020\032\022 " +
      "\n\034ORDER_SOURCE_ADV_OPTIONBOARD\020\033\022\032\n\026ORDE" +
      "R_SOURCE_ORDERBOOK\020\034\022\036\n\032ORDER_SOURCE_SPR" +
      "EAD_MATRIX\020\035\022\030\n\024ORDER_SOURCE_FIX_API\020\036\022 " +
      "\n\034ORDER_SOURCE_CLIENT_SPREADER\020\037\022\"\n\036ORDE" +
      "R_SOURCE_ANTS_OPTION_SHEET\020 \022,\n(ORDER_SO" +
      "URCE_ANTS_OPTION_STRATEGY_SOLVER\020!\022\031\n\025OR" +
      "DER_SOURCE_JAVA_API\020\"\022.\n*ORDER_SOURCE_AN" +
      "TS_OPTION_STRATEGIES_WINDOW\020#\022\026\n\022ORDER_S" +
      "OURCE_CHART\020$\022\024\n\020ORDER_SOURCE_STP\020%\022,\n(O" +
      "RDER_SOURCE_T4_ANDROID_SCROLLING_LADDER\020" +
      "&\022+\n\'ORDER_SOURCE_T4_ANDROID_CENTERED_LA" +
      "DDER\020\'\0222\n.ORDER_SOURCE_T4_ANDROID_AUTO_R" +
      "ECENTERED_LADDER\020(\022!\n\035ORDER_SOURCE_T4_AN" +
      "DROID_DEPTH\020)\022&\n\"ORDER_SOURCE_T4_ANDROID",
      "_QUOTEBOARD\020*\022%\n!ORDER_SOURCE_T4_ANDROID" +
      "_POSITIONS\020+\022\"\n\036ORDER_SOURCE_T4_ANDROID_" +
      "ORDERS\020,\022!\n\035ORDER_SOURCE_T4_ANDROID_CHAR" +
      "T\020-\022\023\n\017ORDER_SOURCE_MQ\020.\022\030\n\024ORDER_SOURCE" +
      "_IOS_API\020/\022(\n$ORDER_SOURCE_T4_IOS_SCROLL" +
      "ING_LADDER\0200\022\'\n#ORDER_SOURCE_T4_IOS_CENT" +
      "ERED_LADDER\0201\022.\n*ORDER_SOURCE_T4_IOS_AUT" +
      "O_RECENTERED_LADDER\0202\022\035\n\031ORDER_SOURCE_T4" +
      "_IOS_DEPTH\0203\022\"\n\036ORDER_SOURCE_T4_IOS_QUOT" +
      "EBOARD\0204\022!\n\035ORDER_SOURCE_T4_IOS_POSITION" +
      "S\0205\022\036\n\032ORDER_SOURCE_T4_IOS_ORDERS\0206\022\035\n\031O" +
      "RDER_SOURCE_T4_IOS_CHART\0207\022\031\n\025ORDER_SOUR" +
      "CE_KEYBOARD\0208\022\031\n\025ORDER_SOURCE_HTTP_API\0209" +
      "*\300\004\n\021OrderSourceMethod\022\037\n\033ORDER_SOURCE_M" +
      "ETHOD_UNKNOWN\020\000\022\035\n\031ORDER_SOURCE_METHOD_C" +
      "LICK\020\001\022\036\n\032ORDER_SOURCE_METHOD_PROMPT\020\002\022%" +
      "\n!ORDER_SOURCE_METHOD_PRICE_CONFIRM\020\003\022$\n" +
      " ORDER_SOURCE_METHOD_ORDER_TICKET\020\004\022!\n\035O" +
      "RDER_SOURCE_METHOD_KEY_ENTRY\020\005\022&\n\"ORDER_" +
      "SOURCE_METHOD_ORDER_LOAD_BAR\020\006\022\'\n#ORDER_" +
      "SOURCE_METHOD_CONTRACT_TICKET\020\007\022+\n\'ORDER" +
      "_SOURCE_METHOD_QUEUED_ORDER_TICKET\020\010\022&\n\"" +
      "ORDER_SOURCE_METHOD_CLEARING_HOUSE\020\t\022\"\n\036" +
      "ORDER_SOURCE_METHOD_ELECTRONIC\020\n\022)\n%ORDE" +
      "R_SOURCE_METHOD_OFF_FACILITY_SWAP\020\013\022\033\n\027O" +
      "RDER_SOURCE_METHOD_PIT\020\014\022)\n%ORDER_SOURCE" +
      "_METHOD_REGISTERED_MARKET\020\r\022\036\n\032ORDER_SOU" +
      "RCE_METHOD_EX_PIT\020\016*_\n\024AccountSubscribeT" +
      "ype\022\037\n\033ACCOUNT_SUBSCRIBE_TYPE_NONE\020\000\022&\n\"" +
      "ACCOUNT_SUBSCRIBE_TYPE_ALL_UPDATES\020\002*q\n\t" +
      "UDSStatus\022\026\n\022UDS_STATUS_UNKNOWN\020\000\022\026\n\022UDS" +
      "_STATUS_Success\020\001\022\025\n\021UDS_STATUS_FAILED\020\002" +
      "\022\035\n\031UDS_STATUS_ALREADY_EXISTS\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
