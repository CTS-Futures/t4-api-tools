// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: t4/v1/service.proto
// Protobuf C++ Version: 6.31.1

#include "t4/v1/service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace t4proto {
namespace v1 {
namespace service {

inline constexpr Heartbeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Heartbeat::Heartbeat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Heartbeat_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatDefaultTypeInternal() {}
  union {
    Heartbeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatDefaultTypeInternal _Heartbeat_default_instance_;

inline constexpr ClientMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ClientMessage::ClientMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClientMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientMessageDefaultTypeInternal() {}
  union {
    ClientMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientMessageDefaultTypeInternal _ClientMessage_default_instance_;

inline constexpr ServerMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ServerMessage::ServerMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ServerMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServerMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServerMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServerMessageDefaultTypeInternal() {}
  union {
    ServerMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServerMessageDefaultTypeInternal _ServerMessage_default_instance_;
}  // namespace service
}  // namespace v1
}  // namespace t4proto
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_t4_2fv1_2fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_t4_2fv1_2fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_t4_2fv1_2fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ClientMessage, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ClientMessage, _impl_.payload_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ServerMessage, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ServerMessage, _impl_.payload_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::Heartbeat, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::Heartbeat, _impl_.timestamp_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::t4proto::v1::service::ClientMessage)},
        {13, sizeof(::t4proto::v1::service::ServerMessage)},
        {45, sizeof(::t4proto::v1::service::Heartbeat)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::t4proto::v1::service::_ClientMessage_default_instance_._instance,
    &::t4proto::v1::service::_ServerMessage_default_instance_._instance,
    &::t4proto::v1::service::_Heartbeat_default_instance_._instance,
};
const char descriptor_table_protodef_t4_2fv1_2fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023t4/v1/service.proto\022\022t4proto.v1.servic"
    "e\032\025t4/v1/auth/auth.proto\032\031t4/v1/market/m"
    "arket.proto\032\033t4/v1/account/account.proto"
    "\032%t4/v1/orderrouting/orderrouting.proto\""
    "\256\005\n\rClientMessage\0222\n\theartbeat\030\001 \001(\0132\035.t"
    "4proto.v1.service.HeartbeatH\000\0226\n\rlogin_r"
    "equest\030\002 \001(\0132\035.t4proto.v1.auth.LoginRequ"
    "estH\000\022S\n\034authentication_token_request\030\003 "
    "\001(\0132+.t4proto.v1.auth.AuthenticationToke"
    "nRequestH\000\022I\n\026market_depth_subscribe\030d \001"
    "(\0132\'.t4proto.v1.market.MarketDepthSubscr"
    "ibeH\000\022N\n\031market_by_order_subscribe\030e \001(\013"
    "2).t4proto.v1.market.MarketByOrderSubscr"
    "ibeH\000\022B\n\021account_subscribe\030\310\001 \001(\0132$.t4pr"
    "oto.v1.account.AccountSubscribeH\000\022=\n\014ord"
    "er_submit\030\254\002 \001(\0132$.t4proto.v1.orderrouti"
    "ng.OrderSubmitH\000\022=\n\014order_revise\030\255\002 \001(\0132"
    "$.t4proto.v1.orderrouting.OrderReviseH\000\022"
    "9\n\norder_pull\030\256\002 \001(\0132\".t4proto.v1.orderr"
    "outing.OrderPullH\000\0229\n\ncreate_uds\030\324\002 \001(\0132"
    "\".t4proto.v1.orderrouting.CreateUDSH\000B\t\n"
    "\007payload\"\202\020\n\rServerMessage\0222\n\theartbeat\030"
    "\001 \001(\0132\035.t4proto.v1.service.HeartbeatH\000\0228"
    "\n\016login_response\030\002 \001(\0132\036.t4proto.v1.auth"
    ".LoginResponseH\000\022D\n\024authentication_token"
    "\030\003 \001(\0132$.t4proto.v1.auth.AuthenticationT"
    "okenH\000\022V\n\035market_depth_subscribe_reject\030"
    "d \001(\0132-.t4proto.v1.market.MarketDepthSub"
    "scribeRejectH\000\022[\n market_by_order_subscr"
    "ibe_reject\030e \001(\0132/.t4proto.v1.market.Mar"
    "ketByOrderSubscribeRejectH\000\022:\n\016market_de"
    "tails\030f \001(\0132 .t4proto.v1.market.MarketDe"
    "tailsH\000\0226\n\014market_depth\030g \001(\0132\036.t4proto."
    "v1.market.MarketDepthH\000\022A\n\022market_depth_"
    "trade\030h \001(\0132#.t4proto.v1.market.MarketDe"
    "pthTradeH\000\022;\n\017market_high_low\030i \001(\0132 .t4"
    "proto.v1.market.MarketHighLowH\000\022C\n\023marke"
    "t_price_limits\030j \001(\0132$.t4proto.v1.market"
    ".MarketPriceLimitsH\000\022@\n\021market_settlemen"
    "t\030k \001(\0132#.t4proto.v1.market.MarketSettle"
    "mentH\000\022<\n\017market_snapshot\030l \001(\0132!.t4prot"
    "o.v1.market.MarketSnapshotH\000\022L\n\030market_b"
    "y_order_snapshot\030m \001(\0132(.t4proto.v1.mark"
    "et.MarketByOrderSnapshotH\000\022H\n\026market_by_"
    "order_update\030n \001(\0132&.t4proto.v1.market.M"
    "arketByOrderUpdateH\000\022S\n\032account_subscrib"
    "e_response\030\310\001 \001(\0132,.t4proto.v1.account.A"
    "ccountSubscribeResponseH\000\022@\n\020account_cur"
    "rency\030\311\001 \001(\0132#.t4proto.v1.account.Accoun"
    "tCurrencyH\000\022@\n\020account_position\030\312\001 \001(\0132#"
    ".t4proto.v1.account.AccountPositionH\000\022<\n"
    "\016account_update\030\313\001 \001(\0132!.t4proto.v1.acco"
    "unt.AccountUpdateH\000\022>\n\017account_details\030\314"
    "\001 \001(\0132\".t4proto.v1.account.AccountDetail"
    "sH\000\022@\n\020account_snapshot\030\315\001 \001(\0132#.t4proto"
    ".v1.account.AccountSnapshotH\000\022<\n\016account"
    "_profit\030\316\001 \001(\0132!.t4proto.v1.account.Acco"
    "untProfitH\000\022M\n\027account_position_profit\030\317"
    "\001 \001(\0132).t4proto.v1.account.AccountPositi"
    "onProfitH\000\022=\n\014order_update\030\254\002 \001(\0132$.t4pr"
    "oto.v1.orderrouting.OrderUpdateH\000\022H\n\022ord"
    "er_update_multi\030\255\002 \001(\0132).t4proto.v1.orde"
    "rrouting.OrderUpdateMultiH\000\022J\n\023order_upd"
    "ate_failed\030\256\002 \001(\0132*.t4proto.v1.orderrout"
    "ing.OrderUpdateFailedH\000\022J\n\023order_update_"
    "status\030\257\002 \001(\0132*.t4proto.v1.orderrouting."
    "OrderUpdateStatusH\000\022H\n\022order_update_trad"
    "e\030\260\002 \001(\0132).t4proto.v1.orderrouting.Order"
    "UpdateTradeH\000\022O\n\026order_update_trade_leg\030"
    "\261\002 \001(\0132,.t4proto.v1.orderrouting.OrderUp"
    "dateTradeLegH\000\022J\n\023create_uds_response\030\324\002"
    " \001(\0132*.t4proto.v1.orderrouting.CreateUDS"
    "ResponseH\000B\t\n\007payload\"\036\n\tHeartbeat\022\021\n\tti"
    "mestamp\030\001 \001(\003b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_t4_2fv1_2fservice_2eproto_deps[4] = {
        &::descriptor_table_t4_2fv1_2faccount_2faccount_2eproto,
        &::descriptor_table_t4_2fv1_2fauth_2fauth_2eproto,
        &::descriptor_table_t4_2fv1_2fmarket_2fmarket_2eproto,
        &::descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
};
static ::absl::once_flag descriptor_table_t4_2fv1_2fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_t4_2fv1_2fservice_2eproto = {
    false,
    false,
    2941,
    descriptor_table_protodef_t4_2fv1_2fservice_2eproto,
    "t4/v1/service.proto",
    &descriptor_table_t4_2fv1_2fservice_2eproto_once,
    descriptor_table_t4_2fv1_2fservice_2eproto_deps,
    4,
    3,
    schemas,
    file_default_instances,
    TableStruct_t4_2fv1_2fservice_2eproto::offsets,
    file_level_enum_descriptors_t4_2fv1_2fservice_2eproto,
    file_level_service_descriptors_t4_2fv1_2fservice_2eproto,
};
namespace t4proto {
namespace v1 {
namespace service {
// ===================================================================

class ClientMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ClientMessage, _impl_._oneof_case_);
};

void ClientMessage::set_allocated_heartbeat(::t4proto::v1::service::Heartbeat* PROTOBUF_NULLABLE heartbeat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (heartbeat) {
    ::google::protobuf::Arena* submessage_arena = heartbeat->GetArena();
    if (message_arena != submessage_arena) {
      heartbeat = ::google::protobuf::internal::GetOwnedMessage(message_arena, heartbeat, submessage_arena);
    }
    set_has_heartbeat();
    _impl_.payload_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.heartbeat)
}
void ClientMessage::set_allocated_login_request(::t4proto::v1::auth::LoginRequest* PROTOBUF_NULLABLE login_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(login_request)->GetArena();
    if (message_arena != submessage_arena) {
      login_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_request, submessage_arena);
    }
    set_has_login_request();
    _impl_.payload_.login_request_ = login_request;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.login_request)
}
void ClientMessage::clear_login_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kLoginRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.login_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_request_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_authentication_token_request(::t4proto::v1::auth::AuthenticationTokenRequest* PROTOBUF_NULLABLE authentication_token_request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (authentication_token_request) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(authentication_token_request)->GetArena();
    if (message_arena != submessage_arena) {
      authentication_token_request = ::google::protobuf::internal::GetOwnedMessage(message_arena, authentication_token_request, submessage_arena);
    }
    set_has_authentication_token_request();
    _impl_.payload_.authentication_token_request_ = authentication_token_request;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.authentication_token_request)
}
void ClientMessage::clear_authentication_token_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAuthenticationTokenRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.authentication_token_request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.authentication_token_request_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_market_depth_subscribe(::t4proto::v1::market::MarketDepthSubscribe* PROTOBUF_NULLABLE market_depth_subscribe) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_depth_subscribe) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_depth_subscribe)->GetArena();
    if (message_arena != submessage_arena) {
      market_depth_subscribe = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_depth_subscribe, submessage_arena);
    }
    set_has_market_depth_subscribe();
    _impl_.payload_.market_depth_subscribe_ = market_depth_subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.market_depth_subscribe)
}
void ClientMessage::clear_market_depth_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepthSubscribe) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_subscribe_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_subscribe_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_market_by_order_subscribe(::t4proto::v1::market::MarketByOrderSubscribe* PROTOBUF_NULLABLE market_by_order_subscribe) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_by_order_subscribe) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_by_order_subscribe)->GetArena();
    if (message_arena != submessage_arena) {
      market_by_order_subscribe = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_by_order_subscribe, submessage_arena);
    }
    set_has_market_by_order_subscribe();
    _impl_.payload_.market_by_order_subscribe_ = market_by_order_subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.market_by_order_subscribe)
}
void ClientMessage::clear_market_by_order_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketByOrderSubscribe) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_by_order_subscribe_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_subscribe_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_account_subscribe(::t4proto::v1::account::AccountSubscribe* PROTOBUF_NULLABLE account_subscribe) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_subscribe) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_subscribe)->GetArena();
    if (message_arena != submessage_arena) {
      account_subscribe = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_subscribe, submessage_arena);
    }
    set_has_account_subscribe();
    _impl_.payload_.account_subscribe_ = account_subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.account_subscribe)
}
void ClientMessage::clear_account_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountSubscribe) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_subscribe_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_subscribe_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_order_submit(::t4proto::v1::orderrouting::OrderSubmit* PROTOBUF_NULLABLE order_submit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_submit) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_submit)->GetArena();
    if (message_arena != submessage_arena) {
      order_submit = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_submit, submessage_arena);
    }
    set_has_order_submit();
    _impl_.payload_.order_submit_ = order_submit;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.order_submit)
}
void ClientMessage::clear_order_submit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderSubmit) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_submit_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_submit_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_order_revise(::t4proto::v1::orderrouting::OrderRevise* PROTOBUF_NULLABLE order_revise) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_revise) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_revise)->GetArena();
    if (message_arena != submessage_arena) {
      order_revise = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_revise, submessage_arena);
    }
    set_has_order_revise();
    _impl_.payload_.order_revise_ = order_revise;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.order_revise)
}
void ClientMessage::clear_order_revise() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderRevise) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_revise_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_revise_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_order_pull(::t4proto::v1::orderrouting::OrderPull* PROTOBUF_NULLABLE order_pull) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_pull) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_pull)->GetArena();
    if (message_arena != submessage_arena) {
      order_pull = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_pull, submessage_arena);
    }
    set_has_order_pull();
    _impl_.payload_.order_pull_ = order_pull;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.order_pull)
}
void ClientMessage::clear_order_pull() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderPull) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_pull_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_pull_);
    }
    clear_has_payload();
  }
}
void ClientMessage::set_allocated_create_uds(::t4proto::v1::orderrouting::CreateUDS* PROTOBUF_NULLABLE create_uds) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (create_uds) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(create_uds)->GetArena();
    if (message_arena != submessage_arena) {
      create_uds = ::google::protobuf::internal::GetOwnedMessage(message_arena, create_uds, submessage_arena);
    }
    set_has_create_uds();
    _impl_.payload_.create_uds_ = create_uds;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ClientMessage.create_uds)
}
void ClientMessage::clear_create_uds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kCreateUds) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.create_uds_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.create_uds_);
    }
    clear_has_payload();
  }
}
ClientMessage::ClientMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClientMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.service.ClientMessage)
}
PROTOBUF_NDEBUG_INLINE ClientMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::service::ClientMessage& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ClientMessage::ClientMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClientMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClientMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kHeartbeat:
        _impl_.payload_.heartbeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.heartbeat_);
        break;
      case kLoginRequest:
        _impl_.payload_.login_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_request_);
        break;
      case kAuthenticationTokenRequest:
        _impl_.payload_.authentication_token_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.authentication_token_request_);
        break;
      case kMarketDepthSubscribe:
        _impl_.payload_.market_depth_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_subscribe_);
        break;
      case kMarketByOrderSubscribe:
        _impl_.payload_.market_by_order_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_subscribe_);
        break;
      case kAccountSubscribe:
        _impl_.payload_.account_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_subscribe_);
        break;
      case kOrderSubmit:
        _impl_.payload_.order_submit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_submit_);
        break;
      case kOrderRevise:
        _impl_.payload_.order_revise_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_revise_);
        break;
      case kOrderPull:
        _impl_.payload_.order_pull_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_pull_);
        break;
      case kCreateUds:
        _impl_.payload_.create_uds_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.create_uds_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.service.ClientMessage)
}
PROTOBUF_NDEBUG_INLINE ClientMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ClientMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:t4proto.v1.service.ClientMessage)
  SharedDtor(*this);
}
inline void ClientMessage::SharedDtor(MessageLite& self) {
  ClientMessage& this_ = static_cast<ClientMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void ClientMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:t4proto.v1.service.ClientMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kHeartbeat: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.heartbeat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.heartbeat_);
      }
      break;
    }
    case kLoginRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_request_);
      }
      break;
    }
    case kAuthenticationTokenRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.authentication_token_request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.authentication_token_request_);
      }
      break;
    }
    case kMarketDepthSubscribe: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_depth_subscribe_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_subscribe_);
      }
      break;
    }
    case kMarketByOrderSubscribe: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_by_order_subscribe_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_subscribe_);
      }
      break;
    }
    case kAccountSubscribe: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_subscribe_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_subscribe_);
      }
      break;
    }
    case kOrderSubmit: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_submit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_submit_);
      }
      break;
    }
    case kOrderRevise: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_revise_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_revise_);
      }
      break;
    }
    case kOrderPull: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_pull_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_pull_);
      }
      break;
    }
    case kCreateUds: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.create_uds_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.create_uds_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL ClientMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClientMessage(arena);
}
constexpr auto ClientMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientMessage),
                                            alignof(ClientMessage));
}
constexpr auto ClientMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClientMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClientMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClientMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClientMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClientMessage>(), &ClientMessage::ByteSizeLong,
              &ClientMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_._cached_size_),
          false,
      },
      &ClientMessage::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClientMessage_class_data_ =
        ClientMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClientMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClientMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClientMessage_class_data_.tc_table);
  return ClientMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 10, 10, 0, 21>
ClientMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    340, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ClientMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::service::ClientMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    100, 0, 1,
    65532, 3,
    200, 0, 1,
    65534, 5,
    300, 0, 3,
    65528, 6,
    65535, 9,
    65279, 9,
    65535, 65535
  }}, {{
    // .t4proto.v1.service.Heartbeat heartbeat = 1;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.heartbeat_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.auth.LoginRequest login_request = 2;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.login_request_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.auth.AuthenticationTokenRequest authentication_token_request = 3;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.authentication_token_request_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketDepthSubscribe market_depth_subscribe = 100;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.market_depth_subscribe_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketByOrderSubscribe market_by_order_subscribe = 101;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.market_by_order_subscribe_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountSubscribe account_subscribe = 200;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.account_subscribe_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderSubmit order_submit = 300;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.order_submit_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderRevise order_revise = 301;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.order_revise_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderPull order_pull = 302;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.order_pull_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.CreateUDS create_uds = 340;
    {PROTOBUF_FIELD_OFFSET(ClientMessage, _impl_.payload_.create_uds_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::service::Heartbeat>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::auth::LoginRequest>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::auth::AuthenticationTokenRequest>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketDepthSubscribe>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketByOrderSubscribe>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountSubscribe>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderSubmit>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderRevise>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderPull>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDS>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.service.ClientMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClientMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClientMessage& this_ = static_cast<const ClientMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClientMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClientMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.service.ClientMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    case kHeartbeat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.payload_.heartbeat_, this_._impl_.payload_.heartbeat_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLoginRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.payload_.login_request_, this_._impl_.payload_.login_request_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAuthenticationTokenRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_.authentication_token_request_, this_._impl_.payload_.authentication_token_request_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketDepthSubscribe: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          100, *this_._impl_.payload_.market_depth_subscribe_, this_._impl_.payload_.market_depth_subscribe_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketByOrderSubscribe: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          101, *this_._impl_.payload_.market_by_order_subscribe_, this_._impl_.payload_.market_by_order_subscribe_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountSubscribe: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          200, *this_._impl_.payload_.account_subscribe_, this_._impl_.payload_.account_subscribe_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderSubmit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          300, *this_._impl_.payload_.order_submit_, this_._impl_.payload_.order_submit_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderRevise: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          301, *this_._impl_.payload_.order_revise_, this_._impl_.payload_.order_revise_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderPull: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          302, *this_._impl_.payload_.order_pull_, this_._impl_.payload_.order_pull_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCreateUds: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          340, *this_._impl_.payload_.create_uds_, this_._impl_.payload_.create_uds_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.service.ClientMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClientMessage::ByteSizeLong(const MessageLite& base) {
  const ClientMessage& this_ = static_cast<const ClientMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClientMessage::ByteSizeLong() const {
  const ClientMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.service.ClientMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    // .t4proto.v1.service.Heartbeat heartbeat = 1;
    case kHeartbeat: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.heartbeat_);
      break;
    }
    // .t4proto.v1.auth.LoginRequest login_request = 2;
    case kLoginRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.login_request_);
      break;
    }
    // .t4proto.v1.auth.AuthenticationTokenRequest authentication_token_request = 3;
    case kAuthenticationTokenRequest: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.authentication_token_request_);
      break;
    }
    // .t4proto.v1.market.MarketDepthSubscribe market_depth_subscribe = 100;
    case kMarketDepthSubscribe: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_depth_subscribe_);
      break;
    }
    // .t4proto.v1.market.MarketByOrderSubscribe market_by_order_subscribe = 101;
    case kMarketByOrderSubscribe: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_by_order_subscribe_);
      break;
    }
    // .t4proto.v1.account.AccountSubscribe account_subscribe = 200;
    case kAccountSubscribe: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_subscribe_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderSubmit order_submit = 300;
    case kOrderSubmit: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_submit_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderRevise order_revise = 301;
    case kOrderRevise: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_revise_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderPull order_pull = 302;
    case kOrderPull: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_pull_);
      break;
    }
    // .t4proto.v1.orderrouting.CreateUDS create_uds = 340;
    case kCreateUds: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.create_uds_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClientMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientMessage*>(&to_msg);
  auto& from = static_cast<const ClientMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.service.ClientMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kHeartbeat: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.heartbeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.heartbeat_);
        } else {
          _this->_impl_.payload_.heartbeat_->MergeFrom(*from._impl_.payload_.heartbeat_);
        }
        break;
      }
      case kLoginRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.login_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_request_);
        } else {
          _this->_impl_.payload_.login_request_->MergeFrom(*from._impl_.payload_.login_request_);
        }
        break;
      }
      case kAuthenticationTokenRequest: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.authentication_token_request_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.authentication_token_request_);
        } else {
          _this->_impl_.payload_.authentication_token_request_->MergeFrom(*from._impl_.payload_.authentication_token_request_);
        }
        break;
      }
      case kMarketDepthSubscribe: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_depth_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_subscribe_);
        } else {
          _this->_impl_.payload_.market_depth_subscribe_->MergeFrom(*from._impl_.payload_.market_depth_subscribe_);
        }
        break;
      }
      case kMarketByOrderSubscribe: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_by_order_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_subscribe_);
        } else {
          _this->_impl_.payload_.market_by_order_subscribe_->MergeFrom(*from._impl_.payload_.market_by_order_subscribe_);
        }
        break;
      }
      case kAccountSubscribe: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_subscribe_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_subscribe_);
        } else {
          _this->_impl_.payload_.account_subscribe_->MergeFrom(*from._impl_.payload_.account_subscribe_);
        }
        break;
      }
      case kOrderSubmit: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_submit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_submit_);
        } else {
          _this->_impl_.payload_.order_submit_->MergeFrom(*from._impl_.payload_.order_submit_);
        }
        break;
      }
      case kOrderRevise: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_revise_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_revise_);
        } else {
          _this->_impl_.payload_.order_revise_->MergeFrom(*from._impl_.payload_.order_revise_);
        }
        break;
      }
      case kOrderPull: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_pull_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_pull_);
        } else {
          _this->_impl_.payload_.order_pull_->MergeFrom(*from._impl_.payload_.order_pull_);
        }
        break;
      }
      case kCreateUds: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.create_uds_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.create_uds_);
        } else {
          _this->_impl_.payload_.create_uds_->MergeFrom(*from._impl_.payload_.create_uds_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.service.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientMessage::InternalSwap(ClientMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ClientMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ServerMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::t4proto::v1::service::ServerMessage, _impl_._oneof_case_);
};

void ServerMessage::set_allocated_heartbeat(::t4proto::v1::service::Heartbeat* PROTOBUF_NULLABLE heartbeat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (heartbeat) {
    ::google::protobuf::Arena* submessage_arena = heartbeat->GetArena();
    if (message_arena != submessage_arena) {
      heartbeat = ::google::protobuf::internal::GetOwnedMessage(message_arena, heartbeat, submessage_arena);
    }
    set_has_heartbeat();
    _impl_.payload_.heartbeat_ = heartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.heartbeat)
}
void ServerMessage::set_allocated_login_response(::t4proto::v1::auth::LoginResponse* PROTOBUF_NULLABLE login_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (login_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(login_response)->GetArena();
    if (message_arena != submessage_arena) {
      login_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, login_response, submessage_arena);
    }
    set_has_login_response();
    _impl_.payload_.login_response_ = login_response;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.login_response)
}
void ServerMessage::clear_login_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kLoginResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.login_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_response_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_authentication_token(::t4proto::v1::auth::AuthenticationToken* PROTOBUF_NULLABLE authentication_token) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (authentication_token) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(authentication_token)->GetArena();
    if (message_arena != submessage_arena) {
      authentication_token = ::google::protobuf::internal::GetOwnedMessage(message_arena, authentication_token, submessage_arena);
    }
    set_has_authentication_token();
    _impl_.payload_.authentication_token_ = authentication_token;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.authentication_token)
}
void ServerMessage::clear_authentication_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAuthenticationToken) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.authentication_token_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.authentication_token_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_depth_subscribe_reject(::t4proto::v1::market::MarketDepthSubscribeReject* PROTOBUF_NULLABLE market_depth_subscribe_reject) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_depth_subscribe_reject) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_depth_subscribe_reject)->GetArena();
    if (message_arena != submessage_arena) {
      market_depth_subscribe_reject = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_depth_subscribe_reject, submessage_arena);
    }
    set_has_market_depth_subscribe_reject();
    _impl_.payload_.market_depth_subscribe_reject_ = market_depth_subscribe_reject;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_depth_subscribe_reject)
}
void ServerMessage::clear_market_depth_subscribe_reject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepthSubscribeReject) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_subscribe_reject_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_subscribe_reject_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_by_order_subscribe_reject(::t4proto::v1::market::MarketByOrderSubscribeReject* PROTOBUF_NULLABLE market_by_order_subscribe_reject) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_by_order_subscribe_reject) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_by_order_subscribe_reject)->GetArena();
    if (message_arena != submessage_arena) {
      market_by_order_subscribe_reject = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_by_order_subscribe_reject, submessage_arena);
    }
    set_has_market_by_order_subscribe_reject();
    _impl_.payload_.market_by_order_subscribe_reject_ = market_by_order_subscribe_reject;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_by_order_subscribe_reject)
}
void ServerMessage::clear_market_by_order_subscribe_reject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketByOrderSubscribeReject) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_by_order_subscribe_reject_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_subscribe_reject_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_details(::t4proto::v1::market::MarketDetails* PROTOBUF_NULLABLE market_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_details) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_details)->GetArena();
    if (message_arena != submessage_arena) {
      market_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_details, submessage_arena);
    }
    set_has_market_details();
    _impl_.payload_.market_details_ = market_details;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_details)
}
void ServerMessage::clear_market_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDetails) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_details_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_details_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_depth(::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE market_depth) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_depth) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_depth)->GetArena();
    if (message_arena != submessage_arena) {
      market_depth = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_depth, submessage_arena);
    }
    set_has_market_depth();
    _impl_.payload_.market_depth_ = market_depth;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_depth)
}
void ServerMessage::clear_market_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepth) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_depth_trade(::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE market_depth_trade) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_depth_trade) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_depth_trade)->GetArena();
    if (message_arena != submessage_arena) {
      market_depth_trade = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_depth_trade, submessage_arena);
    }
    set_has_market_depth_trade();
    _impl_.payload_.market_depth_trade_ = market_depth_trade;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_depth_trade)
}
void ServerMessage::clear_market_depth_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepthTrade) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_trade_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_trade_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_high_low(::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE market_high_low) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_high_low) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_high_low)->GetArena();
    if (message_arena != submessage_arena) {
      market_high_low = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_high_low, submessage_arena);
    }
    set_has_market_high_low();
    _impl_.payload_.market_high_low_ = market_high_low;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_high_low)
}
void ServerMessage::clear_market_high_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketHighLow) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_high_low_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_high_low_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_price_limits(::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE market_price_limits) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_price_limits) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_price_limits)->GetArena();
    if (message_arena != submessage_arena) {
      market_price_limits = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_price_limits, submessage_arena);
    }
    set_has_market_price_limits();
    _impl_.payload_.market_price_limits_ = market_price_limits;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_price_limits)
}
void ServerMessage::clear_market_price_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketPriceLimits) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_price_limits_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_price_limits_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_settlement(::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE market_settlement) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_settlement) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_settlement)->GetArena();
    if (message_arena != submessage_arena) {
      market_settlement = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_settlement, submessage_arena);
    }
    set_has_market_settlement();
    _impl_.payload_.market_settlement_ = market_settlement;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_settlement)
}
void ServerMessage::clear_market_settlement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketSettlement) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_settlement_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_settlement_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_snapshot(::t4proto::v1::market::MarketSnapshot* PROTOBUF_NULLABLE market_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_snapshot) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_snapshot)->GetArena();
    if (message_arena != submessage_arena) {
      market_snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_snapshot, submessage_arena);
    }
    set_has_market_snapshot();
    _impl_.payload_.market_snapshot_ = market_snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_snapshot)
}
void ServerMessage::clear_market_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketSnapshot) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_snapshot_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_snapshot_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_by_order_snapshot(::t4proto::v1::market::MarketByOrderSnapshot* PROTOBUF_NULLABLE market_by_order_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_by_order_snapshot) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_by_order_snapshot)->GetArena();
    if (message_arena != submessage_arena) {
      market_by_order_snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_by_order_snapshot, submessage_arena);
    }
    set_has_market_by_order_snapshot();
    _impl_.payload_.market_by_order_snapshot_ = market_by_order_snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_by_order_snapshot)
}
void ServerMessage::clear_market_by_order_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketByOrderSnapshot) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_by_order_snapshot_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_snapshot_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_market_by_order_update(::t4proto::v1::market::MarketByOrderUpdate* PROTOBUF_NULLABLE market_by_order_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (market_by_order_update) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(market_by_order_update)->GetArena();
    if (message_arena != submessage_arena) {
      market_by_order_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, market_by_order_update, submessage_arena);
    }
    set_has_market_by_order_update();
    _impl_.payload_.market_by_order_update_ = market_by_order_update;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.market_by_order_update)
}
void ServerMessage::clear_market_by_order_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketByOrderUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_by_order_update_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_update_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_subscribe_response(::t4proto::v1::account::AccountSubscribeResponse* PROTOBUF_NULLABLE account_subscribe_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_subscribe_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_subscribe_response)->GetArena();
    if (message_arena != submessage_arena) {
      account_subscribe_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_subscribe_response, submessage_arena);
    }
    set_has_account_subscribe_response();
    _impl_.payload_.account_subscribe_response_ = account_subscribe_response;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_subscribe_response)
}
void ServerMessage::clear_account_subscribe_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountSubscribeResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_subscribe_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_subscribe_response_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_currency(::t4proto::v1::account::AccountCurrency* PROTOBUF_NULLABLE account_currency) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_currency) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_currency)->GetArena();
    if (message_arena != submessage_arena) {
      account_currency = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_currency, submessage_arena);
    }
    set_has_account_currency();
    _impl_.payload_.account_currency_ = account_currency;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_currency)
}
void ServerMessage::clear_account_currency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountCurrency) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_currency_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_currency_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_position(::t4proto::v1::account::AccountPosition* PROTOBUF_NULLABLE account_position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_position) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_position)->GetArena();
    if (message_arena != submessage_arena) {
      account_position = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_position, submessage_arena);
    }
    set_has_account_position();
    _impl_.payload_.account_position_ = account_position;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_position)
}
void ServerMessage::clear_account_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountPosition) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_position_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_position_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_update(::t4proto::v1::account::AccountUpdate* PROTOBUF_NULLABLE account_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_update) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_update)->GetArena();
    if (message_arena != submessage_arena) {
      account_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_update, submessage_arena);
    }
    set_has_account_update();
    _impl_.payload_.account_update_ = account_update;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_update)
}
void ServerMessage::clear_account_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_update_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_update_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_details(::t4proto::v1::account::AccountDetails* PROTOBUF_NULLABLE account_details) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_details) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_details)->GetArena();
    if (message_arena != submessage_arena) {
      account_details = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_details, submessage_arena);
    }
    set_has_account_details();
    _impl_.payload_.account_details_ = account_details;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_details)
}
void ServerMessage::clear_account_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountDetails) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_details_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_details_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_snapshot(::t4proto::v1::account::AccountSnapshot* PROTOBUF_NULLABLE account_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_snapshot) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_snapshot)->GetArena();
    if (message_arena != submessage_arena) {
      account_snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_snapshot, submessage_arena);
    }
    set_has_account_snapshot();
    _impl_.payload_.account_snapshot_ = account_snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_snapshot)
}
void ServerMessage::clear_account_snapshot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountSnapshot) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_snapshot_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_snapshot_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_profit(::t4proto::v1::account::AccountProfit* PROTOBUF_NULLABLE account_profit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_profit) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_profit)->GetArena();
    if (message_arena != submessage_arena) {
      account_profit = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_profit, submessage_arena);
    }
    set_has_account_profit();
    _impl_.payload_.account_profit_ = account_profit;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_profit)
}
void ServerMessage::clear_account_profit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountProfit) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_profit_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_profit_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_account_position_profit(::t4proto::v1::account::AccountPositionProfit* PROTOBUF_NULLABLE account_position_profit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_position_profit) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(account_position_profit)->GetArena();
    if (message_arena != submessage_arena) {
      account_position_profit = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_position_profit, submessage_arena);
    }
    set_has_account_position_profit();
    _impl_.payload_.account_position_profit_ = account_position_profit;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.account_position_profit)
}
void ServerMessage::clear_account_position_profit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kAccountPositionProfit) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.account_position_profit_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_position_profit_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update(::t4proto::v1::orderrouting::OrderUpdate* PROTOBUF_NULLABLE order_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update)->GetArena();
    if (message_arena != submessage_arena) {
      order_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update, submessage_arena);
    }
    set_has_order_update();
    _impl_.payload_.order_update_ = order_update;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update)
}
void ServerMessage::clear_order_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update_multi(::t4proto::v1::orderrouting::OrderUpdateMulti* PROTOBUF_NULLABLE order_update_multi) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_multi) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update_multi)->GetArena();
    if (message_arena != submessage_arena) {
      order_update_multi = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_multi, submessage_arena);
    }
    set_has_order_update_multi();
    _impl_.payload_.order_update_multi_ = order_update_multi;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update_multi)
}
void ServerMessage::clear_order_update_multi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdateMulti) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_multi_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_multi_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update_failed(::t4proto::v1::orderrouting::OrderUpdateFailed* PROTOBUF_NULLABLE order_update_failed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_failed) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update_failed)->GetArena();
    if (message_arena != submessage_arena) {
      order_update_failed = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_failed, submessage_arena);
    }
    set_has_order_update_failed();
    _impl_.payload_.order_update_failed_ = order_update_failed;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update_failed)
}
void ServerMessage::clear_order_update_failed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdateFailed) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_failed_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_failed_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update_status(::t4proto::v1::orderrouting::OrderUpdateStatus* PROTOBUF_NULLABLE order_update_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_status) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update_status)->GetArena();
    if (message_arena != submessage_arena) {
      order_update_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_status, submessage_arena);
    }
    set_has_order_update_status();
    _impl_.payload_.order_update_status_ = order_update_status;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update_status)
}
void ServerMessage::clear_order_update_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdateStatus) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_status_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_status_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update_trade(::t4proto::v1::orderrouting::OrderUpdateTrade* PROTOBUF_NULLABLE order_update_trade) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_trade) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update_trade)->GetArena();
    if (message_arena != submessage_arena) {
      order_update_trade = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_trade, submessage_arena);
    }
    set_has_order_update_trade();
    _impl_.payload_.order_update_trade_ = order_update_trade;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update_trade)
}
void ServerMessage::clear_order_update_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdateTrade) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_trade_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_order_update_trade_leg(::t4proto::v1::orderrouting::OrderUpdateTradeLeg* PROTOBUF_NULLABLE order_update_trade_leg) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_trade_leg) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(order_update_trade_leg)->GetArena();
    if (message_arena != submessage_arena) {
      order_update_trade_leg = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_trade_leg, submessage_arena);
    }
    set_has_order_update_trade_leg();
    _impl_.payload_.order_update_trade_leg_ = order_update_trade_leg;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.order_update_trade_leg)
}
void ServerMessage::clear_order_update_trade_leg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kOrderUpdateTradeLeg) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.order_update_trade_leg_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_leg_);
    }
    clear_has_payload();
  }
}
void ServerMessage::set_allocated_create_uds_response(::t4proto::v1::orderrouting::CreateUDSResponse* PROTOBUF_NULLABLE create_uds_response) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (create_uds_response) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(create_uds_response)->GetArena();
    if (message_arena != submessage_arena) {
      create_uds_response = ::google::protobuf::internal::GetOwnedMessage(message_arena, create_uds_response, submessage_arena);
    }
    set_has_create_uds_response();
    _impl_.payload_.create_uds_response_ = create_uds_response;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.service.ServerMessage.create_uds_response)
}
void ServerMessage::clear_create_uds_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kCreateUdsResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.create_uds_response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.create_uds_response_);
    }
    clear_has_payload();
  }
}
ServerMessage::ServerMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.service.ServerMessage)
}
PROTOBUF_NDEBUG_INLINE ServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::service::ServerMessage& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ServerMessage::ServerMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ServerMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ServerMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServerMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kHeartbeat:
        _impl_.payload_.heartbeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.heartbeat_);
        break;
      case kLoginResponse:
        _impl_.payload_.login_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_response_);
        break;
      case kAuthenticationToken:
        _impl_.payload_.authentication_token_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.authentication_token_);
        break;
      case kMarketDepthSubscribeReject:
        _impl_.payload_.market_depth_subscribe_reject_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_subscribe_reject_);
        break;
      case kMarketByOrderSubscribeReject:
        _impl_.payload_.market_by_order_subscribe_reject_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_subscribe_reject_);
        break;
      case kMarketDetails:
        _impl_.payload_.market_details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_details_);
        break;
      case kMarketDepth:
        _impl_.payload_.market_depth_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_);
        break;
      case kMarketDepthTrade:
        _impl_.payload_.market_depth_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_trade_);
        break;
      case kMarketHighLow:
        _impl_.payload_.market_high_low_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_high_low_);
        break;
      case kMarketPriceLimits:
        _impl_.payload_.market_price_limits_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_price_limits_);
        break;
      case kMarketSettlement:
        _impl_.payload_.market_settlement_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_settlement_);
        break;
      case kMarketSnapshot:
        _impl_.payload_.market_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_snapshot_);
        break;
      case kMarketByOrderSnapshot:
        _impl_.payload_.market_by_order_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_snapshot_);
        break;
      case kMarketByOrderUpdate:
        _impl_.payload_.market_by_order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_update_);
        break;
      case kAccountSubscribeResponse:
        _impl_.payload_.account_subscribe_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_subscribe_response_);
        break;
      case kAccountCurrency:
        _impl_.payload_.account_currency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_currency_);
        break;
      case kAccountPosition:
        _impl_.payload_.account_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_position_);
        break;
      case kAccountUpdate:
        _impl_.payload_.account_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_update_);
        break;
      case kAccountDetails:
        _impl_.payload_.account_details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_details_);
        break;
      case kAccountSnapshot:
        _impl_.payload_.account_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_snapshot_);
        break;
      case kAccountProfit:
        _impl_.payload_.account_profit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_profit_);
        break;
      case kAccountPositionProfit:
        _impl_.payload_.account_position_profit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_position_profit_);
        break;
      case kOrderUpdate:
        _impl_.payload_.order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_);
        break;
      case kOrderUpdateMulti:
        _impl_.payload_.order_update_multi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_multi_);
        break;
      case kOrderUpdateFailed:
        _impl_.payload_.order_update_failed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_failed_);
        break;
      case kOrderUpdateStatus:
        _impl_.payload_.order_update_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_status_);
        break;
      case kOrderUpdateTrade:
        _impl_.payload_.order_update_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_);
        break;
      case kOrderUpdateTradeLeg:
        _impl_.payload_.order_update_trade_leg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_leg_);
        break;
      case kCreateUdsResponse:
        _impl_.payload_.create_uds_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.create_uds_response_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.service.ServerMessage)
}
PROTOBUF_NDEBUG_INLINE ServerMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ServerMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:t4proto.v1.service.ServerMessage)
  SharedDtor(*this);
}
inline void ServerMessage::SharedDtor(MessageLite& self) {
  ServerMessage& this_ = static_cast<ServerMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void ServerMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:t4proto.v1.service.ServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kHeartbeat: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.heartbeat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.heartbeat_);
      }
      break;
    }
    case kLoginResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.login_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.login_response_);
      }
      break;
    }
    case kAuthenticationToken: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.authentication_token_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.authentication_token_);
      }
      break;
    }
    case kMarketDepthSubscribeReject: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_depth_subscribe_reject_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_subscribe_reject_);
      }
      break;
    }
    case kMarketByOrderSubscribeReject: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_by_order_subscribe_reject_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_subscribe_reject_);
      }
      break;
    }
    case kMarketDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_details_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_details_);
      }
      break;
    }
    case kMarketDepth: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_depth_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_);
      }
      break;
    }
    case kMarketDepthTrade: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_depth_trade_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_trade_);
      }
      break;
    }
    case kMarketHighLow: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_high_low_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_high_low_);
      }
      break;
    }
    case kMarketPriceLimits: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_price_limits_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_price_limits_);
      }
      break;
    }
    case kMarketSettlement: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_settlement_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_settlement_);
      }
      break;
    }
    case kMarketSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_snapshot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_snapshot_);
      }
      break;
    }
    case kMarketByOrderSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_by_order_snapshot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_snapshot_);
      }
      break;
    }
    case kMarketByOrderUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.market_by_order_update_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_by_order_update_);
      }
      break;
    }
    case kAccountSubscribeResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_subscribe_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_subscribe_response_);
      }
      break;
    }
    case kAccountCurrency: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_currency_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_currency_);
      }
      break;
    }
    case kAccountPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_position_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_position_);
      }
      break;
    }
    case kAccountUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_update_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_update_);
      }
      break;
    }
    case kAccountDetails: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_details_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_details_);
      }
      break;
    }
    case kAccountSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_snapshot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_snapshot_);
      }
      break;
    }
    case kAccountProfit: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_profit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_profit_);
      }
      break;
    }
    case kAccountPositionProfit: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_position_profit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_position_profit_);
      }
      break;
    }
    case kOrderUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_);
      }
      break;
    }
    case kOrderUpdateMulti: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_multi_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_multi_);
      }
      break;
    }
    case kOrderUpdateFailed: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_failed_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_failed_);
      }
      break;
    }
    case kOrderUpdateStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_status_);
      }
      break;
    }
    case kOrderUpdateTrade: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_trade_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_);
      }
      break;
    }
    case kOrderUpdateTradeLeg: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_trade_leg_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_leg_);
      }
      break;
    }
    case kCreateUdsResponse: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.create_uds_response_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.create_uds_response_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL ServerMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ServerMessage(arena);
}
constexpr auto ServerMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ServerMessage),
                                            alignof(ServerMessage));
}
constexpr auto ServerMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ServerMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ServerMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ServerMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ServerMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ServerMessage>(), &ServerMessage::ByteSizeLong,
              &ServerMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_._cached_size_),
          false,
      },
      &ServerMessage::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ServerMessage_class_data_ =
        ServerMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ServerMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ServerMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ServerMessage_class_data_.tc_table);
  return ServerMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 29, 29, 0, 21>
ServerMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    340, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    29,  // num_field_entries
    29,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ServerMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::service::ServerMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    100, 0, 1,
    63488, 3,
    200, 0, 1,
    65280, 14,
    300, 0, 3,
    65472, 22,
    65535, 28,
    65279, 28,
    65535, 65535
  }}, {{
    // .t4proto.v1.service.Heartbeat heartbeat = 1;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.heartbeat_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.auth.LoginResponse login_response = 2;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.login_response_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.auth.AuthenticationToken authentication_token = 3;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.authentication_token_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketDepthSubscribeReject market_depth_subscribe_reject = 100;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_depth_subscribe_reject_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketByOrderSubscribeReject market_by_order_subscribe_reject = 101;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_by_order_subscribe_reject_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketDetails market_details = 102;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_details_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketDepth market_depth = 103;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_depth_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketDepthTrade market_depth_trade = 104;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_depth_trade_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketHighLow market_high_low = 105;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_high_low_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketPriceLimits market_price_limits = 106;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_price_limits_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketSettlement market_settlement = 107;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_settlement_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketSnapshot market_snapshot = 108;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_snapshot_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketByOrderSnapshot market_by_order_snapshot = 109;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_by_order_snapshot_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.market.MarketByOrderUpdate market_by_order_update = 110;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.market_by_order_update_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountSubscribeResponse account_subscribe_response = 200;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_subscribe_response_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountCurrency account_currency = 201;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_currency_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountPosition account_position = 202;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_position_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountUpdate account_update = 203;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_update_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountDetails account_details = 204;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_details_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountSnapshot account_snapshot = 205;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_snapshot_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountProfit account_profit = 206;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_profit_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.account.AccountPositionProfit account_position_profit = 207;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.account_position_profit_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdate order_update = 300;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateMulti order_update_multi = 301;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_multi_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateFailed order_update_failed = 302;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_failed_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateStatus order_update_status = 303;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_status_), _Internal::kOneofCaseOffset + 0, 25,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateTrade order_update_trade = 304;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_trade_), _Internal::kOneofCaseOffset + 0, 26,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateTradeLeg order_update_trade_leg = 305;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.order_update_trade_leg_), _Internal::kOneofCaseOffset + 0, 27,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.CreateUDSResponse create_uds_response = 340;
    {PROTOBUF_FIELD_OFFSET(ServerMessage, _impl_.payload_.create_uds_response_), _Internal::kOneofCaseOffset + 0, 28,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::service::Heartbeat>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::auth::LoginResponse>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::auth::AuthenticationToken>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketDepthSubscribeReject>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketByOrderSubscribeReject>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketDetails>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketDepth>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketDepthTrade>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketHighLow>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketPriceLimits>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketSettlement>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketSnapshot>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketByOrderSnapshot>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::market::MarketByOrderUpdate>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountSubscribeResponse>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountCurrency>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountPosition>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountUpdate>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountDetails>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountSnapshot>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountProfit>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::account::AccountPositionProfit>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateMulti>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateFailed>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateStatus>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTrade>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTradeLeg>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDSResponse>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.service.ServerMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ServerMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ServerMessage& this_ = static_cast<const ServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ServerMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.service.ServerMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    case kHeartbeat: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.payload_.heartbeat_, this_._impl_.payload_.heartbeat_->GetCachedSize(), target,
          stream);
      break;
    }
    case kLoginResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.payload_.login_response_, this_._impl_.payload_.login_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAuthenticationToken: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_.authentication_token_, this_._impl_.payload_.authentication_token_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketDepthSubscribeReject: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          100, *this_._impl_.payload_.market_depth_subscribe_reject_, this_._impl_.payload_.market_depth_subscribe_reject_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketByOrderSubscribeReject: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          101, *this_._impl_.payload_.market_by_order_subscribe_reject_, this_._impl_.payload_.market_by_order_subscribe_reject_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketDetails: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          102, *this_._impl_.payload_.market_details_, this_._impl_.payload_.market_details_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketDepth: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          103, *this_._impl_.payload_.market_depth_, this_._impl_.payload_.market_depth_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketDepthTrade: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          104, *this_._impl_.payload_.market_depth_trade_, this_._impl_.payload_.market_depth_trade_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketHighLow: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          105, *this_._impl_.payload_.market_high_low_, this_._impl_.payload_.market_high_low_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketPriceLimits: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          106, *this_._impl_.payload_.market_price_limits_, this_._impl_.payload_.market_price_limits_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketSettlement: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          107, *this_._impl_.payload_.market_settlement_, this_._impl_.payload_.market_settlement_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketSnapshot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          108, *this_._impl_.payload_.market_snapshot_, this_._impl_.payload_.market_snapshot_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketByOrderSnapshot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          109, *this_._impl_.payload_.market_by_order_snapshot_, this_._impl_.payload_.market_by_order_snapshot_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMarketByOrderUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          110, *this_._impl_.payload_.market_by_order_update_, this_._impl_.payload_.market_by_order_update_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountSubscribeResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          200, *this_._impl_.payload_.account_subscribe_response_, this_._impl_.payload_.account_subscribe_response_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountCurrency: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          201, *this_._impl_.payload_.account_currency_, this_._impl_.payload_.account_currency_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          202, *this_._impl_.payload_.account_position_, this_._impl_.payload_.account_position_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          203, *this_._impl_.payload_.account_update_, this_._impl_.payload_.account_update_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountDetails: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          204, *this_._impl_.payload_.account_details_, this_._impl_.payload_.account_details_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountSnapshot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          205, *this_._impl_.payload_.account_snapshot_, this_._impl_.payload_.account_snapshot_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountProfit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          206, *this_._impl_.payload_.account_profit_, this_._impl_.payload_.account_profit_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountPositionProfit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          207, *this_._impl_.payload_.account_position_profit_, this_._impl_.payload_.account_position_profit_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          300, *this_._impl_.payload_.order_update_, this_._impl_.payload_.order_update_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateMulti: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          301, *this_._impl_.payload_.order_update_multi_, this_._impl_.payload_.order_update_multi_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateFailed: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          302, *this_._impl_.payload_.order_update_failed_, this_._impl_.payload_.order_update_failed_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          303, *this_._impl_.payload_.order_update_status_, this_._impl_.payload_.order_update_status_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateTrade: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          304, *this_._impl_.payload_.order_update_trade_, this_._impl_.payload_.order_update_trade_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateTradeLeg: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          305, *this_._impl_.payload_.order_update_trade_leg_, this_._impl_.payload_.order_update_trade_leg_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCreateUdsResponse: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          340, *this_._impl_.payload_.create_uds_response_, this_._impl_.payload_.create_uds_response_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.service.ServerMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ServerMessage::ByteSizeLong(const MessageLite& base) {
  const ServerMessage& this_ = static_cast<const ServerMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ServerMessage::ByteSizeLong() const {
  const ServerMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.service.ServerMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    // .t4proto.v1.service.Heartbeat heartbeat = 1;
    case kHeartbeat: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.heartbeat_);
      break;
    }
    // .t4proto.v1.auth.LoginResponse login_response = 2;
    case kLoginResponse: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.login_response_);
      break;
    }
    // .t4proto.v1.auth.AuthenticationToken authentication_token = 3;
    case kAuthenticationToken: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.authentication_token_);
      break;
    }
    // .t4proto.v1.market.MarketDepthSubscribeReject market_depth_subscribe_reject = 100;
    case kMarketDepthSubscribeReject: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_depth_subscribe_reject_);
      break;
    }
    // .t4proto.v1.market.MarketByOrderSubscribeReject market_by_order_subscribe_reject = 101;
    case kMarketByOrderSubscribeReject: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_by_order_subscribe_reject_);
      break;
    }
    // .t4proto.v1.market.MarketDetails market_details = 102;
    case kMarketDetails: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_details_);
      break;
    }
    // .t4proto.v1.market.MarketDepth market_depth = 103;
    case kMarketDepth: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_depth_);
      break;
    }
    // .t4proto.v1.market.MarketDepthTrade market_depth_trade = 104;
    case kMarketDepthTrade: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_depth_trade_);
      break;
    }
    // .t4proto.v1.market.MarketHighLow market_high_low = 105;
    case kMarketHighLow: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_high_low_);
      break;
    }
    // .t4proto.v1.market.MarketPriceLimits market_price_limits = 106;
    case kMarketPriceLimits: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_price_limits_);
      break;
    }
    // .t4proto.v1.market.MarketSettlement market_settlement = 107;
    case kMarketSettlement: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_settlement_);
      break;
    }
    // .t4proto.v1.market.MarketSnapshot market_snapshot = 108;
    case kMarketSnapshot: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_snapshot_);
      break;
    }
    // .t4proto.v1.market.MarketByOrderSnapshot market_by_order_snapshot = 109;
    case kMarketByOrderSnapshot: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_by_order_snapshot_);
      break;
    }
    // .t4proto.v1.market.MarketByOrderUpdate market_by_order_update = 110;
    case kMarketByOrderUpdate: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.market_by_order_update_);
      break;
    }
    // .t4proto.v1.account.AccountSubscribeResponse account_subscribe_response = 200;
    case kAccountSubscribeResponse: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_subscribe_response_);
      break;
    }
    // .t4proto.v1.account.AccountCurrency account_currency = 201;
    case kAccountCurrency: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_currency_);
      break;
    }
    // .t4proto.v1.account.AccountPosition account_position = 202;
    case kAccountPosition: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_position_);
      break;
    }
    // .t4proto.v1.account.AccountUpdate account_update = 203;
    case kAccountUpdate: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_update_);
      break;
    }
    // .t4proto.v1.account.AccountDetails account_details = 204;
    case kAccountDetails: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_details_);
      break;
    }
    // .t4proto.v1.account.AccountSnapshot account_snapshot = 205;
    case kAccountSnapshot: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_snapshot_);
      break;
    }
    // .t4proto.v1.account.AccountProfit account_profit = 206;
    case kAccountProfit: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_profit_);
      break;
    }
    // .t4proto.v1.account.AccountPositionProfit account_position_profit = 207;
    case kAccountPositionProfit: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_position_profit_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdate order_update = 300;
    case kOrderUpdate: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateMulti order_update_multi = 301;
    case kOrderUpdateMulti: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_multi_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateFailed order_update_failed = 302;
    case kOrderUpdateFailed: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_failed_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateStatus order_update_status = 303;
    case kOrderUpdateStatus: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_status_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateTrade order_update_trade = 304;
    case kOrderUpdateTrade: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_trade_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateTradeLeg order_update_trade_leg = 305;
    case kOrderUpdateTradeLeg: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_trade_leg_);
      break;
    }
    // .t4proto.v1.orderrouting.CreateUDSResponse create_uds_response = 340;
    case kCreateUdsResponse: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.create_uds_response_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ServerMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServerMessage*>(&to_msg);
  auto& from = static_cast<const ServerMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.service.ServerMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kHeartbeat: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.heartbeat_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.heartbeat_);
        } else {
          _this->_impl_.payload_.heartbeat_->MergeFrom(*from._impl_.payload_.heartbeat_);
        }
        break;
      }
      case kLoginResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.login_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.login_response_);
        } else {
          _this->_impl_.payload_.login_response_->MergeFrom(*from._impl_.payload_.login_response_);
        }
        break;
      }
      case kAuthenticationToken: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.authentication_token_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.authentication_token_);
        } else {
          _this->_impl_.payload_.authentication_token_->MergeFrom(*from._impl_.payload_.authentication_token_);
        }
        break;
      }
      case kMarketDepthSubscribeReject: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_depth_subscribe_reject_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_subscribe_reject_);
        } else {
          _this->_impl_.payload_.market_depth_subscribe_reject_->MergeFrom(*from._impl_.payload_.market_depth_subscribe_reject_);
        }
        break;
      }
      case kMarketByOrderSubscribeReject: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_by_order_subscribe_reject_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_subscribe_reject_);
        } else {
          _this->_impl_.payload_.market_by_order_subscribe_reject_->MergeFrom(*from._impl_.payload_.market_by_order_subscribe_reject_);
        }
        break;
      }
      case kMarketDetails: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_details_);
        } else {
          _this->_impl_.payload_.market_details_->MergeFrom(*from._impl_.payload_.market_details_);
        }
        break;
      }
      case kMarketDepth: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_depth_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_);
        } else {
          _this->_impl_.payload_.market_depth_->MergeFrom(*from._impl_.payload_.market_depth_);
        }
        break;
      }
      case kMarketDepthTrade: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_depth_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_depth_trade_);
        } else {
          _this->_impl_.payload_.market_depth_trade_->MergeFrom(*from._impl_.payload_.market_depth_trade_);
        }
        break;
      }
      case kMarketHighLow: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_high_low_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_high_low_);
        } else {
          _this->_impl_.payload_.market_high_low_->MergeFrom(*from._impl_.payload_.market_high_low_);
        }
        break;
      }
      case kMarketPriceLimits: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_price_limits_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_price_limits_);
        } else {
          _this->_impl_.payload_.market_price_limits_->MergeFrom(*from._impl_.payload_.market_price_limits_);
        }
        break;
      }
      case kMarketSettlement: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_settlement_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_settlement_);
        } else {
          _this->_impl_.payload_.market_settlement_->MergeFrom(*from._impl_.payload_.market_settlement_);
        }
        break;
      }
      case kMarketSnapshot: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_snapshot_);
        } else {
          _this->_impl_.payload_.market_snapshot_->MergeFrom(*from._impl_.payload_.market_snapshot_);
        }
        break;
      }
      case kMarketByOrderSnapshot: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_by_order_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_snapshot_);
        } else {
          _this->_impl_.payload_.market_by_order_snapshot_->MergeFrom(*from._impl_.payload_.market_by_order_snapshot_);
        }
        break;
      }
      case kMarketByOrderUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.market_by_order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.market_by_order_update_);
        } else {
          _this->_impl_.payload_.market_by_order_update_->MergeFrom(*from._impl_.payload_.market_by_order_update_);
        }
        break;
      }
      case kAccountSubscribeResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_subscribe_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_subscribe_response_);
        } else {
          _this->_impl_.payload_.account_subscribe_response_->MergeFrom(*from._impl_.payload_.account_subscribe_response_);
        }
        break;
      }
      case kAccountCurrency: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_currency_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_currency_);
        } else {
          _this->_impl_.payload_.account_currency_->MergeFrom(*from._impl_.payload_.account_currency_);
        }
        break;
      }
      case kAccountPosition: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_position_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_position_);
        } else {
          _this->_impl_.payload_.account_position_->MergeFrom(*from._impl_.payload_.account_position_);
        }
        break;
      }
      case kAccountUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_update_);
        } else {
          _this->_impl_.payload_.account_update_->MergeFrom(*from._impl_.payload_.account_update_);
        }
        break;
      }
      case kAccountDetails: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_details_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_details_);
        } else {
          _this->_impl_.payload_.account_details_->MergeFrom(*from._impl_.payload_.account_details_);
        }
        break;
      }
      case kAccountSnapshot: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_snapshot_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_snapshot_);
        } else {
          _this->_impl_.payload_.account_snapshot_->MergeFrom(*from._impl_.payload_.account_snapshot_);
        }
        break;
      }
      case kAccountProfit: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_profit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_profit_);
        } else {
          _this->_impl_.payload_.account_profit_->MergeFrom(*from._impl_.payload_.account_profit_);
        }
        break;
      }
      case kAccountPositionProfit: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_position_profit_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_position_profit_);
        } else {
          _this->_impl_.payload_.account_position_profit_->MergeFrom(*from._impl_.payload_.account_position_profit_);
        }
        break;
      }
      case kOrderUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_);
        } else {
          _this->_impl_.payload_.order_update_->MergeFrom(*from._impl_.payload_.order_update_);
        }
        break;
      }
      case kOrderUpdateMulti: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_multi_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_multi_);
        } else {
          _this->_impl_.payload_.order_update_multi_->MergeFrom(*from._impl_.payload_.order_update_multi_);
        }
        break;
      }
      case kOrderUpdateFailed: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_failed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_failed_);
        } else {
          _this->_impl_.payload_.order_update_failed_->MergeFrom(*from._impl_.payload_.order_update_failed_);
        }
        break;
      }
      case kOrderUpdateStatus: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_status_);
        } else {
          _this->_impl_.payload_.order_update_status_->MergeFrom(*from._impl_.payload_.order_update_status_);
        }
        break;
      }
      case kOrderUpdateTrade: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_);
        } else {
          _this->_impl_.payload_.order_update_trade_->MergeFrom(*from._impl_.payload_.order_update_trade_);
        }
        break;
      }
      case kOrderUpdateTradeLeg: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_trade_leg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_leg_);
        } else {
          _this->_impl_.payload_.order_update_trade_leg_->MergeFrom(*from._impl_.payload_.order_update_trade_leg_);
        }
        break;
      }
      case kCreateUdsResponse: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.create_uds_response_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.create_uds_response_);
        } else {
          _this->_impl_.payload_.create_uds_response_->MergeFrom(*from._impl_.payload_.create_uds_response_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.service.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServerMessage::InternalSwap(ServerMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Heartbeat::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Heartbeat>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_);
};

Heartbeat::Heartbeat(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Heartbeat_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.service.Heartbeat)
}
Heartbeat::Heartbeat(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Heartbeat& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Heartbeat_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Heartbeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Heartbeat::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
Heartbeat::~Heartbeat() {
  // @@protoc_insertion_point(destructor:t4proto.v1.service.Heartbeat)
  SharedDtor(*this);
}
inline void Heartbeat::SharedDtor(MessageLite& self) {
  Heartbeat& this_ = static_cast<Heartbeat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Heartbeat::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Heartbeat(arena);
}
constexpr auto Heartbeat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Heartbeat),
                                            alignof(Heartbeat));
}
constexpr auto Heartbeat::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Heartbeat_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Heartbeat::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Heartbeat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Heartbeat::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Heartbeat>(), &Heartbeat::ByteSizeLong,
              &Heartbeat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._cached_size_),
          false,
      },
      &Heartbeat::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Heartbeat_class_data_ =
        Heartbeat::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Heartbeat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Heartbeat_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Heartbeat_class_data_.tc_table);
  return Heartbeat_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
Heartbeat::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Heartbeat_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::service::Heartbeat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Heartbeat, _impl_.timestamp_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Heartbeat, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Heartbeat::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.service.Heartbeat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Heartbeat::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Heartbeat& this_ = static_cast<const Heartbeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Heartbeat::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Heartbeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.service.Heartbeat)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.service.Heartbeat)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Heartbeat::ByteSizeLong(const MessageLite& base) {
  const Heartbeat& this_ = static_cast<const Heartbeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Heartbeat::ByteSizeLong() const {
  const Heartbeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.service.Heartbeat)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int64 timestamp = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Heartbeat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Heartbeat*>(&to_msg);
  auto& from = static_cast<const Heartbeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.service.Heartbeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_timestamp() != 0) {
      _this->_impl_.timestamp_ = from._impl_.timestamp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Heartbeat::CopyFrom(const Heartbeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.service.Heartbeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Heartbeat::InternalSwap(Heartbeat* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata Heartbeat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace v1
}  // namespace t4proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_t4_2fv1_2fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
