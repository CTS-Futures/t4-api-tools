// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: t4/v1/orderrouting/orderrouting.proto
// Protobuf C++ Version: 6.31.1

#include "t4/v1/orderrouting/orderrouting.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace t4proto {
namespace v1 {
namespace orderrouting {
template <typename>
PROTOBUF_CONSTEXPR OrderUpdateStatus_InstructionExtraEntry_DoNotUse::OrderUpdateStatus_InstructionExtraEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : OrderUpdateStatus_InstructionExtraEntry_DoNotUse::MapEntry(OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : OrderUpdateStatus_InstructionExtraEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct OrderUpdateStatus_InstructionExtraEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateStatus_InstructionExtraEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateStatus_InstructionExtraEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OrderUpdateStatus_InstructionExtraEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateStatus_InstructionExtraEntry_DoNotUseDefaultTypeInternal _OrderUpdateStatus_InstructionExtraEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR OrderUpdate_InstructionExtraEntry_DoNotUse::OrderUpdate_InstructionExtraEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : OrderUpdate_InstructionExtraEntry_DoNotUse::MapEntry(OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : OrderUpdate_InstructionExtraEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct OrderUpdate_InstructionExtraEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdate_InstructionExtraEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdate_InstructionExtraEntry_DoNotUseDefaultTypeInternal() {}
  union {
    OrderUpdate_InstructionExtraEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdate_InstructionExtraEntry_DoNotUseDefaultTypeInternal _OrderUpdate_InstructionExtraEntry_DoNotUse_default_instance_;

inline constexpr OrderPull_Pull::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR OrderPull_Pull::OrderPull_Pull(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderPull_Pull_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderPull_PullDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderPull_PullDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderPull_PullDefaultTypeInternal() {}
  union {
    OrderPull_Pull _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderPull_PullDefaultTypeInternal _OrderPull_Pull_default_instance_;

inline constexpr CreateUDSResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        marketref_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        uds_status_{static_cast< ::t4proto::v1::common::UDSStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CreateUDSResponse::CreateUDSResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateUDSResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateUDSResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUDSResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUDSResponseDefaultTypeInternal() {}
  union {
    CreateUDSResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUDSResponseDefaultTypeInternal _CreateUDSResponse_default_instance_;

inline constexpr OrderUpdateTradeLeg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_trader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_broker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        exchange_time_{nullptr},
        price_{nullptr},
        change_{static_cast< ::t4proto::v1::common::OrderChange >(0)},
        status_{static_cast< ::t4proto::v1::common::OrderStatus >(0)},
        response_pending_{static_cast< ::t4proto::v1::common::ResponsePending >(0)},
        leg_index_{0},
        volume_{0},
        residual_volume_{0},
        trade_date_{::int64_t{0}},
        sequence_order_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateTradeLeg::OrderUpdateTradeLeg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateTradeLeg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateTradeLegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateTradeLegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateTradeLegDefaultTypeInternal() {}
  union {
    OrderUpdateTradeLeg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateTradeLegDefaultTypeInternal _OrderUpdateTradeLeg_default_instance_;

inline constexpr OrderUpdateTrade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_trader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_broker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        exchange_time_{nullptr},
        price_{nullptr},
        change_{static_cast< ::t4proto::v1::common::OrderChange >(0)},
        status_{static_cast< ::t4proto::v1::common::OrderStatus >(0)},
        response_pending_{static_cast< ::t4proto::v1::common::ResponsePending >(0)},
        total_fill_volume_{0},
        working_volume_{0},
        volume_{0},
        residual_volume_{0},
        sequence_order_{0},
        trade_date_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateTrade::OrderUpdateTrade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateTrade_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateTradeDefaultTypeInternal() {}
  union {
    OrderUpdateTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateTradeDefaultTypeInternal _OrderUpdateTrade_default_instance_;

inline constexpr OrderUpdateStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instruction_extra_{},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executing_login_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        routing_user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        routing_user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_cl_ord_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_orig_cl_ord_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        smp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_login_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ats_regulatory_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authorized_trader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        activation_details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        exchange_time_{nullptr},
        current_limit_price_{nullptr},
        current_stop_price_{nullptr},
        trail_price_{nullptr},
        new_limit_price_{nullptr},
        new_stop_price_{nullptr},
        change_{static_cast< ::t4proto::v1::common::OrderChange >(0)},
        status_{static_cast< ::t4proto::v1::common::OrderStatus >(0)},
        response_pending_{static_cast< ::t4proto::v1::common::ResponsePending >(0)},
        current_volume_{0},
        price_type_{static_cast< ::t4proto::v1::common::PriceType >(0)},
        time_type_{static_cast< ::t4proto::v1::common::TimeType >(0)},
        working_volume_{0},
        activation_type_{static_cast< ::t4proto::v1::common::ActivationType >(0)},
        current_max_show_{0},
        new_volume_{0},
        new_max_show_{0},
        max_volume_{0},
        sequence_order_{0},
        app_type_{static_cast< ::t4proto::v1::common::ApplicationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateStatus::OrderUpdateStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateStatusDefaultTypeInternal() {}
  union {
    OrderUpdateStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateStatusDefaultTypeInternal _OrderUpdateStatus_default_instance_;

inline constexpr OrderUpdateFailed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_cl_ord_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        exchange_time_{nullptr},
        change_{static_cast< ::t4proto::v1::common::OrderChange >(0)},
        status_{static_cast< ::t4proto::v1::common::OrderStatus >(0)},
        response_pending_{static_cast< ::t4proto::v1::common::ResponsePending >(0)},
        sequence_order_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateFailed::OrderUpdateFailed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateFailed_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateFailedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateFailedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateFailedDefaultTypeInternal() {}
  union {
    OrderUpdateFailed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateFailedDefaultTypeInternal _OrderUpdateFailed_default_instance_;

inline constexpr OrderUpdate_TradeLeg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exchange_trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_trader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_broker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        time_{nullptr},
        exchange_time_{nullptr},
        sequence_order_{0},
        leg_index_{0},
        volume_{0},
        residual_volume_{0},
        trade_date_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdate_TradeLeg::OrderUpdate_TradeLeg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdate_TradeLeg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdate_TradeLegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdate_TradeLegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdate_TradeLegDefaultTypeInternal() {}
  union {
    OrderUpdate_TradeLeg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdate_TradeLegDefaultTypeInternal _OrderUpdate_TradeLeg_default_instance_;

inline constexpr OrderUpdate_Trade::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exchange_trade_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_trader_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contra_broker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        time_{nullptr},
        exchange_time_{nullptr},
        sequence_order_{0},
        volume_{0},
        trade_date_{::int64_t{0}},
        residual_volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdate_Trade::OrderUpdate_Trade(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdate_Trade_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdate_TradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdate_TradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdate_TradeDefaultTypeInternal() {}
  union {
    OrderUpdate_Trade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdate_TradeDefaultTypeInternal _OrderUpdate_Trade_default_instance_;

inline constexpr OrderPull::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pulls_{},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        manual_order_indicator_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderPull::OrderPull(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderPull_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderPullDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderPullDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderPullDefaultTypeInternal() {}
  union {
    OrderPull _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderPullDefaultTypeInternal _OrderPull_default_instance_;

inline constexpr OrderActivation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        submit_time_{nullptr},
        cancel_time_{nullptr},
        activation_cancel_time_{nullptr},
        price_{nullptr},
        submit_delay_ms_{::int64_t{0}},
        cancel_delay_ms_{::int64_t{0}},
        activation_cancel_delay_ms_{::int64_t{0}},
        mode_{static_cast< ::t4proto::v1::common::MarketMode >(0)},
        volume_{0},
        bid_offer_{static_cast< ::t4proto::v1::common::BidOffer >(0)},
        implied_{false},
        queue_submit_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderActivation::OrderActivation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderActivation_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderActivationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderActivationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderActivationDefaultTypeInternal() {}
  union {
    OrderActivation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderActivationDefaultTypeInternal _OrderActivation_default_instance_;

inline constexpr CreateUDS_Leg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exchange_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        price_{nullptr},
        delta_{nullptr},
        buy_sell_{static_cast< ::t4proto::v1::common::BuySell >(0)},
        volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CreateUDS_Leg::CreateUDS_Leg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateUDS_Leg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateUDS_LegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUDS_LegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUDS_LegDefaultTypeInternal() {}
  union {
    CreateUDS_Leg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUDS_LegDefaultTypeInternal _CreateUDS_Leg_default_instance_;

inline constexpr OrderUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instruction_extra_{},
        trades_{},
        trade_legs_{},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_detail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_order_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_login_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executing_login_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_number_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        member_allocation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trader_allocation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        customer_reference_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        avg_price_group_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        omnibus_account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        executing_group_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        orders_linked_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        routing_user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        routing_user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_cl_ord_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_orig_cl_ord_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_relation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        smp_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ats_regulatory_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authorized_trader_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        activation_details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        exchange_time_{nullptr},
        submit_time_{nullptr},
        current_limit_price_{nullptr},
        current_stop_price_{nullptr},
        new_limit_price_{nullptr},
        new_stop_price_{nullptr},
        trail_price_{nullptr},
        receive_time_{nullptr},
        change_{static_cast< ::t4proto::v1::common::OrderChange >(0)},
        status_{static_cast< ::t4proto::v1::common::OrderStatus >(0)},
        trade_date_{::int64_t{0}},
        response_pending_{static_cast< ::t4proto::v1::common::ResponsePending >(0)},
        buy_sell_{static_cast< ::t4proto::v1::common::BuySell >(0)},
        price_type_{static_cast< ::t4proto::v1::common::PriceType >(0)},
        time_type_{static_cast< ::t4proto::v1::common::TimeType >(0)},
        current_volume_{0},
        new_volume_{0},
        open_close_{static_cast< ::t4proto::v1::common::OpenClose >(0)},
        cti_{static_cast< ::t4proto::v1::common::CTI >(0)},
        origin_{static_cast< ::t4proto::v1::common::Origin >(0)},
        account_code_{static_cast< ::t4proto::v1::common::AccountCode >(0)},
        cust_order_handling_inst_{static_cast< ::t4proto::v1::common::CustOrderHandlingInstType >(0)},
        avg_price_indicator_{static_cast< ::t4proto::v1::common::AvgPriceIndicatorType >(0)},
        clearing_trade_price_type_{static_cast< ::t4proto::v1::common::ClearingTradePriceType >(0)},
        billing_fee_{static_cast< ::t4proto::v1::common::BillingFee >(0)},
        total_fill_volume_{0},
        working_volume_{0},
        exchange_total_fill_volume_{0},
        trail_revision_interval_{0},
        trail_revision_change_{0},
        order_link_{static_cast< ::t4proto::v1::common::OrderLink >(0)},
        activation_type_{static_cast< ::t4proto::v1::common::ActivationType >(0)},
        primary_user_{static_cast< ::t4proto::v1::common::PrimaryUserType >(0)},
        current_max_show_{0},
        new_max_show_{0},
        order_source_{static_cast< ::t4proto::v1::common::OrderSource >(0)},
        order_source_method_{static_cast< ::t4proto::v1::common::OrderSourceMethod >(0)},
        app_type_{static_cast< ::t4proto::v1::common::ApplicationType >(0)},
        master_type_{static_cast< ::t4proto::v1::common::MasterType >(0)},
        sequence_order_{0},
        max_volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdate::OrderUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateDefaultTypeInternal() {}
  union {
    OrderUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateDefaultTypeInternal _OrderUpdate_default_instance_;

inline constexpr OrderSubmit_Order::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_price_{nullptr},
        stop_price_{nullptr},
        trail_distance_{nullptr},
        activation_data_{nullptr},
        buy_sell_{static_cast< ::t4proto::v1::common::BuySell >(0)},
        price_type_{static_cast< ::t4proto::v1::common::PriceType >(0)},
        time_type_{static_cast< ::t4proto::v1::common::TimeType >(0)},
        volume_{0},
        max_show_{0},
        max_volume_{0},
        activation_type_{static_cast< ::t4proto::v1::common::ActivationType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR OrderSubmit_Order::OrderSubmit_Order(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderSubmit_Order_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderSubmit_OrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderSubmit_OrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderSubmit_OrderDefaultTypeInternal() {}
  union {
    OrderSubmit_Order _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderSubmit_OrderDefaultTypeInternal _OrderSubmit_Order_default_instance_;

inline constexpr OrderRevise_Revise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unique_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_price_{nullptr},
        stop_price_{nullptr},
        trail_price_{nullptr},
        activation_data_{nullptr},
        volume_{0},
        max_show_{0},
        max_volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderRevise_Revise::OrderRevise_Revise(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderRevise_Revise_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderRevise_ReviseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderRevise_ReviseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderRevise_ReviseDefaultTypeInternal() {}
  union {
    OrderRevise_Revise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderRevise_ReviseDefaultTypeInternal _OrderRevise_Revise_default_instance_;

inline constexpr CreateUDS::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        legs_{},
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_type_{static_cast< ::t4proto::v1::common::StrategyType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CreateUDS::CreateUDS(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateUDS_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateUDSDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUDSDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUDSDefaultTypeInternal() {}
  union {
    CreateUDS _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUDSDefaultTypeInternal _CreateUDS_default_instance_;

inline constexpr OrderUpdateMultiMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateMultiMessage::OrderUpdateMultiMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateMultiMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateMultiMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateMultiMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateMultiMessageDefaultTypeInternal() {}
  union {
    OrderUpdateMultiMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateMultiMessageDefaultTypeInternal _OrderUpdateMultiMessage_default_instance_;

inline constexpr OrderSubmit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        orders_{},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_link_{static_cast< ::t4proto::v1::common::OrderLink >(0)},
        manual_order_indicator_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderSubmit::OrderSubmit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderSubmit_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderSubmitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderSubmitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderSubmitDefaultTypeInternal() {}
  union {
    OrderSubmit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderSubmitDefaultTypeInternal _OrderSubmit_default_instance_;

inline constexpr OrderRevise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        revisions_{},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        manual_order_indicator_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderRevise::OrderRevise(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderRevise_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderReviseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderReviseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderReviseDefaultTypeInternal() {}
  union {
    OrderRevise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderReviseDefaultTypeInternal _OrderRevise_default_instance_;

inline constexpr OrderUpdateMulti::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        updates_{},
        market_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        account_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        historical_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderUpdateMulti::OrderUpdateMulti(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderUpdateMulti_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderUpdateMultiDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderUpdateMultiDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderUpdateMultiDefaultTypeInternal() {}
  union {
    OrderUpdateMulti _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderUpdateMultiDefaultTypeInternal _OrderUpdateMulti_default_instance_;
}  // namespace orderrouting
}  // namespace v1
}  // namespace t4proto
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_t4_2fv1_2forderrouting_2forderrouting_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_t4_2fv1_2forderrouting_2forderrouting_2eproto = nullptr;
const ::uint32_t
    TableStruct_t4_2fv1_2forderrouting_2forderrouting_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.submit_delay_ms_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.cancel_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.cancel_delay_ms_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.activation_cancel_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.activation_cancel_delay_ms_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.bid_offer_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.implied_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderActivation, _impl_.queue_submit_),
        0,
        4,
        1,
        5,
        2,
        6,
        7,
        3,
        8,
        9,
        10,
        11,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_._has_bits_),
        15, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.buy_sell_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.time_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.max_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.trail_distance_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.activation_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit_Order, _impl_.activation_data_),
        5,
        6,
        7,
        8,
        9,
        10,
        1,
        2,
        3,
        0,
        11,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.order_link_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.manual_order_indicator_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderSubmit, _impl_.orders_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.max_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.trail_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise_Revise, _impl_.activation_data_),
        0,
        6,
        7,
        8,
        2,
        3,
        4,
        1,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_.manual_order_indicator_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderRevise, _impl_.revisions_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull_Pull, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull_Pull, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull_Pull, _impl_.tag_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_.manual_order_indicator_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderPull, _impl_.pulls_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.exchange_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.contract_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.buy_sell_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS_Leg, _impl_.delta_),
        0,
        1,
        2,
        5,
        6,
        3,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_.strategy_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDS, _impl_.legs_),
        0,
        1,
        2,
        3,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.response_pending_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.tag_cl_ord_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateFailed, _impl_.sequence_order_),
        0,
        1,
        2,
        5,
        6,
        7,
        8,
        3,
        9,
        4,
        10,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_._has_bits_),
        48, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.response_pending_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.exchange_order_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.current_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.current_limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.current_stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.time_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.working_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.executing_login_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.activation_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.trail_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.current_max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.user_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.user_address_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.app_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.app_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.routing_user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.routing_user_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.new_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.new_limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.new_stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.new_max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.tag_cl_ord_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.tag_orig_cl_ord_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.smp_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.exchange_login_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.exchange_location_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.ats_regulatory_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.max_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.sequence_order_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.authorized_trader_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.instruction_extra_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.app_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateStatus, _impl_.activation_details_),
        0,
        1,
        2,
        23,
        24,
        30,
        31,
        3,
        32,
        4,
        33,
        25,
        26,
        34,
        35,
        36,
        5,
        37,
        27,
        38,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        39,
        28,
        29,
        40,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        41,
        42,
        21,
        ~0u,
        43,
        22,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_._has_bits_),
        22, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.response_pending_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.total_fill_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.working_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.residual_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.exchange_trade_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.contra_trader_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.contra_broker_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.trade_date_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTrade, _impl_.sequence_order_),
        0,
        1,
        2,
        7,
        8,
        10,
        11,
        3,
        12,
        13,
        14,
        15,
        9,
        16,
        4,
        5,
        6,
        18,
        17,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_._has_bits_),
        21, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.response_pending_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.leg_index_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.exchange_trade_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.contra_trader_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.contra_broker_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.residual_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.trade_date_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateTradeLeg, _impl_.sequence_order_),
        0,
        1,
        2,
        7,
        8,
        10,
        11,
        3,
        12,
        13,
        14,
        9,
        4,
        5,
        6,
        15,
        16,
        17,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_._has_bits_),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.sequence_order_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.residual_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.exchange_trade_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.contra_trader_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.contra_broker_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_Trade, _impl_.trade_date_),
        6,
        7,
        3,
        9,
        4,
        0,
        5,
        1,
        2,
        8,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.sequence_order_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.leg_index_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.exchange_trade_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.contra_trader_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.contra_broker_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.residual_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg, _impl_.trade_date_),
        6,
        7,
        8,
        3,
        4,
        0,
        5,
        1,
        2,
        9,
        10,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_._has_bits_),
        81, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.unique_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.response_pending_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_order_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trade_date_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_login_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.executing_login_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_location_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.user_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.user_address_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.app_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.app_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.buy_sell_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.price_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.time_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.current_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.current_limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.current_stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.new_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.new_limit_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.new_stop_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.open_close_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.account_number_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.cti_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.origin_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.account_code_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.member_allocation_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trader_allocation_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.customer_reference_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.cust_order_handling_inst_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.avg_price_indicator_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.avg_price_group_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.clearing_trade_price_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.billing_fee_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.omnibus_account_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.executing_group_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.tag_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.total_fill_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.working_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.exchange_total_fill_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trail_price_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trail_revision_interval_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trail_revision_change_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.order_link_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.orders_linked_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.activation_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.primary_user_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.current_max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.new_max_show_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.routing_user_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.routing_user_name_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.order_source_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.order_source_method_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.app_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.master_type_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.tag_cl_ord_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.tag_orig_cl_ord_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.tag_relation_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.smp_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.sequence_order_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.ats_regulatory_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.max_volume_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.authorized_trader_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.instruction_extra_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.receive_time_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.activation_details_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trades_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdate, _impl_.trade_legs_),
        0,
        1,
        2,
        33,
        34,
        42,
        43,
        3,
        45,
        4,
        35,
        44,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        46,
        47,
        48,
        49,
        36,
        37,
        50,
        38,
        39,
        51,
        15,
        52,
        53,
        54,
        16,
        17,
        18,
        55,
        56,
        19,
        57,
        58,
        20,
        21,
        22,
        59,
        60,
        61,
        40,
        62,
        63,
        64,
        23,
        65,
        66,
        67,
        68,
        24,
        25,
        69,
        70,
        71,
        72,
        26,
        27,
        28,
        29,
        73,
        30,
        74,
        31,
        ~0u,
        41,
        32,
        ~0u,
        ~0u,
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMultiMessage, _impl_._oneof_case_[0]),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMultiMessage, _impl_.payload_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMulti, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMulti, _impl_.market_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMulti, _impl_.account_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMulti, _impl_.historical_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMulti, _impl_.updates_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDSResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDSResponse, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDSResponse, _impl_.status_detail_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDSResponse, _impl_.marketref_),
        PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::CreateUDSResponse, _impl_.uds_status_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::t4proto::v1::orderrouting::OrderActivation)},
        {27, sizeof(::t4proto::v1::orderrouting::OrderSubmit_Order)},
        {54, sizeof(::t4proto::v1::orderrouting::OrderSubmit)},
        {69, sizeof(::t4proto::v1::orderrouting::OrderRevise_Revise)},
        {90, sizeof(::t4proto::v1::orderrouting::OrderRevise)},
        {103, sizeof(::t4proto::v1::orderrouting::OrderPull_Pull)},
        {110, sizeof(::t4proto::v1::orderrouting::OrderPull)},
        {123, sizeof(::t4proto::v1::orderrouting::CreateUDS_Leg)},
        {140, sizeof(::t4proto::v1::orderrouting::CreateUDS)},
        {153, sizeof(::t4proto::v1::orderrouting::OrderUpdateFailed)},
        {178, sizeof(::t4proto::v1::orderrouting::OrderUpdateStatus_InstructionExtraEntry_DoNotUse)},
        {185, sizeof(::t4proto::v1::orderrouting::OrderUpdateStatus)},
        {278, sizeof(::t4proto::v1::orderrouting::OrderUpdateTrade)},
        {319, sizeof(::t4proto::v1::orderrouting::OrderUpdateTradeLeg)},
        {358, sizeof(::t4proto::v1::orderrouting::OrderUpdate_Trade)},
        {381, sizeof(::t4proto::v1::orderrouting::OrderUpdate_TradeLeg)},
        {406, sizeof(::t4proto::v1::orderrouting::OrderUpdate_InstructionExtraEntry_DoNotUse)},
        {413, sizeof(::t4proto::v1::orderrouting::OrderUpdate)},
        {572, sizeof(::t4proto::v1::orderrouting::OrderUpdateMultiMessage)},
        {580, sizeof(::t4proto::v1::orderrouting::OrderUpdateMulti)},
        {591, sizeof(::t4proto::v1::orderrouting::CreateUDSResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::t4proto::v1::orderrouting::_OrderActivation_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderSubmit_Order_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderSubmit_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderRevise_Revise_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderRevise_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderPull_Pull_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderPull_default_instance_._instance,
    &::t4proto::v1::orderrouting::_CreateUDS_Leg_default_instance_._instance,
    &::t4proto::v1::orderrouting::_CreateUDS_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateFailed_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateStatus_InstructionExtraEntry_DoNotUse_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateStatus_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateTrade_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateTradeLeg_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdate_Trade_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdate_TradeLeg_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdate_InstructionExtraEntry_DoNotUse_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdate_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateMultiMessage_default_instance_._instance,
    &::t4proto::v1::orderrouting::_OrderUpdateMulti_default_instance_._instance,
    &::t4proto::v1::orderrouting::_CreateUDSResponse_default_instance_._instance,
};
const char descriptor_table_protodef_t4_2fv1_2forderrouting_2forderrouting_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%t4/v1/orderrouting/orderrouting.proto\022"
    "\027t4proto.v1.orderrouting\032\037google/protobu"
    "f/timestamp.proto\032\030t4/v1/common/enums.pr"
    "oto\032\030t4/v1/common/price.proto\"\311\005\n\017OrderA"
    "ctivation\0224\n\013submit_time\030\001 \001(\0132\032.google."
    "protobuf.TimestampH\000\210\001\001\022\034\n\017submit_delay_"
    "ms\030\002 \001(\003H\001\210\001\001\0224\n\013cancel_time\030\003 \001(\0132\032.goo"
    "gle.protobuf.TimestampH\002\210\001\001\022\034\n\017cancel_de"
    "lay_ms\030\004 \001(\003H\003\210\001\001\022\?\n\026activation_cancel_t"
    "ime\030\005 \001(\0132\032.google.protobuf.TimestampH\004\210"
    "\001\001\022\'\n\032activation_cancel_delay_ms\030\006 \001(\003H\005"
    "\210\001\001\0220\n\004mode\030\007 \001(\0162\035.t4proto.v1.common.Ma"
    "rketModeH\006\210\001\001\022,\n\005price\030\010 \001(\0132\030.t4proto.v"
    "1.common.PriceH\007\210\001\001\022\023\n\006volume\030\t \001(\005H\010\210\001\001"
    "\0223\n\tbid_offer\030\n \001(\0162\033.t4proto.v1.common."
    "BidOfferH\t\210\001\001\022\024\n\007implied\030\013 \001(\010H\n\210\001\001\022\031\n\014q"
    "ueue_submit\030\014 \001(\010H\013\210\001\001B\016\n\014_submit_timeB\022"
    "\n\020_submit_delay_msB\016\n\014_cancel_timeB\022\n\020_c"
    "ancel_delay_msB\031\n\027_activation_cancel_tim"
    "eB\035\n\033_activation_cancel_delay_msB\007\n\005_mod"
    "eB\010\n\006_priceB\t\n\007_volumeB\014\n\n_bid_offerB\n\n\010"
    "_impliedB\017\n\r_queue_submit\"\365\006\n\013OrderSubmi"
    "t\022\024\n\007user_id\030\001 \001(\tH\000\210\001\001\022\022\n\naccount_id\030\002 "
    "\001(\t\022\021\n\tmarket_id\030\003 \001(\t\0220\n\norder_link\030\004 \001"
    "(\0162\034.t4proto.v1.common.OrderLink\022\036\n\026manu"
    "al_order_indicator\030\005 \001(\010\022:\n\006orders\030\006 \003(\013"
    "2*.t4proto.v1.orderrouting.OrderSubmit.O"
    "rder\032\216\005\n\005Order\022,\n\010buy_sell\030\001 \001(\0162\032.t4pro"
    "to.v1.common.BuySell\0220\n\nprice_type\030\002 \001(\016"
    "2\034.t4proto.v1.common.PriceType\022.\n\ttime_t"
    "ype\030\003 \001(\0162\033.t4proto.v1.common.TimeType\022\016"
    "\n\006volume\030\004 \001(\005\022\025\n\010max_show\030\005 \001(\005H\000\210\001\001\022\027\n"
    "\nmax_volume\030\006 \001(\005H\001\210\001\001\0222\n\013limit_price\030\007 "
    "\001(\0132\030.t4proto.v1.common.PriceH\002\210\001\001\0221\n\nst"
    "op_price\030\010 \001(\0132\030.t4proto.v1.common.Price"
    "H\003\210\001\001\0225\n\016trail_distance\030\t \001(\0132\030.t4proto."
    "v1.common.PriceH\004\210\001\001\022\020\n\003tag\030\n \001(\tH\005\210\001\001\022\?"
    "\n\017activation_type\030\013 \001(\0162!.t4proto.v1.com"
    "mon.ActivationTypeH\006\210\001\001\022F\n\017activation_da"
    "ta\030\014 \001(\0132(.t4proto.v1.orderrouting.Order"
    "ActivationH\007\210\001\001B\013\n\t_max_showB\r\n\013_max_vol"
    "umeB\016\n\014_limit_priceB\r\n\013_stop_priceB\021\n\017_t"
    "rail_distanceB\006\n\004_tagB\022\n\020_activation_typ"
    "eB\022\n\020_activation_dataB\n\n\010_user_id\"\357\004\n\013Or"
    "derRevise\022\017\n\007user_id\030\001 \001(\t\022\022\n\naccount_id"
    "\030\002 \001(\t\022\021\n\tmarket_id\030\003 \001(\t\022\036\n\026manual_orde"
    "r_indicator\030\004 \001(\010\022>\n\trevisions\030\005 \003(\0132+.t"
    "4proto.v1.orderrouting.OrderRevise.Revis"
    "e\032\307\003\n\006Revise\022\021\n\tunique_id\030\001 \001(\t\022\023\n\006volum"
    "e\030\002 \001(\005H\000\210\001\001\022\025\n\010max_show\030\003 \001(\005H\001\210\001\001\022\027\n\nm"
    "ax_volume\030\004 \001(\005H\002\210\001\001\0222\n\013limit_price\030\005 \001("
    "\0132\030.t4proto.v1.common.PriceH\003\210\001\001\0221\n\nstop"
    "_price\030\006 \001(\0132\030.t4proto.v1.common.PriceH\004"
    "\210\001\001\0222\n\013trail_price\030\007 \001(\0132\030.t4proto.v1.co"
    "mmon.PriceH\005\210\001\001\022\020\n\003tag\030\010 \001(\tH\006\210\001\001\022F\n\017act"
    "ivation_data\030\t \001(\0132(.t4proto.v1.orderrou"
    "ting.OrderActivationH\007\210\001\001B\t\n\007_volumeB\013\n\t"
    "_max_showB\r\n\013_max_volumeB\016\n\014_limit_price"
    "B\r\n\013_stop_priceB\016\n\014_trail_priceB\006\n\004_tagB"
    "\022\n\020_activation_data\"\320\001\n\tOrderPull\022\017\n\007use"
    "r_id\030\001 \001(\t\022\022\n\naccount_id\030\002 \001(\t\022\021\n\tmarket"
    "_id\030\003 \001(\t\022\036\n\026manual_order_indicator\030\004 \001("
    "\010\0226\n\005pulls\030\005 \003(\0132\'.t4proto.v1.orderrouti"
    "ng.OrderPull.Pull\0323\n\004Pull\022\021\n\tunique_id\030\001"
    " \001(\t\022\020\n\003tag\030\002 \001(\tH\000\210\001\001B\006\n\004_tag\"\211\003\n\tCreat"
    "eUDS\022\022\n\nrequest_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001("
    "\t\022\022\n\naccount_id\030\003 \001(\t\0226\n\rstrategy_type\030\004"
    " \001(\0162\037.t4proto.v1.common.StrategyType\0224\n"
    "\004legs\030\005 \003(\0132&.t4proto.v1.orderrouting.Cr"
    "eateUDS.Leg\032\324\001\n\003Leg\022\023\n\013exchange_id\030\001 \001(\t"
    "\022\023\n\013contract_id\030\002 \001(\t\022\021\n\tmarket_id\030\003 \001(\t"
    "\022,\n\010buy_sell\030\004 \001(\0162\032.t4proto.v1.common.B"
    "uySell\022\016\n\006volume\030\005 \001(\005\022\'\n\005price\030\006 \001(\0132\030."
    "t4proto.v1.common.Price\022)\n\005delta\030\007 \001(\0132\032"
    ".t4proto.v1.common.Decimal\"\216\003\n\021OrderUpda"
    "teFailed\022\021\n\tunique_id\030\001 \001(\t\022\022\n\naccount_i"
    "d\030\002 \001(\t\022\021\n\tmarket_id\030\003 \001(\t\022(\n\004time\030\004 \001(\013"
    "2\032.google.protobuf.Timestamp\0221\n\rexchange"
    "_time\030\005 \001(\0132\032.google.protobuf.Timestamp\022"
    ".\n\006change\030\006 \001(\0162\036.t4proto.v1.common.Orde"
    "rChange\022.\n\006status\030\007 \001(\0162\036.t4proto.v1.com"
    "mon.OrderStatus\022\025\n\rstatus_detail\030\010 \001(\t\022<"
    "\n\020response_pending\030\t \001(\0162\".t4proto.v1.co"
    "mmon.ResponsePending\022\025\n\rtag_cl_ord_id\030\n "
    "\001(\t\022\026\n\016sequence_order\030\013 \001(\005\"\240\014\n\021OrderUpd"
    "ateStatus\022\021\n\tunique_id\030\001 \001(\t\022\022\n\naccount_"
    "id\030\002 \001(\t\022\021\n\tmarket_id\030\003 \001(\t\022(\n\004time\030\004 \001("
    "\0132\032.google.protobuf.Timestamp\0221\n\rexchang"
    "e_time\030\005 \001(\0132\032.google.protobuf.Timestamp"
    "\022.\n\006change\030\006 \001(\0162\036.t4proto.v1.common.Ord"
    "erChange\022.\n\006status\030\007 \001(\0162\036.t4proto.v1.co"
    "mmon.OrderStatus\022\025\n\rstatus_detail\030\010 \001(\t\022"
    "<\n\020response_pending\030\t \001(\0162\".t4proto.v1.c"
    "ommon.ResponsePending\022\031\n\021exchange_order_"
    "id\030\n \001(\t\022\026\n\016current_volume\030\013 \001(\005\0225\n\023curr"
    "ent_limit_price\030\014 \001(\0132\030.t4proto.v1.commo"
    "n.Price\0224\n\022current_stop_price\030\r \001(\0132\030.t4"
    "proto.v1.common.Price\0220\n\nprice_type\030\016 \001("
    "\0162\034.t4proto.v1.common.PriceType\022.\n\ttime_"
    "type\030\017 \001(\0162\033.t4proto.v1.common.TimeType\022"
    "\026\n\016working_volume\030\020 \001(\005\022\032\n\022executing_log"
    "in_id\030\021 \001(\t\022:\n\017activation_type\030\022 \001(\0162!.t"
    "4proto.v1.common.ActivationType\022-\n\013trail"
    "_price\030\023 \001(\0132\030.t4proto.v1.common.Price\022\030"
    "\n\020current_max_show\030\024 \001(\005\022\017\n\007user_id\030\025 \001("
    "\t\022\021\n\tuser_name\030\026 \001(\t\022\024\n\014user_address\030\027 \001"
    "(\t\022\022\n\nsession_id\030\030 \001(\t\022\016\n\006app_id\030\031 \001(\t\022\020"
    "\n\010app_name\030\032 \001(\t\022\027\n\017routing_user_id\030\033 \001("
    "\t\022\031\n\021routing_user_name\030\034 \001(\t\022\022\n\nnew_volu"
    "me\030\035 \001(\005\0221\n\017new_limit_price\030\036 \001(\0132\030.t4pr"
    "oto.v1.common.Price\0220\n\016new_stop_price\030\037 "
    "\001(\0132\030.t4proto.v1.common.Price\022\024\n\014new_max"
    "_show\030  \001(\005\022\013\n\003tag\030! \001(\t\022\025\n\rtag_cl_ord_i"
    "d\030\" \001(\t\022\032\n\022tag_orig_cl_ord_id\030# \001(\t\022\016\n\006s"
    "mp_id\030$ \001(\t\022\031\n\021exchange_login_id\030% \001(\t\022\031"
    "\n\021exchange_location\030& \001(\t\022\031\n\021ats_regulat"
    "ory_id\030\' \001(\t\022\022\n\nmax_volume\030( \001(\005\022\026\n\016sequ"
    "ence_order\030) \001(\005\022\034\n\024authorized_trader_id"
    "\030* \001(\t\022[\n\021instruction_extra\030+ \003(\0132@.t4pr"
    "oto.v1.orderrouting.OrderUpdateStatus.In"
    "structionExtraEntry\0224\n\010app_type\030, \001(\0162\"."
    "t4proto.v1.common.ApplicationType\022\032\n\022act"
    "ivation_details\030- \001(\t\0327\n\025InstructionExtr"
    "aEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\330"
    "\004\n\020OrderUpdateTrade\022\021\n\tunique_id\030\001 \001(\t\022\022"
    "\n\naccount_id\030\002 \001(\t\022\021\n\tmarket_id\030\003 \001(\t\022(\n"
    "\004time\030\004 \001(\0132\032.google.protobuf.Timestamp\022"
    "1\n\rexchange_time\030\005 \001(\0132\032.google.protobuf"
    ".Timestamp\022.\n\006change\030\006 \001(\0162\036.t4proto.v1."
    "common.OrderChange\022.\n\006status\030\007 \001(\0162\036.t4p"
    "roto.v1.common.OrderStatus\022\025\n\rstatus_det"
    "ail\030\010 \001(\t\022<\n\020response_pending\030\t \001(\0162\".t4"
    "proto.v1.common.ResponsePending\022\031\n\021total"
    "_fill_volume\030\n \001(\005\022\026\n\016working_volume\030\013 \001"
    "(\005\022\016\n\006volume\030\014 \001(\005\022\'\n\005price\030\r \001(\0132\030.t4pr"
    "oto.v1.common.Price\022\027\n\017residual_volume\030\016"
    " \001(\005\022\031\n\021exchange_trade_id\030\017 \001(\t\022\025\n\rcontr"
    "a_trader\030\020 \001(\t\022\025\n\rcontra_broker\030\021 \001(\t\022\022\n"
    "\ntrade_date\030\022 \001(\003\022\026\n\016sequence_order\030\023 \001("
    "\005\"\273\004\n\023OrderUpdateTradeLeg\022\021\n\tunique_id\030\001"
    " \001(\t\022\022\n\naccount_id\030\002 \001(\t\022\021\n\tmarket_id\030\003 "
    "\001(\t\022(\n\004time\030\004 \001(\0132\032.google.protobuf.Time"
    "stamp\0221\n\rexchange_time\030\005 \001(\0132\032.google.pr"
    "otobuf.Timestamp\022.\n\006change\030\006 \001(\0162\036.t4pro"
    "to.v1.common.OrderChange\022.\n\006status\030\007 \001(\016"
    "2\036.t4proto.v1.common.OrderStatus\022\025\n\rstat"
    "us_detail\030\010 \001(\t\022<\n\020response_pending\030\t \001("
    "\0162\".t4proto.v1.common.ResponsePending\022\021\n"
    "\tleg_index\030\n \001(\005\022\016\n\006volume\030\013 \001(\005\022\'\n\005pric"
    "e\030\014 \001(\0132\030.t4proto.v1.common.Price\022\031\n\021exc"
    "hange_trade_id\030\r \001(\t\022\025\n\rcontra_trader\030\016 "
    "\001(\t\022\025\n\rcontra_broker\030\017 \001(\t\022\027\n\017residual_v"
    "olume\030\020 \001(\005\022\022\n\ntrade_date\030\021 \001(\003\022\026\n\016seque"
    "nce_order\030\022 \001(\005\"\223\034\n\013OrderUpdate\022\021\n\tuniqu"
    "e_id\030\001 \001(\t\022\022\n\naccount_id\030\002 \001(\t\022\021\n\tmarket"
    "_id\030\003 \001(\t\022(\n\004time\030\004 \001(\0132\032.google.protobu"
    "f.Timestamp\0221\n\rexchange_time\030\005 \001(\0132\032.goo"
    "gle.protobuf.Timestamp\022.\n\006change\030\006 \001(\0162\036"
    ".t4proto.v1.common.OrderChange\022.\n\006status"
    "\030\007 \001(\0162\036.t4proto.v1.common.OrderStatus\022\025"
    "\n\rstatus_detail\030\010 \001(\t\022<\n\020response_pendin"
    "g\030\t \001(\0162\".t4proto.v1.common.ResponsePend"
    "ing\022\031\n\021exchange_order_id\030\n \001(\t\022/\n\013submit"
    "_time\030\013 \001(\0132\032.google.protobuf.Timestamp\022"
    "\022\n\ntrade_date\030\014 \001(\003\022\023\n\013exchange_id\030\r \001(\t"
    "\022\031\n\021exchange_login_id\030\016 \001(\t\022\032\n\022executing"
    "_login_id\030\017 \001(\t\022\031\n\021exchange_location\030\020 \001"
    "(\t\022\017\n\007user_id\030\021 \001(\t\022\021\n\tuser_name\030\022 \001(\t\022\024"
    "\n\014user_address\030\023 \001(\t\022\022\n\nsession_id\030\024 \001(\t"
    "\022\016\n\006app_id\030\025 \001(\t\022\020\n\010app_name\030\026 \001(\t\022,\n\010bu"
    "y_sell\030\027 \001(\0162\032.t4proto.v1.common.BuySell"
    "\0220\n\nprice_type\030\030 \001(\0162\034.t4proto.v1.common"
    ".PriceType\022.\n\ttime_type\030\031 \001(\0162\033.t4proto."
    "v1.common.TimeType\022\026\n\016current_volume\030\032 \001"
    "(\005\0225\n\023current_limit_price\030\033 \001(\0132\030.t4prot"
    "o.v1.common.Price\0224\n\022current_stop_price\030"
    "\034 \001(\0132\030.t4proto.v1.common.Price\022\022\n\nnew_v"
    "olume\030\035 \001(\005\0221\n\017new_limit_price\030\036 \001(\0132\030.t"
    "4proto.v1.common.Price\0220\n\016new_stop_price"
    "\030\037 \001(\0132\030.t4proto.v1.common.Price\0220\n\nopen"
    "_close\030  \001(\0162\034.t4proto.v1.common.OpenClo"
    "se\022\026\n\016account_number\030! \001(\t\022#\n\003cti\030\" \001(\0162"
    "\026.t4proto.v1.common.CTI\022)\n\006origin\030# \001(\0162"
    "\031.t4proto.v1.common.Origin\0224\n\014account_co"
    "de\030$ \001(\0162\036.t4proto.v1.common.AccountCode"
    "\022\031\n\021member_allocation\030% \001(\t\022\031\n\021trader_al"
    "location\030& \001(\t\022\032\n\022customer_reference\030\' \001"
    "(\t\022N\n\030cust_order_handling_inst\030( \001(\0162,.t"
    "4proto.v1.common.CustOrderHandlingInstTy"
    "pe\022E\n\023avg_price_indicator\030) \001(\0162(.t4prot"
    "o.v1.common.AvgPriceIndicatorType\022\032\n\022avg"
    "_price_group_id\030* \001(\t\022L\n\031clearing_trade_"
    "price_type\030+ \001(\0162).t4proto.v1.common.Cle"
    "aringTradePriceType\0222\n\013billing_fee\030, \001(\016"
    "2\035.t4proto.v1.common.BillingFee\022\027\n\017omnib"
    "us_account\030- \001(\t\022\032\n\022executing_group_id\030."
    " \001(\t\022\013\n\003tag\030/ \001(\t\022\031\n\021total_fill_volume\0300"
    " \001(\005\022\026\n\016working_volume\0301 \001(\005\022\"\n\032exchange"
    "_total_fill_volume\0302 \001(\005\022-\n\013trail_price\030"
    "3 \001(\0132\030.t4proto.v1.common.Price\022\037\n\027trail"
    "_revision_interval\0304 \001(\005\022\035\n\025trail_revisi"
    "on_change\0305 \001(\005\0220\n\norder_link\0306 \001(\0162\034.t4"
    "proto.v1.common.OrderLink\022\025\n\rorders_link"
    "ed\0307 \001(\t\022:\n\017activation_type\0308 \001(\0162!.t4pr"
    "oto.v1.common.ActivationType\0228\n\014primary_"
    "user\0309 \001(\0162\".t4proto.v1.common.PrimaryUs"
    "erType\022\030\n\020current_max_show\030: \001(\005\022\024\n\014new_"
    "max_show\030; \001(\005\022\027\n\017routing_user_id\030< \001(\t\022"
    "\031\n\021routing_user_name\030= \001(\t\0224\n\014order_sour"
    "ce\030> \001(\0162\036.t4proto.v1.common.OrderSource"
    "\022A\n\023order_source_method\030\? \001(\0162$.t4proto."
    "v1.common.OrderSourceMethod\0224\n\010app_type\030"
    "@ \001(\0162\".t4proto.v1.common.ApplicationTyp"
    "e\0222\n\013master_type\030A \001(\0162\035.t4proto.v1.comm"
    "on.MasterType\022\025\n\rtag_cl_ord_id\030B \001(\t\022\032\n\022"
    "tag_orig_cl_ord_id\030C \001(\t\022\027\n\017tag_relation"
    "_id\030D \001(\t\022\016\n\006smp_id\030E \001(\t\022\026\n\016sequence_or"
    "der\030F \001(\005\022\031\n\021ats_regulatory_id\030G \001(\t\022\022\n\n"
    "max_volume\030H \001(\005\022\034\n\024authorized_trader_id"
    "\030I \001(\t\022U\n\021instruction_extra\030J \003(\0132:.t4pr"
    "oto.v1.orderrouting.OrderUpdate.Instruct"
    "ionExtraEntry\0220\n\014receive_time\030K \001(\0132\032.go"
    "ogle.protobuf.Timestamp\022\032\n\022activation_de"
    "tails\030L \001(\t\022:\n\006trades\030M \003(\0132*.t4proto.v1"
    ".orderrouting.OrderUpdate.Trade\022A\n\ntrade"
    "_legs\030N \003(\0132-.t4proto.v1.orderrouting.Or"
    "derUpdate.TradeLeg\032\253\002\n\005Trade\022\026\n\016sequence"
    "_order\030\001 \001(\005\022\016\n\006volume\030\002 \001(\005\022\'\n\005price\030\003 "
    "\001(\0132\030.t4proto.v1.common.Price\022\027\n\017residua"
    "l_volume\030\004 \001(\005\022(\n\004time\030\005 \001(\0132\032.google.pr"
    "otobuf.Timestamp\022\031\n\021exchange_trade_id\030\006 "
    "\001(\t\0221\n\rexchange_time\030\007 \001(\0132\032.google.prot"
    "obuf.Timestamp\022\025\n\rcontra_trader\030\010 \001(\t\022\025\n"
    "\rcontra_broker\030\t \001(\t\022\022\n\ntrade_date\030\n \001(\003"
    "\032\301\002\n\010TradeLeg\022\026\n\016sequence_order\030\001 \001(\005\022\021\n"
    "\tleg_index\030\002 \001(\005\022\016\n\006volume\030\003 \001(\005\022\'\n\005pric"
    "e\030\004 \001(\0132\030.t4proto.v1.common.Price\022(\n\004tim"
    "e\030\005 \001(\0132\032.google.protobuf.Timestamp\022\031\n\021e"
    "xchange_trade_id\030\006 \001(\t\0221\n\rexchange_time\030"
    "\007 \001(\0132\032.google.protobuf.Timestamp\022\025\n\rcon"
    "tra_trader\030\010 \001(\t\022\025\n\rcontra_broker\030\t \001(\t\022"
    "\027\n\017residual_volume\030\n \001(\005\022\022\n\ntrade_date\030\013"
    " \001(\003\0327\n\025InstructionExtraEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\221\003\n\027OrderUpdateMul"
    "tiMessage\022<\n\014order_update\030\003 \001(\0132$.t4prot"
    "o.v1.orderrouting.OrderUpdateH\000\022I\n\023order"
    "_update_failed\030\004 \001(\0132*.t4proto.v1.orderr"
    "outing.OrderUpdateFailedH\000\022I\n\023order_upda"
    "te_status\030\005 \001(\0132*.t4proto.v1.orderroutin"
    "g.OrderUpdateStatusH\000\022G\n\022order_update_tr"
    "ade\030\006 \001(\0132).t4proto.v1.orderrouting.Orde"
    "rUpdateTradeH\000\022N\n\026order_update_trade_leg"
    "\030\007 \001(\0132,.t4proto.v1.orderrouting.OrderUp"
    "dateTradeLegH\000B\t\n\007payload\"\220\001\n\020OrderUpdat"
    "eMulti\022\021\n\tmarket_id\030\001 \001(\t\022\022\n\naccount_id\030"
    "\002 \001(\t\022\022\n\nhistorical\030\003 \001(\010\022A\n\007updates\030\004 \003"
    "(\01320.t4proto.v1.orderrouting.OrderUpdate"
    "MultiMessage\"\203\001\n\021CreateUDSResponse\022\022\n\nre"
    "quest_id\030\001 \001(\t\022\025\n\rstatus_detail\030\002 \001(\t\022\021\n"
    "\tMarketRef\030\003 \001(\t\0220\n\nuds_status\030\004 \001(\0162\034.t"
    "4proto.v1.common.UDSStatusb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto_deps[3] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_t4_2fv1_2fcommon_2fenums_2eproto,
        &::descriptor_table_t4_2fv1_2fcommon_2fprice_2eproto,
};
static ::absl::once_flag descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto = {
    false,
    false,
    10434,
    descriptor_table_protodef_t4_2fv1_2forderrouting_2forderrouting_2eproto,
    "t4/v1/orderrouting/orderrouting.proto",
    &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto_once,
    descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto_deps,
    3,
    21,
    schemas,
    file_default_instances,
    TableStruct_t4_2fv1_2forderrouting_2forderrouting_2eproto::offsets,
    file_level_enum_descriptors_t4_2fv1_2forderrouting_2forderrouting_2eproto,
    file_level_service_descriptors_t4_2fv1_2forderrouting_2forderrouting_2eproto,
};
namespace t4proto {
namespace v1 {
namespace orderrouting {
// ===================================================================

class OrderActivation::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderActivation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_._has_bits_);
};

void OrderActivation::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void OrderActivation::clear_cancel_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cancel_time_ != nullptr) _impl_.cancel_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderActivation::clear_activation_cancel_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_cancel_time_ != nullptr) _impl_.activation_cancel_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderActivation::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
OrderActivation::OrderActivation(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderActivation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderActivation)
}
PROTOBUF_NDEBUG_INLINE OrderActivation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderActivation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OrderActivation::OrderActivation(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderActivation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderActivation_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderActivation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.submit_time_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.submit_time_)
                : nullptr;
  _impl_.cancel_time_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cancel_time_)
                : nullptr;
  _impl_.activation_cancel_time_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_cancel_time_)
                : nullptr;
  _impl_.price_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, submit_delay_ms_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, submit_delay_ms_),
           offsetof(Impl_, queue_submit_) -
               offsetof(Impl_, submit_delay_ms_) +
               sizeof(Impl_::queue_submit_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderActivation)
}
PROTOBUF_NDEBUG_INLINE OrderActivation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void OrderActivation::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, submit_time_),
           0,
           offsetof(Impl_, queue_submit_) -
               offsetof(Impl_, submit_time_) +
               sizeof(Impl_::queue_submit_));
}
OrderActivation::~OrderActivation() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderActivation)
  SharedDtor(*this);
}
inline void OrderActivation::SharedDtor(MessageLite& self) {
  OrderActivation& this_ = static_cast<OrderActivation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.submit_time_;
  delete this_._impl_.cancel_time_;
  delete this_._impl_.activation_cancel_time_;
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderActivation::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderActivation(arena);
}
constexpr auto OrderActivation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderActivation),
                                            alignof(OrderActivation));
}
constexpr auto OrderActivation::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderActivation_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderActivation::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderActivation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderActivation::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderActivation>(), &OrderActivation::ByteSizeLong,
              &OrderActivation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_._cached_size_),
          false,
      },
      &OrderActivation::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderActivation_class_data_ =
        OrderActivation::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderActivation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderActivation_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderActivation_class_data_.tc_table);
  return OrderActivation_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 4, 0, 2>
OrderActivation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderActivation_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderActivation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .google.protobuf.Timestamp submit_time = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.submit_time_)}},
    // optional int64 submit_delay_ms = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderActivation, _impl_.submit_delay_ms_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.submit_delay_ms_)}},
    // optional .google.protobuf.Timestamp cancel_time = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.cancel_time_)}},
    // optional int64 cancel_delay_ms = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderActivation, _impl_.cancel_delay_ms_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.cancel_delay_ms_)}},
    // optional .google.protobuf.Timestamp activation_cancel_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.activation_cancel_time_)}},
    // optional int64 activation_cancel_delay_ms = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderActivation, _impl_.activation_cancel_delay_ms_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.activation_cancel_delay_ms_)}},
    // optional .t4proto.v1.common.MarketMode mode = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderActivation, _impl_.mode_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.mode_)}},
    // optional .t4proto.v1.common.Price price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 3, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.price_)}},
    // optional int32 volume = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderActivation, _impl_.volume_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.volume_)}},
    // optional .t4proto.v1.common.BidOffer bid_offer = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderActivation, _impl_.bid_offer_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.bid_offer_)}},
    // optional bool implied = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderActivation, _impl_.implied_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.implied_)}},
    // optional bool queue_submit = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderActivation, _impl_.queue_submit_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.queue_submit_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .google.protobuf.Timestamp submit_time = 1;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.submit_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 submit_delay_ms = 2;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.submit_delay_ms_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .google.protobuf.Timestamp cancel_time = 3;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.cancel_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 cancel_delay_ms = 4;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.cancel_delay_ms_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .google.protobuf.Timestamp activation_cancel_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.activation_cancel_time_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int64 activation_cancel_delay_ms = 6;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.activation_cancel_delay_ms_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional .t4proto.v1.common.MarketMode mode = 7;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.mode_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .t4proto.v1.common.Price price = 8;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.price_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional int32 volume = 9;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.volume_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .t4proto.v1.common.BidOffer bid_offer = 10;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.bid_offer_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional bool implied = 11;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.implied_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool queue_submit = 12;
    {PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.queue_submit_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OrderActivation::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderActivation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.submit_time_ != nullptr);
      _impl_.submit_time_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.cancel_time_ != nullptr);
      _impl_.cancel_time_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.activation_cancel_time_ != nullptr);
      _impl_.activation_cancel_time_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000f0u) != 0) {
    ::memset(&_impl_.submit_delay_ms_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_) -
        reinterpret_cast<char*>(&_impl_.submit_delay_ms_)) + sizeof(_impl_.mode_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.queue_submit_) -
        reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.queue_submit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderActivation::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderActivation& this_ = static_cast<const OrderActivation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderActivation::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderActivation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderActivation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional .google.protobuf.Timestamp submit_time = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
        stream);
  }

  // optional int64 submit_delay_ms = 2;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
            stream, this_._internal_submit_delay_ms(), target);
  }

  // optional .google.protobuf.Timestamp cancel_time = 3;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.cancel_time_, this_._impl_.cancel_time_->GetCachedSize(), target,
        stream);
  }

  // optional int64 cancel_delay_ms = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
            stream, this_._internal_cancel_delay_ms(), target);
  }

  // optional .google.protobuf.Timestamp activation_cancel_time = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.activation_cancel_time_, this_._impl_.activation_cancel_time_->GetCachedSize(), target,
        stream);
  }

  // optional int64 activation_cancel_delay_ms = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
            stream, this_._internal_activation_cancel_delay_ms(), target);
  }

  // optional .t4proto.v1.common.MarketMode mode = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this_._internal_mode(), target);
  }

  // optional .t4proto.v1.common.Price price = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // optional int32 volume = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<9>(
            stream, this_._internal_volume(), target);
  }

  // optional .t4proto.v1.common.BidOffer bid_offer = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this_._internal_bid_offer(), target);
  }

  // optional bool implied = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        11, this_._internal_implied(), target);
  }

  // optional bool queue_submit = 12;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this_._internal_queue_submit(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderActivation)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderActivation::ByteSizeLong(const MessageLite& base) {
  const OrderActivation& this_ = static_cast<const OrderActivation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderActivation::ByteSizeLong() const {
  const OrderActivation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderActivation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000c00u & cached_has_bits) * 2;
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional .google.protobuf.Timestamp submit_time = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
    }
    // optional .google.protobuf.Timestamp cancel_time = 3;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cancel_time_);
    }
    // optional .google.protobuf.Timestamp activation_cancel_time = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activation_cancel_time_);
    }
    // optional .t4proto.v1.common.Price price = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // optional int64 submit_delay_ms = 2;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_submit_delay_ms());
    }
    // optional int64 cancel_delay_ms = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_cancel_delay_ms());
    }
    // optional int64 activation_cancel_delay_ms = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this_._internal_activation_cancel_delay_ms());
    }
    // optional .t4proto.v1.common.MarketMode mode = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_mode());
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // optional int32 volume = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_volume());
    }
    // optional .t4proto.v1.common.BidOffer bid_offer = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_bid_offer());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderActivation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderActivation*>(&to_msg);
  auto& from = static_cast<const OrderActivation&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderActivation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
      if (_this->_impl_.submit_time_ == nullptr) {
        _this->_impl_.submit_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.submit_time_);
      } else {
        _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.cancel_time_ != nullptr);
      if (_this->_impl_.cancel_time_ == nullptr) {
        _this->_impl_.cancel_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cancel_time_);
      } else {
        _this->_impl_.cancel_time_->MergeFrom(*from._impl_.cancel_time_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.activation_cancel_time_ != nullptr);
      if (_this->_impl_.activation_cancel_time_ == nullptr) {
        _this->_impl_.activation_cancel_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_cancel_time_);
      } else {
        _this->_impl_.activation_cancel_time_->MergeFrom(*from._impl_.activation_cancel_time_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _this->_impl_.submit_delay_ms_ = from._impl_.submit_delay_ms_;
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _this->_impl_.cancel_delay_ms_ = from._impl_.cancel_delay_ms_;
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.activation_cancel_delay_ms_ = from._impl_.activation_cancel_delay_ms_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _this->_impl_.volume_ = from._impl_.volume_;
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.bid_offer_ = from._impl_.bid_offer_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.implied_ = from._impl_.implied_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.queue_submit_ = from._impl_.queue_submit_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderActivation::CopyFrom(const OrderActivation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderActivation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderActivation::InternalSwap(OrderActivation* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.queue_submit_)
      + sizeof(OrderActivation::_impl_.queue_submit_)
      - PROTOBUF_FIELD_OFFSET(OrderActivation, _impl_.submit_time_)>(
          reinterpret_cast<char*>(&_impl_.submit_time_),
          reinterpret_cast<char*>(&other->_impl_.submit_time_));
}

::google::protobuf::Metadata OrderActivation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderSubmit_Order::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderSubmit_Order>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_._has_bits_);
};

void OrderSubmit_Order::clear_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_price_ != nullptr) _impl_.limit_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void OrderSubmit_Order::clear_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stop_price_ != nullptr) _impl_.stop_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderSubmit_Order::clear_trail_distance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trail_distance_ != nullptr) _impl_.trail_distance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
OrderSubmit_Order::OrderSubmit_Order(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderSubmit_Order_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderSubmit.Order)
}
PROTOBUF_NDEBUG_INLINE OrderSubmit_Order::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderSubmit_Order& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tag_(arena, from.tag_) {}

OrderSubmit_Order::OrderSubmit_Order(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderSubmit_Order& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderSubmit_Order_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderSubmit_Order* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.limit_price_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_)
                : nullptr;
  _impl_.stop_price_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_)
                : nullptr;
  _impl_.trail_distance_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_distance_)
                : nullptr;
  _impl_.activation_data_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_data_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buy_sell_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buy_sell_),
           offsetof(Impl_, activation_type_) -
               offsetof(Impl_, buy_sell_) +
               sizeof(Impl_::activation_type_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderSubmit.Order)
}
PROTOBUF_NDEBUG_INLINE OrderSubmit_Order::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tag_(arena) {}

inline void OrderSubmit_Order::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_price_),
           0,
           offsetof(Impl_, activation_type_) -
               offsetof(Impl_, limit_price_) +
               sizeof(Impl_::activation_type_));
}
OrderSubmit_Order::~OrderSubmit_Order() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderSubmit.Order)
  SharedDtor(*this);
}
inline void OrderSubmit_Order::SharedDtor(MessageLite& self) {
  OrderSubmit_Order& this_ = static_cast<OrderSubmit_Order&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tag_.Destroy();
  delete this_._impl_.limit_price_;
  delete this_._impl_.stop_price_;
  delete this_._impl_.trail_distance_;
  delete this_._impl_.activation_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderSubmit_Order::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderSubmit_Order(arena);
}
constexpr auto OrderSubmit_Order::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderSubmit_Order),
                                            alignof(OrderSubmit_Order));
}
constexpr auto OrderSubmit_Order::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderSubmit_Order_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderSubmit_Order::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderSubmit_Order>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderSubmit_Order::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderSubmit_Order>(), &OrderSubmit_Order::ByteSizeLong,
              &OrderSubmit_Order::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_._cached_size_),
          false,
      },
      &OrderSubmit_Order::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderSubmit_Order_class_data_ =
        OrderSubmit_Order::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderSubmit_Order::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderSubmit_Order_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderSubmit_Order_class_data_.tc_table);
  return OrderSubmit_Order_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 4, 61, 2>
OrderSubmit_Order::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderSubmit_Order_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderSubmit_Order>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .t4proto.v1.common.BuySell buy_sell = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.buy_sell_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.buy_sell_)}},
    // .t4proto.v1.common.PriceType price_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.price_type_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.price_type_)}},
    // .t4proto.v1.common.TimeType time_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.time_type_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.time_type_)}},
    // int32 volume = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.volume_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.volume_)}},
    // optional int32 max_show = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.max_show_), 9>(),
     {40, 9, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.max_show_)}},
    // optional int32 max_volume = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.max_volume_), 10>(),
     {48, 10, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.max_volume_)}},
    // optional .t4proto.v1.common.Price limit_price = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.limit_price_)}},
    // optional .t4proto.v1.common.Price stop_price = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 1, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.stop_price_)}},
    // optional .t4proto.v1.common.Price trail_distance = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 2, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.trail_distance_)}},
    // optional string tag = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.tag_)}},
    // optional .t4proto.v1.common.ActivationType activation_type = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit_Order, _impl_.activation_type_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.activation_type_)}},
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 4, 3, PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.activation_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .t4proto.v1.common.BuySell buy_sell = 1;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.buy_sell_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.PriceType price_type = 2;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.price_type_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.TimeType time_type = 3;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.time_type_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 volume = 4;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.volume_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_show = 5;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.max_show_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_volume = 6;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.max_volume_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .t4proto.v1.common.Price limit_price = 7;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.limit_price_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .t4proto.v1.common.Price stop_price = 8;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.stop_price_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .t4proto.v1.common.Price trail_distance = 9;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.trail_distance_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string tag = 10;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.tag_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .t4proto.v1.common.ActivationType activation_type = 11;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.activation_type_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 12;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.activation_data_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderActivation>()},
  }},
  {{
    "\51\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderSubmit.Order"
    "tag"
  }},
};
PROTOBUF_NOINLINE void OrderSubmit_Order::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderSubmit.Order)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.limit_price_ != nullptr);
      _impl_.limit_price_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.stop_price_ != nullptr);
      _impl_.stop_price_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.trail_distance_ != nullptr);
      _impl_.trail_distance_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.activation_data_ != nullptr);
      _impl_.activation_data_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000e0u) != 0) {
    ::memset(&_impl_.buy_sell_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.time_type_) -
        reinterpret_cast<char*>(&_impl_.buy_sell_)) + sizeof(_impl_.time_type_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.activation_type_) -
        reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.activation_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderSubmit_Order::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderSubmit_Order& this_ = static_cast<const OrderSubmit_Order&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderSubmit_Order::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderSubmit_Order& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderSubmit.Order)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .t4proto.v1.common.BuySell buy_sell = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_buy_sell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_buy_sell(), target);
    }
  }

  // .t4proto.v1.common.PriceType price_type = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_price_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          2, this_._internal_price_type(), target);
    }
  }

  // .t4proto.v1.common.TimeType time_type = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_time_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_time_type(), target);
    }
  }

  // int32 volume = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_volume(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 max_show = 5;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
            stream, this_._internal_max_show(), target);
  }

  // optional int32 max_volume = 6;
  if ((cached_has_bits & 0x00000400u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
            stream, this_._internal_max_volume(), target);
  }

  // optional .t4proto.v1.common.Price limit_price = 7;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.limit_price_, this_._impl_.limit_price_->GetCachedSize(), target,
        stream);
  }

  // optional .t4proto.v1.common.Price stop_price = 8;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.stop_price_, this_._impl_.stop_price_->GetCachedSize(), target,
        stream);
  }

  // optional .t4proto.v1.common.Price trail_distance = 9;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.trail_distance_, this_._impl_.trail_distance_->GetCachedSize(), target,
        stream);
  }

  // optional string tag = 10;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderSubmit.Order.tag");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // optional .t4proto.v1.common.ActivationType activation_type = 11;
  if ((cached_has_bits & 0x00000800u) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this_._internal_activation_type(), target);
  }

  // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 12;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.activation_data_, this_._impl_.activation_data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderSubmit.Order)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderSubmit_Order::ByteSizeLong(const MessageLite& base) {
  const OrderSubmit_Order& this_ = static_cast<const OrderSubmit_Order&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderSubmit_Order::ByteSizeLong() const {
  const OrderSubmit_Order& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderSubmit.Order)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // optional string tag = 10;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tag());
    }
    // optional .t4proto.v1.common.Price limit_price = 7;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_price_);
    }
    // optional .t4proto.v1.common.Price stop_price = 8;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stop_price_);
    }
    // optional .t4proto.v1.common.Price trail_distance = 9;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trail_distance_);
    }
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 12;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activation_data_);
    }
    // .t4proto.v1.common.BuySell buy_sell = 1;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_buy_sell() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_buy_sell());
      }
    }
    // .t4proto.v1.common.PriceType price_type = 2;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_price_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
      }
    }
    // .t4proto.v1.common.TimeType time_type = 3;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_time_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_time_type());
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    // int32 volume = 4;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
    // optional int32 max_show = 5;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_max_show());
    }
    // optional int32 max_volume = 6;
    if ((cached_has_bits & 0x00000400u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_max_volume());
    }
    // optional .t4proto.v1.common.ActivationType activation_type = 11;
    if ((cached_has_bits & 0x00000800u) != 0) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this_._internal_activation_type());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderSubmit_Order::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderSubmit_Order*>(&to_msg);
  auto& from = static_cast<const OrderSubmit_Order&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderSubmit.Order)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_tag(from._internal_tag());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.limit_price_ != nullptr);
      if (_this->_impl_.limit_price_ == nullptr) {
        _this->_impl_.limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_);
      } else {
        _this->_impl_.limit_price_->MergeFrom(*from._impl_.limit_price_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.stop_price_ != nullptr);
      if (_this->_impl_.stop_price_ == nullptr) {
        _this->_impl_.stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_);
      } else {
        _this->_impl_.stop_price_->MergeFrom(*from._impl_.stop_price_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.trail_distance_ != nullptr);
      if (_this->_impl_.trail_distance_ == nullptr) {
        _this->_impl_.trail_distance_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_distance_);
      } else {
        _this->_impl_.trail_distance_->MergeFrom(*from._impl_.trail_distance_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.activation_data_ != nullptr);
      if (_this->_impl_.activation_data_ == nullptr) {
        _this->_impl_.activation_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_data_);
      } else {
        _this->_impl_.activation_data_->MergeFrom(*from._impl_.activation_data_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_buy_sell() != 0) {
        _this->_impl_.buy_sell_ = from._impl_.buy_sell_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_price_type() != 0) {
        _this->_impl_.price_type_ = from._impl_.price_type_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_time_type() != 0) {
        _this->_impl_.time_type_ = from._impl_.time_type_;
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _this->_impl_.max_show_ = from._impl_.max_show_;
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _this->_impl_.max_volume_ = from._impl_.max_volume_;
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _this->_impl_.activation_type_ = from._impl_.activation_type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderSubmit_Order::CopyFrom(const OrderSubmit_Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderSubmit.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderSubmit_Order::InternalSwap(OrderSubmit_Order* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.activation_type_)
      + sizeof(OrderSubmit_Order::_impl_.activation_type_)
      - PROTOBUF_FIELD_OFFSET(OrderSubmit_Order, _impl_.limit_price_)>(
          reinterpret_cast<char*>(&_impl_.limit_price_),
          reinterpret_cast<char*>(&other->_impl_.limit_price_));
}

::google::protobuf::Metadata OrderSubmit_Order::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderSubmit::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderSubmit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_._has_bits_);
};

OrderSubmit::OrderSubmit(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderSubmit_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderSubmit)
}
PROTOBUF_NDEBUG_INLINE OrderSubmit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderSubmit& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        orders_{visibility, arena, from.orders_},
        user_id_(arena, from.user_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_) {}

OrderSubmit::OrderSubmit(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderSubmit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderSubmit_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderSubmit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, order_link_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, order_link_),
           offsetof(Impl_, manual_order_indicator_) -
               offsetof(Impl_, order_link_) +
               sizeof(Impl_::manual_order_indicator_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderSubmit)
}
PROTOBUF_NDEBUG_INLINE OrderSubmit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        orders_{visibility, arena},
        user_id_(arena),
        account_id_(arena),
        market_id_(arena) {}

inline void OrderSubmit::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, order_link_),
           0,
           offsetof(Impl_, manual_order_indicator_) -
               offsetof(Impl_, order_link_) +
               sizeof(Impl_::manual_order_indicator_));
}
OrderSubmit::~OrderSubmit() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderSubmit)
  SharedDtor(*this);
}
inline void OrderSubmit::SharedDtor(MessageLite& self) {
  OrderSubmit& this_ = static_cast<OrderSubmit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderSubmit::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderSubmit(arena);
}
constexpr auto OrderSubmit::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.orders_) +
          decltype(OrderSubmit::_impl_.orders_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderSubmit), alignof(OrderSubmit), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderSubmit::PlacementNew_,
                                 sizeof(OrderSubmit),
                                 alignof(OrderSubmit));
  }
}
constexpr auto OrderSubmit::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderSubmit_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderSubmit::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderSubmit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderSubmit::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderSubmit>(), &OrderSubmit::ByteSizeLong,
              &OrderSubmit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_._cached_size_),
          false,
      },
      &OrderSubmit::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderSubmit_class_data_ =
        OrderSubmit::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderSubmit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderSubmit_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderSubmit_class_data_.tc_table);
  return OrderSubmit_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 70, 2>
OrderSubmit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderSubmit_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderSubmit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.user_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.market_id_)}},
    // .t4proto.v1.common.OrderLink order_link = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderSubmit, _impl_.order_link_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.order_link_)}},
    // bool manual_order_indicator = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderSubmit, _impl_.manual_order_indicator_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.manual_order_indicator_)}},
    // repeated .t4proto.v1.orderrouting.OrderSubmit.Order orders = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.orders_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.OrderLink order_link = 4;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.order_link_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool manual_order_indicator = 5;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.manual_order_indicator_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .t4proto.v1.orderrouting.OrderSubmit.Order orders = 6;
    {PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.orders_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderSubmit_Order>()},
  }},
  {{
    "\43\7\12\11\0\0\0\0"
    "t4proto.v1.orderrouting.OrderSubmit"
    "user_id"
    "account_id"
    "market_id"
  }},
};
PROTOBUF_NOINLINE void OrderSubmit::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderSubmit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orders_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.order_link_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.manual_order_indicator_) -
        reinterpret_cast<char*>(&_impl_.order_link_)) + sizeof(_impl_.manual_order_indicator_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderSubmit::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderSubmit& this_ = static_cast<const OrderSubmit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderSubmit::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderSubmit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderSubmit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string user_id = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    const ::std::string& _s = this_._internal_user_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderSubmit.user_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string account_id = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderSubmit.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderSubmit.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .t4proto.v1.common.OrderLink order_link = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_order_link() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_order_link(), target);
    }
  }

  // bool manual_order_indicator = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_manual_order_indicator() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_manual_order_indicator(), target);
    }
  }

  // repeated .t4proto.v1.orderrouting.OrderSubmit.Order orders = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_orders_size());
       i < n; i++) {
    const auto& repfield = this_._internal_orders().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderSubmit)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderSubmit::ByteSizeLong(const MessageLite& base) {
  const OrderSubmit& this_ = static_cast<const OrderSubmit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderSubmit::ByteSizeLong() const {
  const OrderSubmit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderSubmit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .t4proto.v1.orderrouting.OrderSubmit.Order orders = 6;
    {
      total_size += 1UL * this_._internal_orders_size();
      for (const auto& msg : this_._internal_orders()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // optional string user_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_user_id());
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // .t4proto.v1.common.OrderLink order_link = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_order_link() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_order_link());
      }
    }
    // bool manual_order_indicator = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_manual_order_indicator() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderSubmit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderSubmit*>(&to_msg);
  auto& from = static_cast<const OrderSubmit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderSubmit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_orders()->MergeFrom(
      from._internal_orders());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _this->_internal_set_user_id(from._internal_user_id());
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_order_link() != 0) {
        _this->_impl_.order_link_ = from._impl_.order_link_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_manual_order_indicator() != 0) {
        _this->_impl_.manual_order_indicator_ = from._impl_.manual_order_indicator_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderSubmit::CopyFrom(const OrderSubmit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderSubmit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderSubmit::InternalSwap(OrderSubmit* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.orders_.InternalSwap(&other->_impl_.orders_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.manual_order_indicator_)
      + sizeof(OrderSubmit::_impl_.manual_order_indicator_)
      - PROTOBUF_FIELD_OFFSET(OrderSubmit, _impl_.order_link_)>(
          reinterpret_cast<char*>(&_impl_.order_link_),
          reinterpret_cast<char*>(&other->_impl_.order_link_));
}

::google::protobuf::Metadata OrderSubmit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderRevise_Revise::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderRevise_Revise>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_._has_bits_);
};

void OrderRevise_Revise::clear_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.limit_price_ != nullptr) _impl_.limit_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void OrderRevise_Revise::clear_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.stop_price_ != nullptr) _impl_.stop_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderRevise_Revise::clear_trail_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trail_price_ != nullptr) _impl_.trail_price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
OrderRevise_Revise::OrderRevise_Revise(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRevise_Revise_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderRevise.Revise)
}
PROTOBUF_NDEBUG_INLINE OrderRevise_Revise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderRevise_Revise& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unique_id_(arena, from.unique_id_),
        tag_(arena, from.tag_) {}

OrderRevise_Revise::OrderRevise_Revise(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderRevise_Revise& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRevise_Revise_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderRevise_Revise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.limit_price_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_)
                : nullptr;
  _impl_.stop_price_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_)
                : nullptr;
  _impl_.trail_price_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_)
                : nullptr;
  _impl_.activation_data_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_data_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, volume_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, volume_),
           offsetof(Impl_, max_volume_) -
               offsetof(Impl_, volume_) +
               sizeof(Impl_::max_volume_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderRevise.Revise)
}
PROTOBUF_NDEBUG_INLINE OrderRevise_Revise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unique_id_(arena),
        tag_(arena) {}

inline void OrderRevise_Revise::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, limit_price_),
           0,
           offsetof(Impl_, max_volume_) -
               offsetof(Impl_, limit_price_) +
               sizeof(Impl_::max_volume_));
}
OrderRevise_Revise::~OrderRevise_Revise() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderRevise.Revise)
  SharedDtor(*this);
}
inline void OrderRevise_Revise::SharedDtor(MessageLite& self) {
  OrderRevise_Revise& this_ = static_cast<OrderRevise_Revise&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.tag_.Destroy();
  delete this_._impl_.limit_price_;
  delete this_._impl_.stop_price_;
  delete this_._impl_.trail_price_;
  delete this_._impl_.activation_data_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderRevise_Revise::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderRevise_Revise(arena);
}
constexpr auto OrderRevise_Revise::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderRevise_Revise),
                                            alignof(OrderRevise_Revise));
}
constexpr auto OrderRevise_Revise::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderRevise_Revise_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderRevise_Revise::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderRevise_Revise>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderRevise_Revise::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderRevise_Revise>(), &OrderRevise_Revise::ByteSizeLong,
              &OrderRevise_Revise::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_._cached_size_),
          false,
      },
      &OrderRevise_Revise::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderRevise_Revise_class_data_ =
        OrderRevise_Revise::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderRevise_Revise::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderRevise_Revise_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderRevise_Revise_class_data_.tc_table);
  return OrderRevise_Revise_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 4, 71, 2>
OrderRevise_Revise::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderRevise_Revise_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderRevise_Revise>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.unique_id_)}},
    // optional int32 volume = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRevise_Revise, _impl_.volume_), 6>(),
     {16, 6, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.volume_)}},
    // optional int32 max_show = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRevise_Revise, _impl_.max_show_), 7>(),
     {24, 7, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.max_show_)}},
    // optional int32 max_volume = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderRevise_Revise, _impl_.max_volume_), 8>(),
     {32, 8, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.max_volume_)}},
    // optional .t4proto.v1.common.Price limit_price = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.limit_price_)}},
    // optional .t4proto.v1.common.Price stop_price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 1, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.stop_price_)}},
    // optional .t4proto.v1.common.Price trail_price = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 2, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.trail_price_)}},
    // optional string tag = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.tag_)}},
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 3, PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.activation_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 volume = 2;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.volume_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_show = 3;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.max_show_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 max_volume = 4;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.max_volume_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .t4proto.v1.common.Price limit_price = 5;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.limit_price_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .t4proto.v1.common.Price stop_price = 6;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.stop_price_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .t4proto.v1.common.Price trail_price = 7;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.trail_price_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string tag = 8;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.tag_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 9;
    {PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.activation_data_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderActivation>()},
  }},
  {{
    "\52\11\0\0\0\0\0\0\3\0\0\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderRevise.Revise"
    "unique_id"
    "tag"
  }},
};
PROTOBUF_NOINLINE void OrderRevise_Revise::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderRevise.Revise)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.limit_price_ != nullptr);
      _impl_.limit_price_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.stop_price_ != nullptr);
      _impl_.stop_price_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.trail_price_ != nullptr);
      _impl_.trail_price_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.activation_data_ != nullptr);
      _impl_.activation_data_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_show_) -
        reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.max_show_));
  }
  _impl_.max_volume_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderRevise_Revise::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderRevise_Revise& this_ = static_cast<const OrderRevise_Revise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderRevise_Revise::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderRevise_Revise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderRevise.Revise)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderRevise.Revise.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 volume = 2;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
            stream, this_._internal_volume(), target);
  }

  // optional int32 max_show = 3;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
            stream, this_._internal_max_show(), target);
  }

  // optional int32 max_volume = 4;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_max_volume(), target);
  }

  // optional .t4proto.v1.common.Price limit_price = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.limit_price_, this_._impl_.limit_price_->GetCachedSize(), target,
        stream);
  }

  // optional .t4proto.v1.common.Price stop_price = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.stop_price_, this_._impl_.stop_price_->GetCachedSize(), target,
        stream);
  }

  // optional .t4proto.v1.common.Price trail_price = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.trail_price_, this_._impl_.trail_price_->GetCachedSize(), target,
        stream);
  }

  // optional string tag = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderRevise.Revise.tag");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 9;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.activation_data_, this_._impl_.activation_data_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderRevise.Revise)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderRevise_Revise::ByteSizeLong(const MessageLite& base) {
  const OrderRevise_Revise& this_ = static_cast<const OrderRevise_Revise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderRevise_Revise::ByteSizeLong() const {
  const OrderRevise_Revise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderRevise.Revise)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // optional string tag = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tag());
    }
    // optional .t4proto.v1.common.Price limit_price = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.limit_price_);
    }
    // optional .t4proto.v1.common.Price stop_price = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.stop_price_);
    }
    // optional .t4proto.v1.common.Price trail_price = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trail_price_);
    }
    // optional .t4proto.v1.orderrouting.OrderActivation activation_data = 9;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.activation_data_);
    }
    // optional int32 volume = 2;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_volume());
    }
    // optional int32 max_show = 3;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_max_show());
    }
  }
   {
    // optional int32 max_volume = 4;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_max_volume());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderRevise_Revise::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderRevise_Revise*>(&to_msg);
  auto& from = static_cast<const OrderRevise_Revise&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderRevise.Revise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_tag(from._internal_tag());
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.limit_price_ != nullptr);
      if (_this->_impl_.limit_price_ == nullptr) {
        _this->_impl_.limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.limit_price_);
      } else {
        _this->_impl_.limit_price_->MergeFrom(*from._impl_.limit_price_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.stop_price_ != nullptr);
      if (_this->_impl_.stop_price_ == nullptr) {
        _this->_impl_.stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.stop_price_);
      } else {
        _this->_impl_.stop_price_->MergeFrom(*from._impl_.stop_price_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.trail_price_ != nullptr);
      if (_this->_impl_.trail_price_ == nullptr) {
        _this->_impl_.trail_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_);
      } else {
        _this->_impl_.trail_price_->MergeFrom(*from._impl_.trail_price_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.activation_data_ != nullptr);
      if (_this->_impl_.activation_data_ == nullptr) {
        _this->_impl_.activation_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.activation_data_);
      } else {
        _this->_impl_.activation_data_->MergeFrom(*from._impl_.activation_data_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _this->_impl_.volume_ = from._impl_.volume_;
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _this->_impl_.max_show_ = from._impl_.max_show_;
    }
  }
  if ((cached_has_bits & 0x00000100u) != 0) {
    _this->_impl_.max_volume_ = from._impl_.max_volume_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRevise_Revise::CopyFrom(const OrderRevise_Revise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderRevise.Revise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderRevise_Revise::InternalSwap(OrderRevise_Revise* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.max_volume_)
      + sizeof(OrderRevise_Revise::_impl_.max_volume_)
      - PROTOBUF_FIELD_OFFSET(OrderRevise_Revise, _impl_.limit_price_)>(
          reinterpret_cast<char*>(&_impl_.limit_price_),
          reinterpret_cast<char*>(&other->_impl_.limit_price_));
}

::google::protobuf::Metadata OrderRevise_Revise::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderRevise::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderRevise>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_._has_bits_);
};

OrderRevise::OrderRevise(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRevise_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderRevise)
}
PROTOBUF_NDEBUG_INLINE OrderRevise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderRevise& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        revisions_{visibility, arena, from.revisions_},
        user_id_(arena, from.user_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_) {}

OrderRevise::OrderRevise(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderRevise& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderRevise_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderRevise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.manual_order_indicator_ = from._impl_.manual_order_indicator_;

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderRevise)
}
PROTOBUF_NDEBUG_INLINE OrderRevise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        revisions_{visibility, arena},
        user_id_(arena),
        account_id_(arena),
        market_id_(arena) {}

inline void OrderRevise::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.manual_order_indicator_ = {};
}
OrderRevise::~OrderRevise() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderRevise)
  SharedDtor(*this);
}
inline void OrderRevise::SharedDtor(MessageLite& self) {
  OrderRevise& this_ = static_cast<OrderRevise&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderRevise::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderRevise(arena);
}
constexpr auto OrderRevise::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.revisions_) +
          decltype(OrderRevise::_impl_.revisions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderRevise), alignof(OrderRevise), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderRevise::PlacementNew_,
                                 sizeof(OrderRevise),
                                 alignof(OrderRevise));
  }
}
constexpr auto OrderRevise::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderRevise_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderRevise::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderRevise>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderRevise::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderRevise>(), &OrderRevise::ByteSizeLong,
              &OrderRevise::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_._cached_size_),
          false,
      },
      &OrderRevise::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderRevise_class_data_ =
        OrderRevise::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderRevise::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderRevise_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderRevise_class_data_.tc_table);
  return OrderRevise_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 70, 2>
OrderRevise::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderRevise_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderRevise>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.user_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.market_id_)}},
    // bool manual_order_indicator = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderRevise, _impl_.manual_order_indicator_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.manual_order_indicator_)}},
    // repeated .t4proto.v1.orderrouting.OrderRevise.Revise revisions = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.revisions_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool manual_order_indicator = 4;
    {PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.manual_order_indicator_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .t4proto.v1.orderrouting.OrderRevise.Revise revisions = 5;
    {PROTOBUF_FIELD_OFFSET(OrderRevise, _impl_.revisions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderRevise_Revise>()},
  }},
  {{
    "\43\7\12\11\0\0\0\0"
    "t4proto.v1.orderrouting.OrderRevise"
    "user_id"
    "account_id"
    "market_id"
  }},
};
PROTOBUF_NOINLINE void OrderRevise::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderRevise)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.revisions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.manual_order_indicator_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderRevise::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderRevise& this_ = static_cast<const OrderRevise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderRevise::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderRevise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderRevise)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderRevise.user_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderRevise.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderRevise.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bool manual_order_indicator = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_manual_order_indicator() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_manual_order_indicator(), target);
    }
  }

  // repeated .t4proto.v1.orderrouting.OrderRevise.Revise revisions = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_revisions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_revisions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderRevise)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderRevise::ByteSizeLong(const MessageLite& base) {
  const OrderRevise& this_ = static_cast<const OrderRevise&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderRevise::ByteSizeLong() const {
  const OrderRevise& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderRevise)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .t4proto.v1.orderrouting.OrderRevise.Revise revisions = 5;
    {
      total_size += 1UL * this_._internal_revisions_size();
      for (const auto& msg : this_._internal_revisions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string user_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // bool manual_order_indicator = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_manual_order_indicator() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderRevise::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderRevise*>(&to_msg);
  auto& from = static_cast<const OrderRevise&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderRevise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_revisions()->MergeFrom(
      from._internal_revisions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_manual_order_indicator() != 0) {
        _this->_impl_.manual_order_indicator_ = from._impl_.manual_order_indicator_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderRevise::CopyFrom(const OrderRevise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderRevise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderRevise::InternalSwap(OrderRevise* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.revisions_.InternalSwap(&other->_impl_.revisions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  swap(_impl_.manual_order_indicator_, other->_impl_.manual_order_indicator_);
}

::google::protobuf::Metadata OrderRevise::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderPull_Pull::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderPull_Pull>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_._has_bits_);
};

OrderPull_Pull::OrderPull_Pull(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderPull_Pull_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderPull.Pull)
}
PROTOBUF_NDEBUG_INLINE OrderPull_Pull::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderPull_Pull& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unique_id_(arena, from.unique_id_),
        tag_(arena, from.tag_) {}

OrderPull_Pull::OrderPull_Pull(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderPull_Pull& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderPull_Pull_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderPull_Pull* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderPull.Pull)
}
PROTOBUF_NDEBUG_INLINE OrderPull_Pull::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unique_id_(arena),
        tag_(arena) {}

inline void OrderPull_Pull::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrderPull_Pull::~OrderPull_Pull() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderPull.Pull)
  SharedDtor(*this);
}
inline void OrderPull_Pull::SharedDtor(MessageLite& self) {
  OrderPull_Pull& this_ = static_cast<OrderPull_Pull&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.tag_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderPull_Pull::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderPull_Pull(arena);
}
constexpr auto OrderPull_Pull::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderPull_Pull),
                                            alignof(OrderPull_Pull));
}
constexpr auto OrderPull_Pull::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderPull_Pull_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderPull_Pull::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderPull_Pull>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderPull_Pull::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderPull_Pull>(), &OrderPull_Pull::ByteSizeLong,
              &OrderPull_Pull::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_._cached_size_),
          false,
      },
      &OrderPull_Pull::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderPull_Pull_class_data_ =
        OrderPull_Pull::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderPull_Pull::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderPull_Pull_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderPull_Pull_class_data_.tc_table);
  return OrderPull_Pull_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
OrderPull_Pull::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderPull_Pull_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderPull_Pull>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string tag = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_.tag_)}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_.unique_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string tag = 2;
    {PROTOBUF_FIELD_OFFSET(OrderPull_Pull, _impl_.tag_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\11\3\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderPull.Pull"
    "unique_id"
    "tag"
  }},
};
PROTOBUF_NOINLINE void OrderPull_Pull::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderPull.Pull)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderPull_Pull::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderPull_Pull& this_ = static_cast<const OrderPull_Pull&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderPull_Pull::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderPull_Pull& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderPull.Pull)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderPull.Pull.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional string tag = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    const ::std::string& _s = this_._internal_tag();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderPull.Pull.tag");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderPull.Pull)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderPull_Pull::ByteSizeLong(const MessageLite& base) {
  const OrderPull_Pull& this_ = static_cast<const OrderPull_Pull&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderPull_Pull::ByteSizeLong() const {
  const OrderPull_Pull& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderPull.Pull)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // optional string tag = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_tag());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderPull_Pull::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderPull_Pull*>(&to_msg);
  auto& from = static_cast<const OrderPull_Pull&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderPull.Pull)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _this->_internal_set_tag(from._internal_tag());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderPull_Pull::CopyFrom(const OrderPull_Pull& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderPull.Pull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderPull_Pull::InternalSwap(OrderPull_Pull* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
}

::google::protobuf::Metadata OrderPull_Pull::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderPull::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderPull>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderPull, _impl_._has_bits_);
};

OrderPull::OrderPull(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderPull_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderPull)
}
PROTOBUF_NDEBUG_INLINE OrderPull::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderPull& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pulls_{visibility, arena, from.pulls_},
        user_id_(arena, from.user_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_) {}

OrderPull::OrderPull(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderPull& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderPull_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderPull* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.manual_order_indicator_ = from._impl_.manual_order_indicator_;

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderPull)
}
PROTOBUF_NDEBUG_INLINE OrderPull::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        pulls_{visibility, arena},
        user_id_(arena),
        account_id_(arena),
        market_id_(arena) {}

inline void OrderPull::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.manual_order_indicator_ = {};
}
OrderPull::~OrderPull() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderPull)
  SharedDtor(*this);
}
inline void OrderPull::SharedDtor(MessageLite& self) {
  OrderPull& this_ = static_cast<OrderPull&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderPull::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderPull(arena);
}
constexpr auto OrderPull::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.pulls_) +
          decltype(OrderPull::_impl_.pulls_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderPull), alignof(OrderPull), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderPull::PlacementNew_,
                                 sizeof(OrderPull),
                                 alignof(OrderPull));
  }
}
constexpr auto OrderPull::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderPull_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderPull::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderPull>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderPull::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderPull>(), &OrderPull::ByteSizeLong,
              &OrderPull::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderPull, _impl_._cached_size_),
          false,
      },
      &OrderPull::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderPull_class_data_ =
        OrderPull::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderPull::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderPull_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderPull_class_data_.tc_table);
  return OrderPull_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 68, 2>
OrderPull::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderPull, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderPull_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderPull>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.user_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.market_id_)}},
    // bool manual_order_indicator = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderPull, _impl_.manual_order_indicator_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.manual_order_indicator_)}},
    // repeated .t4proto.v1.orderrouting.OrderPull.Pull pulls = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.pulls_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool manual_order_indicator = 4;
    {PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.manual_order_indicator_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .t4proto.v1.orderrouting.OrderPull.Pull pulls = 5;
    {PROTOBUF_FIELD_OFFSET(OrderPull, _impl_.pulls_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderPull_Pull>()},
  }},
  {{
    "\41\7\12\11\0\0\0\0"
    "t4proto.v1.orderrouting.OrderPull"
    "user_id"
    "account_id"
    "market_id"
  }},
};
PROTOBUF_NOINLINE void OrderPull::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderPull)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pulls_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.manual_order_indicator_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderPull::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderPull& this_ = static_cast<const OrderPull&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderPull::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderPull& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderPull)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderPull.user_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderPull.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderPull.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bool manual_order_indicator = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_manual_order_indicator() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_manual_order_indicator(), target);
    }
  }

  // repeated .t4proto.v1.orderrouting.OrderPull.Pull pulls = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_pulls_size());
       i < n; i++) {
    const auto& repfield = this_._internal_pulls().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderPull)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderPull::ByteSizeLong(const MessageLite& base) {
  const OrderPull& this_ = static_cast<const OrderPull&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderPull::ByteSizeLong() const {
  const OrderPull& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderPull)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .t4proto.v1.orderrouting.OrderPull.Pull pulls = 5;
    {
      total_size += 1UL * this_._internal_pulls_size();
      for (const auto& msg : this_._internal_pulls()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string user_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // bool manual_order_indicator = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_manual_order_indicator() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderPull::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderPull*>(&to_msg);
  auto& from = static_cast<const OrderPull&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderPull)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pulls()->MergeFrom(
      from._internal_pulls());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_manual_order_indicator() != 0) {
        _this->_impl_.manual_order_indicator_ = from._impl_.manual_order_indicator_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderPull::CopyFrom(const OrderPull& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderPull)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderPull::InternalSwap(OrderPull* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pulls_.InternalSwap(&other->_impl_.pulls_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  swap(_impl_.manual_order_indicator_, other->_impl_.manual_order_indicator_);
}

::google::protobuf::Metadata OrderPull::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateUDS_Leg::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateUDS_Leg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_._has_bits_);
};

void CreateUDS_Leg::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void CreateUDS_Leg::clear_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.delta_ != nullptr) _impl_.delta_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
CreateUDS_Leg::CreateUDS_Leg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDS_Leg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.CreateUDS.Leg)
}
PROTOBUF_NDEBUG_INLINE CreateUDS_Leg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::CreateUDS_Leg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exchange_id_(arena, from.exchange_id_),
        contract_id_(arena, from.contract_id_),
        market_id_(arena, from.market_id_) {}

CreateUDS_Leg::CreateUDS_Leg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateUDS_Leg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDS_Leg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateUDS_Leg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  _impl_.delta_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.delta_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, buy_sell_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, buy_sell_),
           offsetof(Impl_, volume_) -
               offsetof(Impl_, buy_sell_) +
               sizeof(Impl_::volume_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.CreateUDS.Leg)
}
PROTOBUF_NDEBUG_INLINE CreateUDS_Leg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exchange_id_(arena),
        contract_id_(arena),
        market_id_(arena) {}

inline void CreateUDS_Leg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, volume_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::volume_));
}
CreateUDS_Leg::~CreateUDS_Leg() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.CreateUDS.Leg)
  SharedDtor(*this);
}
inline void CreateUDS_Leg::SharedDtor(MessageLite& self) {
  CreateUDS_Leg& this_ = static_cast<CreateUDS_Leg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.exchange_id_.Destroy();
  this_._impl_.contract_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.delta_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateUDS_Leg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateUDS_Leg(arena);
}
constexpr auto CreateUDS_Leg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateUDS_Leg),
                                            alignof(CreateUDS_Leg));
}
constexpr auto CreateUDS_Leg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateUDS_Leg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateUDS_Leg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateUDS_Leg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateUDS_Leg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateUDS_Leg>(), &CreateUDS_Leg::ByteSizeLong,
              &CreateUDS_Leg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_._cached_size_),
          false,
      },
      &CreateUDS_Leg::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateUDS_Leg_class_data_ =
        CreateUDS_Leg::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateUDS_Leg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateUDS_Leg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateUDS_Leg_class_data_.tc_table);
  return CreateUDS_Leg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 77, 2>
CreateUDS_Leg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateUDS_Leg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDS_Leg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string exchange_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.exchange_id_)}},
    // string contract_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.contract_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.market_id_)}},
    // .t4proto.v1.common.BuySell buy_sell = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateUDS_Leg, _impl_.buy_sell_), 5>(),
     {32, 5, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.buy_sell_)}},
    // int32 volume = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateUDS_Leg, _impl_.volume_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.volume_)}},
    // .t4proto.v1.common.Price price = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.price_)}},
    // .t4proto.v1.common.Decimal delta = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 1, PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.delta_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string exchange_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.exchange_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_id = 2;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.contract_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.BuySell buy_sell = 4;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.buy_sell_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 volume = 5;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.volume_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price price = 6;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.Decimal delta = 7;
    {PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.delta_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Decimal>()},
  }},
  {{
    "\45\13\13\11\0\0\0\0"
    "t4proto.v1.orderrouting.CreateUDS.Leg"
    "exchange_id"
    "contract_id"
    "market_id"
  }},
};
PROTOBUF_NOINLINE void CreateUDS_Leg::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.CreateUDS.Leg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.exchange_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.contract_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.delta_ != nullptr);
      _impl_.delta_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060u) != 0) {
    ::memset(&_impl_.buy_sell_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.volume_) -
        reinterpret_cast<char*>(&_impl_.buy_sell_)) + sizeof(_impl_.volume_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateUDS_Leg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateUDS_Leg& this_ = static_cast<const CreateUDS_Leg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateUDS_Leg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateUDS_Leg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.CreateUDS.Leg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string exchange_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_exchange_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.Leg.exchange_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string contract_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_contract_id().empty()) {
      const ::std::string& _s = this_._internal_contract_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.Leg.contract_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.Leg.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .t4proto.v1.common.BuySell buy_sell = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_buy_sell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_buy_sell(), target);
    }
  }

  // int32 volume = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_volume(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .t4proto.v1.common.Price price = 6;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.Decimal delta = 7;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.delta_, this_._impl_.delta_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.CreateUDS.Leg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateUDS_Leg::ByteSizeLong(const MessageLite& base) {
  const CreateUDS_Leg& this_ = static_cast<const CreateUDS_Leg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateUDS_Leg::ByteSizeLong() const {
  const CreateUDS_Leg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.CreateUDS.Leg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string exchange_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_exchange_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_id());
      }
    }
    // string contract_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_contract_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contract_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // .t4proto.v1.common.Price price = 6;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // .t4proto.v1.common.Decimal delta = 7;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.delta_);
    }
    // .t4proto.v1.common.BuySell buy_sell = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_buy_sell() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_buy_sell());
      }
    }
    // int32 volume = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateUDS_Leg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateUDS_Leg*>(&to_msg);
  auto& from = static_cast<const CreateUDS_Leg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.CreateUDS.Leg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_exchange_id().empty()) {
        _this->_internal_set_exchange_id(from._internal_exchange_id());
      } else {
        if (_this->_impl_.exchange_id_.IsDefault()) {
          _this->_internal_set_exchange_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_contract_id().empty()) {
        _this->_internal_set_contract_id(from._internal_contract_id());
      } else {
        if (_this->_impl_.contract_id_.IsDefault()) {
          _this->_internal_set_contract_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.delta_ != nullptr);
      if (_this->_impl_.delta_ == nullptr) {
        _this->_impl_.delta_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.delta_);
      } else {
        _this->_impl_.delta_->MergeFrom(*from._impl_.delta_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_buy_sell() != 0) {
        _this->_impl_.buy_sell_ = from._impl_.buy_sell_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUDS_Leg::CopyFrom(const CreateUDS_Leg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.CreateUDS.Leg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateUDS_Leg::InternalSwap(CreateUDS_Leg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_id_, &other->_impl_.exchange_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_id_, &other->_impl_.contract_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.volume_)
      + sizeof(CreateUDS_Leg::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(CreateUDS_Leg, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata CreateUDS_Leg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateUDS::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateUDS>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_._has_bits_);
};

CreateUDS::CreateUDS(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDS_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.CreateUDS)
}
PROTOBUF_NDEBUG_INLINE CreateUDS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::CreateUDS& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        legs_{visibility, arena, from.legs_},
        request_id_(arena, from.request_id_),
        user_id_(arena, from.user_id_),
        account_id_(arena, from.account_id_) {}

CreateUDS::CreateUDS(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateUDS& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDS_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateUDS* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.strategy_type_ = from._impl_.strategy_type_;

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.CreateUDS)
}
PROTOBUF_NDEBUG_INLINE CreateUDS::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        legs_{visibility, arena},
        request_id_(arena),
        user_id_(arena),
        account_id_(arena) {}

inline void CreateUDS::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.strategy_type_ = {};
}
CreateUDS::~CreateUDS() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.CreateUDS)
  SharedDtor(*this);
}
inline void CreateUDS::SharedDtor(MessageLite& self) {
  CreateUDS& this_ = static_cast<CreateUDS&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateUDS::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateUDS(arena);
}
constexpr auto CreateUDS::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.legs_) +
          decltype(CreateUDS::_impl_.legs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(CreateUDS), alignof(CreateUDS), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CreateUDS::PlacementNew_,
                                 sizeof(CreateUDS),
                                 alignof(CreateUDS));
  }
}
constexpr auto CreateUDS::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateUDS_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateUDS::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateUDS>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateUDS::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateUDS>(), &CreateUDS::ByteSizeLong,
              &CreateUDS::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_._cached_size_),
          false,
      },
      &CreateUDS::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateUDS_class_data_ =
        CreateUDS::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateUDS::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateUDS_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateUDS_class_data_.tc_table);
  return CreateUDS_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 69, 2>
CreateUDS::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateUDS_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDS>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.request_id_)}},
    // string user_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.user_id_)}},
    // string account_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.account_id_)}},
    // .t4proto.v1.common.StrategyType strategy_type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateUDS, _impl_.strategy_type_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.strategy_type_)}},
    // repeated .t4proto.v1.orderrouting.CreateUDS.Leg legs = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.legs_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 2;
    {PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.user_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 3;
    {PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.account_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.StrategyType strategy_type = 4;
    {PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.strategy_type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .t4proto.v1.orderrouting.CreateUDS.Leg legs = 5;
    {PROTOBUF_FIELD_OFFSET(CreateUDS, _impl_.legs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDS_Leg>()},
  }},
  {{
    "\41\12\7\12\0\0\0\0"
    "t4proto.v1.orderrouting.CreateUDS"
    "request_id"
    "user_id"
    "account_id"
  }},
};
PROTOBUF_NOINLINE void CreateUDS::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.CreateUDS)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.legs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.request_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.strategy_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateUDS::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateUDS& this_ = static_cast<const CreateUDS&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateUDS::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateUDS& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.CreateUDS)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string request_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_request_id().empty()) {
      const ::std::string& _s = this_._internal_request_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.request_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string user_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.user_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string account_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDS.account_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .t4proto.v1.common.StrategyType strategy_type = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_strategy_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_strategy_type(), target);
    }
  }

  // repeated .t4proto.v1.orderrouting.CreateUDS.Leg legs = 5;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_legs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_legs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.CreateUDS)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateUDS::ByteSizeLong(const MessageLite& base) {
  const CreateUDS& this_ = static_cast<const CreateUDS&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateUDS::ByteSizeLong() const {
  const CreateUDS& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.CreateUDS)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .t4proto.v1.orderrouting.CreateUDS.Leg legs = 5;
    {
      total_size += 1UL * this_._internal_legs_size();
      for (const auto& msg : this_._internal_legs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string request_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_request_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_request_id());
      }
    }
    // string user_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string account_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // .t4proto.v1.common.StrategyType strategy_type = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_strategy_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_strategy_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateUDS::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateUDS*>(&to_msg);
  auto& from = static_cast<const CreateUDS&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.CreateUDS)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_legs()->MergeFrom(
      from._internal_legs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_request_id().empty()) {
        _this->_internal_set_request_id(from._internal_request_id());
      } else {
        if (_this->_impl_.request_id_.IsDefault()) {
          _this->_internal_set_request_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_strategy_type() != 0) {
        _this->_impl_.strategy_type_ = from._impl_.strategy_type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUDS::CopyFrom(const CreateUDS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.CreateUDS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateUDS::InternalSwap(CreateUDS* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.legs_.InternalSwap(&other->_impl_.legs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.strategy_type_, other->_impl_.strategy_type_);
}

::google::protobuf::Metadata CreateUDS::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdateFailed::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdateFailed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_._has_bits_);
};

void OrderUpdateFailed::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
void OrderUpdateFailed::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
OrderUpdateFailed::OrderUpdateFailed(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateFailed_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateFailed)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateFailed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateFailed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unique_id_(arena, from.unique_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_),
        status_detail_(arena, from.status_detail_),
        tag_cl_ord_id_(arena, from.tag_cl_ord_id_) {}

OrderUpdateFailed::OrderUpdateFailed(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateFailed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateFailed_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateFailed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, change_),
           offsetof(Impl_, sequence_order_) -
               offsetof(Impl_, change_) +
               sizeof(Impl_::sequence_order_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateFailed)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateFailed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unique_id_(arena),
        account_id_(arena),
        market_id_(arena),
        status_detail_(arena),
        tag_cl_ord_id_(arena) {}

inline void OrderUpdateFailed::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, sequence_order_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::sequence_order_));
}
OrderUpdateFailed::~OrderUpdateFailed() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateFailed)
  SharedDtor(*this);
}
inline void OrderUpdateFailed::SharedDtor(MessageLite& self) {
  OrderUpdateFailed& this_ = static_cast<OrderUpdateFailed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.tag_cl_ord_id_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdateFailed::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateFailed(arena);
}
constexpr auto OrderUpdateFailed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdateFailed),
                                            alignof(OrderUpdateFailed));
}
constexpr auto OrderUpdateFailed::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateFailed_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateFailed::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateFailed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateFailed::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateFailed>(), &OrderUpdateFailed::ByteSizeLong,
              &OrderUpdateFailed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_._cached_size_),
          false,
      },
      &OrderUpdateFailed::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateFailed_class_data_ =
        OrderUpdateFailed::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateFailed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateFailed_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateFailed_class_data_.tc_table);
  return OrderUpdateFailed_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 2, 112, 2>
OrderUpdateFailed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateFailed_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateFailed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.unique_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.market_id_)}},
    // .google.protobuf.Timestamp time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 5, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.time_)}},
    // .google.protobuf.Timestamp exchange_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 6, 1, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.exchange_time_)}},
    // .t4proto.v1.common.OrderChange change = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateFailed, _impl_.change_), 7>(),
     {48, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.change_)}},
    // .t4proto.v1.common.OrderStatus status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateFailed, _impl_.status_), 8>(),
     {56, 8, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.status_)}},
    // string status_detail = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.status_detail_)}},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateFailed, _impl_.response_pending_), 9>(),
     {72, 9, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.response_pending_)}},
    // string tag_cl_ord_id = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.tag_cl_ord_id_)}},
    // int32 sequence_order = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateFailed, _impl_.sequence_order_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.sequence_order_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.time_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp exchange_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.exchange_time_), _Internal::kHasBitsOffset + 6, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OrderChange change = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.change_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.status_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string status_detail = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.status_detail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.response_pending_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string tag_cl_ord_id = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.tag_cl_ord_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sequence_order = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.sequence_order_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\51\11\12\11\0\0\0\0\15\0\15\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdateFailed"
    "unique_id"
    "account_id"
    "market_id"
    "status_detail"
    "tag_cl_ord_id"
  }},
};
PROTOBUF_NOINLINE void OrderUpdateFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateFailed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.tag_cl_ord_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
  }
  _impl_.change_ = 0;
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.status_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sequence_order_) -
        reinterpret_cast<char*>(&_impl_.status_)) + sizeof(_impl_.sequence_order_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateFailed::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateFailed& this_ = static_cast<const OrderUpdateFailed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateFailed::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateFailed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateFailed)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateFailed.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateFailed.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateFailed.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 4;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp exchange_time = 5;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OrderChange change = 6;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (this_._internal_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_change(), target);
    }
  }

  // .t4proto.v1.common.OrderStatus status = 7;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_status(), target);
    }
  }

  // string status_detail = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateFailed.status_detail");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .t4proto.v1.common.ResponsePending response_pending = 9;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_response_pending() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_response_pending(), target);
    }
  }

  // string tag_cl_ord_id = 10;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_tag_cl_ord_id().empty()) {
      const ::std::string& _s = this_._internal_tag_cl_ord_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateFailed.tag_cl_ord_id");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // int32 sequence_order = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
              stream, this_._internal_sequence_order(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateFailed)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateFailed::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateFailed& this_ = static_cast<const OrderUpdateFailed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateFailed::ByteSizeLong() const {
  const OrderUpdateFailed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateFailed)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string status_detail = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string tag_cl_ord_id = 10;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_tag_cl_ord_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_cl_ord_id());
      }
    }
    // .google.protobuf.Timestamp time = 4;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
    // .google.protobuf.Timestamp exchange_time = 5;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // .t4proto.v1.common.OrderChange change = 6;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_change() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_change());
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // .t4proto.v1.common.OrderStatus status = 7;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_response_pending() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_response_pending());
      }
    }
    // int32 sequence_order = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sequence_order());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateFailed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateFailed*>(&to_msg);
  auto& from = static_cast<const OrderUpdateFailed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateFailed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_tag_cl_ord_id().empty()) {
        _this->_internal_set_tag_cl_ord_id(from._internal_tag_cl_ord_id());
      } else {
        if (_this->_impl_.tag_cl_ord_id_.IsDefault()) {
          _this->_internal_set_tag_cl_ord_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_change() != 0) {
        _this->_impl_.change_ = from._impl_.change_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_response_pending() != 0) {
        _this->_impl_.response_pending_ = from._impl_.response_pending_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateFailed::CopyFrom(const OrderUpdateFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateFailed::InternalSwap(OrderUpdateFailed* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_cl_ord_id_, &other->_impl_.tag_cl_ord_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.sequence_order_)
      + sizeof(OrderUpdateFailed::_impl_.sequence_order_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdateFailed, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderUpdateFailed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::OrderUpdateStatus_InstructionExtraEntry_DoNotUse()
    : SuperType(OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.base()) {}
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::OrderUpdateStatus_InstructionExtraEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::OrderUpdateStatus_InstructionExtraEntry_DoNotUse() : SuperType() {}
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::OrderUpdateStatus_InstructionExtraEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL OrderUpdateStatus_InstructionExtraEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateStatus_InstructionExtraEntry_DoNotUse(arena);
}
constexpr auto OrderUpdateStatus_InstructionExtraEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdateStatus_InstructionExtraEntry_DoNotUse),
                                            alignof(OrderUpdateStatus_InstructionExtraEntry_DoNotUse));
}
constexpr auto OrderUpdateStatus_InstructionExtraEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateStatus_InstructionExtraEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateStatus_InstructionExtraEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateStatus_InstructionExtraEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateStatus_InstructionExtraEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&OrderUpdateStatus_InstructionExtraEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &OrderUpdateStatus_InstructionExtraEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_ =
        OrderUpdateStatus_InstructionExtraEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.tc_table);
  return OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 80, 2>
OrderUpdateStatus_InstructionExtraEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderUpdateStatus_InstructionExtraEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateStatus_InstructionExtraEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus_InstructionExtraEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\3\5\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdateStatus.InstructionExtraEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class OrderUpdateStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdateStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_._has_bits_);
};

void OrderUpdateStatus::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00800000u;
}
void OrderUpdateStatus::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x01000000u;
}
void OrderUpdateStatus::clear_current_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_limit_price_ != nullptr) _impl_.current_limit_price_->Clear();
  _impl_._has_bits_[0] &= ~0x02000000u;
}
void OrderUpdateStatus::clear_current_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_stop_price_ != nullptr) _impl_.current_stop_price_->Clear();
  _impl_._has_bits_[0] &= ~0x04000000u;
}
void OrderUpdateStatus::clear_trail_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trail_price_ != nullptr) _impl_.trail_price_->Clear();
  _impl_._has_bits_[0] &= ~0x08000000u;
}
void OrderUpdateStatus::clear_new_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_limit_price_ != nullptr) _impl_.new_limit_price_->Clear();
  _impl_._has_bits_[0] &= ~0x10000000u;
}
void OrderUpdateStatus::clear_new_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_stop_price_ != nullptr) _impl_.new_stop_price_->Clear();
  _impl_._has_bits_[0] &= ~0x20000000u;
}
OrderUpdateStatus::OrderUpdateStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateStatus)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instruction_extra_{visibility, arena, from.instruction_extra_},
        unique_id_(arena, from.unique_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_),
        status_detail_(arena, from.status_detail_),
        exchange_order_id_(arena, from.exchange_order_id_),
        executing_login_id_(arena, from.executing_login_id_),
        user_id_(arena, from.user_id_),
        user_name_(arena, from.user_name_),
        user_address_(arena, from.user_address_),
        session_id_(arena, from.session_id_),
        app_id_(arena, from.app_id_),
        app_name_(arena, from.app_name_),
        routing_user_id_(arena, from.routing_user_id_),
        routing_user_name_(arena, from.routing_user_name_),
        tag_(arena, from.tag_),
        tag_cl_ord_id_(arena, from.tag_cl_ord_id_),
        tag_orig_cl_ord_id_(arena, from.tag_orig_cl_ord_id_),
        smp_id_(arena, from.smp_id_),
        exchange_login_id_(arena, from.exchange_login_id_),
        exchange_location_(arena, from.exchange_location_),
        ats_regulatory_id_(arena, from.ats_regulatory_id_),
        authorized_trader_id_(arena, from.authorized_trader_id_),
        activation_details_(arena, from.activation_details_) {}

OrderUpdateStatus::OrderUpdateStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = ((cached_has_bits & 0x00800000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x01000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  _impl_.current_limit_price_ = ((cached_has_bits & 0x02000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_limit_price_)
                : nullptr;
  _impl_.current_stop_price_ = ((cached_has_bits & 0x04000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_stop_price_)
                : nullptr;
  _impl_.trail_price_ = ((cached_has_bits & 0x08000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_)
                : nullptr;
  _impl_.new_limit_price_ = ((cached_has_bits & 0x10000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_limit_price_)
                : nullptr;
  _impl_.new_stop_price_ = ((cached_has_bits & 0x20000000u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_stop_price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, change_),
           offsetof(Impl_, app_type_) -
               offsetof(Impl_, change_) +
               sizeof(Impl_::app_type_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateStatus)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        instruction_extra_{visibility, arena},
        unique_id_(arena),
        account_id_(arena),
        market_id_(arena),
        status_detail_(arena),
        exchange_order_id_(arena),
        executing_login_id_(arena),
        user_id_(arena),
        user_name_(arena),
        user_address_(arena),
        session_id_(arena),
        app_id_(arena),
        app_name_(arena),
        routing_user_id_(arena),
        routing_user_name_(arena),
        tag_(arena),
        tag_cl_ord_id_(arena),
        tag_orig_cl_ord_id_(arena),
        smp_id_(arena),
        exchange_login_id_(arena),
        exchange_location_(arena),
        ats_regulatory_id_(arena),
        authorized_trader_id_(arena),
        activation_details_(arena) {}

inline void OrderUpdateStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, app_type_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::app_type_));
}
OrderUpdateStatus::~OrderUpdateStatus() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateStatus)
  SharedDtor(*this);
}
inline void OrderUpdateStatus::SharedDtor(MessageLite& self) {
  OrderUpdateStatus& this_ = static_cast<OrderUpdateStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.exchange_order_id_.Destroy();
  this_._impl_.executing_login_id_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.user_name_.Destroy();
  this_._impl_.user_address_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.app_id_.Destroy();
  this_._impl_.app_name_.Destroy();
  this_._impl_.routing_user_id_.Destroy();
  this_._impl_.routing_user_name_.Destroy();
  this_._impl_.tag_.Destroy();
  this_._impl_.tag_cl_ord_id_.Destroy();
  this_._impl_.tag_orig_cl_ord_id_.Destroy();
  this_._impl_.smp_id_.Destroy();
  this_._impl_.exchange_login_id_.Destroy();
  this_._impl_.exchange_location_.Destroy();
  this_._impl_.ats_regulatory_id_.Destroy();
  this_._impl_.authorized_trader_id_.Destroy();
  this_._impl_.activation_details_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  delete this_._impl_.current_limit_price_;
  delete this_._impl_.current_stop_price_;
  delete this_._impl_.trail_price_;
  delete this_._impl_.new_limit_price_;
  delete this_._impl_.new_stop_price_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdateStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateStatus(arena);
}
constexpr auto OrderUpdateStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.instruction_extra_) +
          decltype(OrderUpdateStatus::_impl_.instruction_extra_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.instruction_extra_) +
          decltype(OrderUpdateStatus::_impl_.instruction_extra_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderUpdateStatus), alignof(OrderUpdateStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderUpdateStatus::PlacementNew_,
                                 sizeof(OrderUpdateStatus),
                                 alignof(OrderUpdateStatus));
  }
}
constexpr auto OrderUpdateStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateStatus>(), &OrderUpdateStatus::ByteSizeLong,
              &OrderUpdateStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_._cached_size_),
          false,
      },
      &OrderUpdateStatus::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateStatus_class_data_ =
        OrderUpdateStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateStatus_class_data_.tc_table);
  return OrderUpdateStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 45, 8, 396, 7>
OrderUpdateStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_._has_bits_),
    0, // no _extensions_
    45, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    45,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.unique_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.market_id_)}},
    // .google.protobuf.Timestamp time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 23, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.time_)}},
    // .google.protobuf.Timestamp exchange_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 24, 1, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_time_)}},
    // .t4proto.v1.common.OrderChange change = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateStatus, _impl_.change_), 30>(),
     {48, 30, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.change_)}},
    // .t4proto.v1.common.OrderStatus status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateStatus, _impl_.status_), 31>(),
     {56, 31, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.status_)}},
    // string status_detail = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.status_detail_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string exchange_order_id = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_order_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .t4proto.v1.common.Price current_limit_price = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 25, 2, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_limit_price_)}},
    // .t4proto.v1.common.Price current_stop_price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 26, 3, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_stop_price_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string executing_login_id = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 5, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.executing_login_id_)}},
    // string tag_cl_ord_id = 34;
    {::_pbi::TcParser::FastUS2,
     {658, 15, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.tag_cl_ord_id_)}},
    // .t4proto.v1.common.Price trail_price = 19;
    {::_pbi::TcParser::FastMtS2,
     {410, 27, 4, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.trail_price_)}},
    // string smp_id = 36;
    {::_pbi::TcParser::FastUS2,
     {674, 17, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.smp_id_)}},
    // string user_id = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_id_)}},
    // string user_name = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_name_)}},
    // string user_address = 23;
    {::_pbi::TcParser::FastUS2,
     {442, 8, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_address_)}},
    // string session_id = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 9, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.session_id_)}},
    // string app_id = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_id_)}},
    // string app_name = 26;
    {::_pbi::TcParser::FastUS2,
     {466, 11, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_name_)}},
    // string routing_user_id = 27;
    {::_pbi::TcParser::FastUS2,
     {474, 12, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.routing_user_id_)}},
    // string routing_user_name = 28;
    {::_pbi::TcParser::FastUS2,
     {482, 13, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.routing_user_name_)}},
    // string activation_details = 45;
    {::_pbi::TcParser::FastUS2,
     {746, 22, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.activation_details_)}},
    // .t4proto.v1.common.Price new_limit_price = 30;
    {::_pbi::TcParser::FastMtS2,
     {498, 28, 5, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_limit_price_)}},
    // .t4proto.v1.common.Price new_stop_price = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 29, 6, PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_stop_price_)}},
  }}, {{
    33, 0, 1,
    57344, 32,
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.time_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp exchange_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_time_), _Internal::kHasBitsOffset + 24, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OrderChange change = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.change_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.status_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string status_detail = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.status_detail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.response_pending_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string exchange_order_id = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_order_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 current_volume = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_volume_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price current_limit_price = 12;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_limit_price_), _Internal::kHasBitsOffset + 25, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.Price current_stop_price = 13;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_stop_price_), _Internal::kHasBitsOffset + 26, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.PriceType price_type = 14;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.price_type_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.TimeType time_type = 15;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.time_type_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 working_volume = 16;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.working_volume_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string executing_login_id = 17;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.executing_login_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ActivationType activation_type = 18;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.activation_type_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.Price trail_price = 19;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.trail_price_), _Internal::kHasBitsOffset + 27, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 current_max_show = 20;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.current_max_show_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string user_id = 21;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_name = 22;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_name_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_address = 23;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.user_address_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 24;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.session_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_id = 25;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_id_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_name = 26;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_name_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string routing_user_id = 27;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.routing_user_id_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string routing_user_name = 28;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.routing_user_name_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 new_volume = 29;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_volume_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price new_limit_price = 30;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_limit_price_), _Internal::kHasBitsOffset + 28, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.Price new_stop_price = 31;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_stop_price_), _Internal::kHasBitsOffset + 29, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 new_max_show = 32;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.new_max_show_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string tag = 33;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.tag_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_cl_ord_id = 34;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.tag_cl_ord_id_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_orig_cl_ord_id = 35;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.tag_orig_cl_ord_id_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string smp_id = 36;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.smp_id_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange_login_id = 37;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_login_id_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange_location = 38;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.exchange_location_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ats_regulatory_id = 39;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.ats_regulatory_id_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 max_volume = 40;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.max_volume_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 sequence_order = 41;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.sequence_order_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string authorized_trader_id = 42;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.authorized_trader_id_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> instruction_extra = 43;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.instruction_extra_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .t4proto.v1.common.ApplicationType app_type = 44;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_type_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string activation_details = 45;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.activation_details_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\51\11\12\11\0\0\0\0\15\0\21\0\0\0\0\0\0\22\0\0\0\7\11\14\12\6\10\17\21\0\0\0\0\3\15\22\6\21\21\21\0\0\24\21\0\22\0\0"
    "t4proto.v1.orderrouting.OrderUpdateStatus"
    "unique_id"
    "account_id"
    "market_id"
    "status_detail"
    "exchange_order_id"
    "executing_login_id"
    "user_id"
    "user_name"
    "user_address"
    "session_id"
    "app_id"
    "app_name"
    "routing_user_id"
    "routing_user_name"
    "tag"
    "tag_cl_ord_id"
    "tag_orig_cl_ord_id"
    "smp_id"
    "exchange_login_id"
    "exchange_location"
    "ats_regulatory_id"
    "authorized_trader_id"
    "instruction_extra"
    "activation_details"
  }},
};
PROTOBUF_NOINLINE void OrderUpdateStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruction_extra_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.exchange_order_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.executing_login_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.user_name_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _impl_.user_address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _impl_.app_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _impl_.app_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _impl_.routing_user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _impl_.routing_user_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _impl_.tag_cl_ord_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _impl_.tag_orig_cl_ord_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _impl_.smp_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _impl_.exchange_login_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      _impl_.exchange_location_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      _impl_.ats_regulatory_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      _impl_.authorized_trader_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      _impl_.activation_details_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  if ((cached_has_bits & 0x3f000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      ABSL_DCHECK(_impl_.current_limit_price_ != nullptr);
      _impl_.current_limit_price_->Clear();
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      ABSL_DCHECK(_impl_.current_stop_price_ != nullptr);
      _impl_.current_stop_price_->Clear();
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      ABSL_DCHECK(_impl_.trail_price_ != nullptr);
      _impl_.trail_price_->Clear();
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      ABSL_DCHECK(_impl_.new_limit_price_ != nullptr);
      _impl_.new_limit_price_->Clear();
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      ABSL_DCHECK(_impl_.new_stop_price_ != nullptr);
      _impl_.new_stop_price_->Clear();
    }
  }
  if ((cached_has_bits & 0xc0000000u) != 0) {
    ::memset(&_impl_.change_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.status_) -
        reinterpret_cast<char*>(&_impl_.change_)) + sizeof(_impl_.status_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.response_pending_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.new_volume_) -
        reinterpret_cast<char*>(&_impl_.response_pending_)) + sizeof(_impl_.new_volume_));
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    ::memset(&_impl_.new_max_show_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.app_type_) -
        reinterpret_cast<char*>(&_impl_.new_max_show_)) + sizeof(_impl_.app_type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateStatus& this_ = static_cast<const OrderUpdateStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 4;
  if ((cached_has_bits & 0x00800000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp exchange_time = 5;
  if ((cached_has_bits & 0x01000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OrderChange change = 6;
  if ((cached_has_bits & 0x40000000u) != 0) {
    if (this_._internal_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_change(), target);
    }
  }

  // .t4proto.v1.common.OrderStatus status = 7;
  if ((cached_has_bits & 0x80000000u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_status(), target);
    }
  }

  // string status_detail = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.status_detail");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .t4proto.v1.common.ResponsePending response_pending = 9;
  if ((this_._impl_._has_bits_[1] & 0x00000001u) != 0) {
    if (this_._internal_response_pending() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_response_pending(), target);
    }
  }

  // string exchange_order_id = 10;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_exchange_order_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_order_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.exchange_order_id");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // int32 current_volume = 11;
  if ((this_._impl_._has_bits_[1] & 0x00000002u) != 0) {
    if (this_._internal_current_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
              stream, this_._internal_current_volume(), target);
    }
  }

  // .t4proto.v1.common.Price current_limit_price = 12;
  if ((cached_has_bits & 0x02000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.current_limit_price_, this_._impl_.current_limit_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.Price current_stop_price = 13;
  if ((cached_has_bits & 0x04000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.current_stop_price_, this_._impl_.current_stop_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.PriceType price_type = 14;
  if ((this_._impl_._has_bits_[1] & 0x00000004u) != 0) {
    if (this_._internal_price_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          14, this_._internal_price_type(), target);
    }
  }

  // .t4proto.v1.common.TimeType time_type = 15;
  if ((this_._impl_._has_bits_[1] & 0x00000008u) != 0) {
    if (this_._internal_time_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          15, this_._internal_time_type(), target);
    }
  }

  // int32 working_volume = 16;
  if ((this_._impl_._has_bits_[1] & 0x00000010u) != 0) {
    if (this_._internal_working_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          16, this_._internal_working_volume(), target);
    }
  }

  // string executing_login_id = 17;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (!this_._internal_executing_login_id().empty()) {
      const ::std::string& _s = this_._internal_executing_login_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.executing_login_id");
      target = stream->WriteStringMaybeAliased(17, _s, target);
    }
  }

  // .t4proto.v1.common.ActivationType activation_type = 18;
  if ((this_._impl_._has_bits_[1] & 0x00000020u) != 0) {
    if (this_._internal_activation_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          18, this_._internal_activation_type(), target);
    }
  }

  // .t4proto.v1.common.Price trail_price = 19;
  if ((cached_has_bits & 0x08000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        19, *this_._impl_.trail_price_, this_._impl_.trail_price_->GetCachedSize(), target,
        stream);
  }

  // int32 current_max_show = 20;
  if ((this_._impl_._has_bits_[1] & 0x00000040u) != 0) {
    if (this_._internal_current_max_show() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          20, this_._internal_current_max_show(), target);
    }
  }

  // string user_id = 21;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.user_id");
      target = stream->WriteStringMaybeAliased(21, _s, target);
    }
  }

  // string user_name = 22;
  if ((cached_has_bits & 0x00000080u) != 0) {
    if (!this_._internal_user_name().empty()) {
      const ::std::string& _s = this_._internal_user_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.user_name");
      target = stream->WriteStringMaybeAliased(22, _s, target);
    }
  }

  // string user_address = 23;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (!this_._internal_user_address().empty()) {
      const ::std::string& _s = this_._internal_user_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.user_address");
      target = stream->WriteStringMaybeAliased(23, _s, target);
    }
  }

  // string session_id = 24;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.session_id");
      target = stream->WriteStringMaybeAliased(24, _s, target);
    }
  }

  // string app_id = 25;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (!this_._internal_app_id().empty()) {
      const ::std::string& _s = this_._internal_app_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.app_id");
      target = stream->WriteStringMaybeAliased(25, _s, target);
    }
  }

  // string app_name = 26;
  if ((cached_has_bits & 0x00000800u) != 0) {
    if (!this_._internal_app_name().empty()) {
      const ::std::string& _s = this_._internal_app_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.app_name");
      target = stream->WriteStringMaybeAliased(26, _s, target);
    }
  }

  // string routing_user_id = 27;
  if ((cached_has_bits & 0x00001000u) != 0) {
    if (!this_._internal_routing_user_id().empty()) {
      const ::std::string& _s = this_._internal_routing_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.routing_user_id");
      target = stream->WriteStringMaybeAliased(27, _s, target);
    }
  }

  // string routing_user_name = 28;
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (!this_._internal_routing_user_name().empty()) {
      const ::std::string& _s = this_._internal_routing_user_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.routing_user_name");
      target = stream->WriteStringMaybeAliased(28, _s, target);
    }
  }

  // int32 new_volume = 29;
  if ((this_._impl_._has_bits_[1] & 0x00000080u) != 0) {
    if (this_._internal_new_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          29, this_._internal_new_volume(), target);
    }
  }

  // .t4proto.v1.common.Price new_limit_price = 30;
  if ((cached_has_bits & 0x10000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, *this_._impl_.new_limit_price_, this_._impl_.new_limit_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.Price new_stop_price = 31;
  if ((cached_has_bits & 0x20000000u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        31, *this_._impl_.new_stop_price_, this_._impl_.new_stop_price_->GetCachedSize(), target,
        stream);
  }

  // int32 new_max_show = 32;
  if ((this_._impl_._has_bits_[1] & 0x00000100u) != 0) {
    if (this_._internal_new_max_show() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          32, this_._internal_new_max_show(), target);
    }
  }

  // string tag = 33;
  if ((cached_has_bits & 0x00004000u) != 0) {
    if (!this_._internal_tag().empty()) {
      const ::std::string& _s = this_._internal_tag();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.tag");
      target = stream->WriteStringMaybeAliased(33, _s, target);
    }
  }

  // string tag_cl_ord_id = 34;
  if ((cached_has_bits & 0x00008000u) != 0) {
    if (!this_._internal_tag_cl_ord_id().empty()) {
      const ::std::string& _s = this_._internal_tag_cl_ord_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.tag_cl_ord_id");
      target = stream->WriteStringMaybeAliased(34, _s, target);
    }
  }

  // string tag_orig_cl_ord_id = 35;
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (!this_._internal_tag_orig_cl_ord_id().empty()) {
      const ::std::string& _s = this_._internal_tag_orig_cl_ord_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.tag_orig_cl_ord_id");
      target = stream->WriteStringMaybeAliased(35, _s, target);
    }
  }

  // string smp_id = 36;
  if ((cached_has_bits & 0x00020000u) != 0) {
    if (!this_._internal_smp_id().empty()) {
      const ::std::string& _s = this_._internal_smp_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.smp_id");
      target = stream->WriteStringMaybeAliased(36, _s, target);
    }
  }

  // string exchange_login_id = 37;
  if ((cached_has_bits & 0x00040000u) != 0) {
    if (!this_._internal_exchange_login_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_login_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.exchange_login_id");
      target = stream->WriteStringMaybeAliased(37, _s, target);
    }
  }

  // string exchange_location = 38;
  if ((cached_has_bits & 0x00080000u) != 0) {
    if (!this_._internal_exchange_location().empty()) {
      const ::std::string& _s = this_._internal_exchange_location();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.exchange_location");
      target = stream->WriteStringMaybeAliased(38, _s, target);
    }
  }

  // string ats_regulatory_id = 39;
  if ((cached_has_bits & 0x00100000u) != 0) {
    if (!this_._internal_ats_regulatory_id().empty()) {
      const ::std::string& _s = this_._internal_ats_regulatory_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.ats_regulatory_id");
      target = stream->WriteStringMaybeAliased(39, _s, target);
    }
  }

  // int32 max_volume = 40;
  if ((this_._impl_._has_bits_[1] & 0x00000200u) != 0) {
    if (this_._internal_max_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          40, this_._internal_max_volume(), target);
    }
  }

  // int32 sequence_order = 41;
  if ((this_._impl_._has_bits_[1] & 0x00000400u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          41, this_._internal_sequence_order(), target);
    }
  }

  // string authorized_trader_id = 42;
  if ((cached_has_bits & 0x00200000u) != 0) {
    if (!this_._internal_authorized_trader_id().empty()) {
      const ::std::string& _s = this_._internal_authorized_trader_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.authorized_trader_id");
      target = stream->WriteStringMaybeAliased(42, _s, target);
    }
  }

  // map<string, string> instruction_extra = 43;
  if (!this_._internal_instruction_extra().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_instruction_extra();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            43, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.instruction_extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.instruction_extra");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            43, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.instruction_extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.instruction_extra");
      }
    }
  }

  // .t4proto.v1.common.ApplicationType app_type = 44;
  if ((this_._impl_._has_bits_[1] & 0x00000800u) != 0) {
    if (this_._internal_app_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          44, this_._internal_app_type(), target);
    }
  }

  // string activation_details = 45;
  if ((cached_has_bits & 0x00400000u) != 0) {
    if (!this_._internal_activation_details().empty()) {
      const ::std::string& _s = this_._internal_activation_details();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateStatus.activation_details");
      target = stream->WriteStringMaybeAliased(45, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateStatus::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateStatus& this_ = static_cast<const OrderUpdateStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateStatus::ByteSizeLong() const {
  const OrderUpdateStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> instruction_extra = 43;
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_instruction_extra_size());
      for (const auto& entry : this_._internal_instruction_extra()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string status_detail = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string exchange_order_id = 10;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_exchange_order_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_order_id());
      }
    }
    // string executing_login_id = 17;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_executing_login_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_executing_login_id());
      }
    }
    // string user_id = 21;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string user_name = 22;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!this_._internal_user_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_name());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // string user_address = 23;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!this_._internal_user_address().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_address());
      }
    }
    // string session_id = 24;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string app_id = 25;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (!this_._internal_app_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_app_id());
      }
    }
    // string app_name = 26;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (!this_._internal_app_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_app_name());
      }
    }
    // string routing_user_id = 27;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (!this_._internal_routing_user_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_routing_user_id());
      }
    }
    // string routing_user_name = 28;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (!this_._internal_routing_user_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_routing_user_name());
      }
    }
    // string tag = 33;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (!this_._internal_tag().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag());
      }
    }
    // string tag_cl_ord_id = 34;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (!this_._internal_tag_cl_ord_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_cl_ord_id());
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // string tag_orig_cl_ord_id = 35;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (!this_._internal_tag_orig_cl_ord_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_orig_cl_ord_id());
      }
    }
    // string smp_id = 36;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (!this_._internal_smp_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_smp_id());
      }
    }
    // string exchange_login_id = 37;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (!this_._internal_exchange_login_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_login_id());
      }
    }
    // string exchange_location = 38;
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (!this_._internal_exchange_location().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_location());
      }
    }
    // string ats_regulatory_id = 39;
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (!this_._internal_ats_regulatory_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ats_regulatory_id());
      }
    }
    // string authorized_trader_id = 42;
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (!this_._internal_authorized_trader_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_authorized_trader_id());
      }
    }
    // string activation_details = 45;
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (!this_._internal_activation_details().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_activation_details());
      }
    }
    // .google.protobuf.Timestamp time = 4;
    if ((cached_has_bits & 0x00800000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    // .google.protobuf.Timestamp exchange_time = 5;
    if ((cached_has_bits & 0x01000000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // .t4proto.v1.common.Price current_limit_price = 12;
    if ((cached_has_bits & 0x02000000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_limit_price_);
    }
    // .t4proto.v1.common.Price current_stop_price = 13;
    if ((cached_has_bits & 0x04000000u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_stop_price_);
    }
    // .t4proto.v1.common.Price trail_price = 19;
    if ((cached_has_bits & 0x08000000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trail_price_);
    }
    // .t4proto.v1.common.Price new_limit_price = 30;
    if ((cached_has_bits & 0x10000000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_limit_price_);
    }
    // .t4proto.v1.common.Price new_stop_price = 31;
    if ((cached_has_bits & 0x20000000u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_stop_price_);
    }
    // .t4proto.v1.common.OrderChange change = 6;
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (this_._internal_change() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_change());
      }
    }
    // .t4proto.v1.common.OrderStatus status = 7;
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_response_pending() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_response_pending());
      }
    }
    // int32 current_volume = 11;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_current_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_current_volume());
      }
    }
    // .t4proto.v1.common.PriceType price_type = 14;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_price_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
      }
    }
    // .t4proto.v1.common.TimeType time_type = 15;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_time_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_time_type());
      }
    }
    // int32 working_volume = 16;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_working_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_working_volume());
      }
    }
    // .t4proto.v1.common.ActivationType activation_type = 18;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_activation_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_activation_type());
      }
    }
    // int32 current_max_show = 20;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_current_max_show() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_current_max_show());
      }
    }
    // int32 new_volume = 29;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_new_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_new_volume());
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    // int32 new_max_show = 32;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_new_max_show() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_new_max_show());
      }
    }
    // int32 max_volume = 40;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_max_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_max_volume());
      }
    }
    // int32 sequence_order = 41;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_sequence_order());
      }
    }
    // .t4proto.v1.common.ApplicationType app_type = 44;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_app_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_app_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateStatus*>(&to_msg);
  auto& from = static_cast<const OrderUpdateStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.instruction_extra_.MergeFrom(from._impl_.instruction_extra_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_exchange_order_id().empty()) {
        _this->_internal_set_exchange_order_id(from._internal_exchange_order_id());
      } else {
        if (_this->_impl_.exchange_order_id_.IsDefault()) {
          _this->_internal_set_exchange_order_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_executing_login_id().empty()) {
        _this->_internal_set_executing_login_id(from._internal_executing_login_id());
      } else {
        if (_this->_impl_.executing_login_id_.IsDefault()) {
          _this->_internal_set_executing_login_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!from._internal_user_name().empty()) {
        _this->_internal_set_user_name(from._internal_user_name());
      } else {
        if (_this->_impl_.user_name_.IsDefault()) {
          _this->_internal_set_user_name("");
        }
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!from._internal_user_address().empty()) {
        _this->_internal_set_user_address(from._internal_user_address());
      } else {
        if (_this->_impl_.user_address_.IsDefault()) {
          _this->_internal_set_user_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (!from._internal_app_id().empty()) {
        _this->_internal_set_app_id(from._internal_app_id());
      } else {
        if (_this->_impl_.app_id_.IsDefault()) {
          _this->_internal_set_app_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (!from._internal_app_name().empty()) {
        _this->_internal_set_app_name(from._internal_app_name());
      } else {
        if (_this->_impl_.app_name_.IsDefault()) {
          _this->_internal_set_app_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (!from._internal_routing_user_id().empty()) {
        _this->_internal_set_routing_user_id(from._internal_routing_user_id());
      } else {
        if (_this->_impl_.routing_user_id_.IsDefault()) {
          _this->_internal_set_routing_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (!from._internal_routing_user_name().empty()) {
        _this->_internal_set_routing_user_name(from._internal_routing_user_name());
      } else {
        if (_this->_impl_.routing_user_name_.IsDefault()) {
          _this->_internal_set_routing_user_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (!from._internal_tag().empty()) {
        _this->_internal_set_tag(from._internal_tag());
      } else {
        if (_this->_impl_.tag_.IsDefault()) {
          _this->_internal_set_tag("");
        }
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (!from._internal_tag_cl_ord_id().empty()) {
        _this->_internal_set_tag_cl_ord_id(from._internal_tag_cl_ord_id());
      } else {
        if (_this->_impl_.tag_cl_ord_id_.IsDefault()) {
          _this->_internal_set_tag_cl_ord_id("");
        }
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (!from._internal_tag_orig_cl_ord_id().empty()) {
        _this->_internal_set_tag_orig_cl_ord_id(from._internal_tag_orig_cl_ord_id());
      } else {
        if (_this->_impl_.tag_orig_cl_ord_id_.IsDefault()) {
          _this->_internal_set_tag_orig_cl_ord_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (!from._internal_smp_id().empty()) {
        _this->_internal_set_smp_id(from._internal_smp_id());
      } else {
        if (_this->_impl_.smp_id_.IsDefault()) {
          _this->_internal_set_smp_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (!from._internal_exchange_login_id().empty()) {
        _this->_internal_set_exchange_login_id(from._internal_exchange_login_id());
      } else {
        if (_this->_impl_.exchange_login_id_.IsDefault()) {
          _this->_internal_set_exchange_login_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (!from._internal_exchange_location().empty()) {
        _this->_internal_set_exchange_location(from._internal_exchange_location());
      } else {
        if (_this->_impl_.exchange_location_.IsDefault()) {
          _this->_internal_set_exchange_location("");
        }
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (!from._internal_ats_regulatory_id().empty()) {
        _this->_internal_set_ats_regulatory_id(from._internal_ats_regulatory_id());
      } else {
        if (_this->_impl_.ats_regulatory_id_.IsDefault()) {
          _this->_internal_set_ats_regulatory_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (!from._internal_authorized_trader_id().empty()) {
        _this->_internal_set_authorized_trader_id(from._internal_authorized_trader_id());
      } else {
        if (_this->_impl_.authorized_trader_id_.IsDefault()) {
          _this->_internal_set_authorized_trader_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (!from._internal_activation_details().empty()) {
        _this->_internal_set_activation_details(from._internal_activation_details());
      } else {
        if (_this->_impl_.activation_details_.IsDefault()) {
          _this->_internal_set_activation_details("");
        }
      }
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      ABSL_DCHECK(from._impl_.current_limit_price_ != nullptr);
      if (_this->_impl_.current_limit_price_ == nullptr) {
        _this->_impl_.current_limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_limit_price_);
      } else {
        _this->_impl_.current_limit_price_->MergeFrom(*from._impl_.current_limit_price_);
      }
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      ABSL_DCHECK(from._impl_.current_stop_price_ != nullptr);
      if (_this->_impl_.current_stop_price_ == nullptr) {
        _this->_impl_.current_stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_stop_price_);
      } else {
        _this->_impl_.current_stop_price_->MergeFrom(*from._impl_.current_stop_price_);
      }
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      ABSL_DCHECK(from._impl_.trail_price_ != nullptr);
      if (_this->_impl_.trail_price_ == nullptr) {
        _this->_impl_.trail_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_);
      } else {
        _this->_impl_.trail_price_->MergeFrom(*from._impl_.trail_price_);
      }
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      ABSL_DCHECK(from._impl_.new_limit_price_ != nullptr);
      if (_this->_impl_.new_limit_price_ == nullptr) {
        _this->_impl_.new_limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_limit_price_);
      } else {
        _this->_impl_.new_limit_price_->MergeFrom(*from._impl_.new_limit_price_);
      }
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      ABSL_DCHECK(from._impl_.new_stop_price_ != nullptr);
      if (_this->_impl_.new_stop_price_ == nullptr) {
        _this->_impl_.new_stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_stop_price_);
      } else {
        _this->_impl_.new_stop_price_->MergeFrom(*from._impl_.new_stop_price_);
      }
    }
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (from._internal_change() != 0) {
        _this->_impl_.change_ = from._impl_.change_;
      }
    }
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_response_pending() != 0) {
        _this->_impl_.response_pending_ = from._impl_.response_pending_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_current_volume() != 0) {
        _this->_impl_.current_volume_ = from._impl_.current_volume_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_price_type() != 0) {
        _this->_impl_.price_type_ = from._impl_.price_type_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_time_type() != 0) {
        _this->_impl_.time_type_ = from._impl_.time_type_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_working_volume() != 0) {
        _this->_impl_.working_volume_ = from._impl_.working_volume_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_activation_type() != 0) {
        _this->_impl_.activation_type_ = from._impl_.activation_type_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_current_max_show() != 0) {
        _this->_impl_.current_max_show_ = from._impl_.current_max_show_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_new_volume() != 0) {
        _this->_impl_.new_volume_ = from._impl_.new_volume_;
      }
    }
  }
  if ((cached_has_bits & 0x00000f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_new_max_show() != 0) {
        _this->_impl_.new_max_show_ = from._impl_.new_max_show_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_max_volume() != 0) {
        _this->_impl_.max_volume_ = from._impl_.max_volume_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_app_type() != 0) {
        _this->_impl_.app_type_ = from._impl_.app_type_;
      }
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateStatus::CopyFrom(const OrderUpdateStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateStatus::InternalSwap(OrderUpdateStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.instruction_extra_.InternalSwap(&other->_impl_.instruction_extra_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_order_id_, &other->_impl_.exchange_order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executing_login_id_, &other->_impl_.executing_login_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, &other->_impl_.user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_address_, &other->_impl_.user_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_name_, &other->_impl_.app_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_user_id_, &other->_impl_.routing_user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_user_name_, &other->_impl_.routing_user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_cl_ord_id_, &other->_impl_.tag_cl_ord_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_orig_cl_ord_id_, &other->_impl_.tag_orig_cl_ord_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.smp_id_, &other->_impl_.smp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_login_id_, &other->_impl_.exchange_login_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_location_, &other->_impl_.exchange_location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ats_regulatory_id_, &other->_impl_.ats_regulatory_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authorized_trader_id_, &other->_impl_.authorized_trader_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.activation_details_, &other->_impl_.activation_details_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.app_type_)
      + sizeof(OrderUpdateStatus::_impl_.app_type_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdateStatus, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderUpdateStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdateTrade::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdateTrade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_._has_bits_);
};

void OrderUpdateTrade::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void OrderUpdateTrade::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void OrderUpdateTrade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
OrderUpdateTrade::OrderUpdateTrade(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateTrade_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateTrade)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateTrade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unique_id_(arena, from.unique_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_),
        status_detail_(arena, from.status_detail_),
        exchange_trade_id_(arena, from.exchange_trade_id_),
        contra_trader_(arena, from.contra_trader_),
        contra_broker_(arena, from.contra_broker_) {}

OrderUpdateTrade::OrderUpdateTrade(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateTrade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateTrade_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateTrade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  _impl_.price_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, change_),
           offsetof(Impl_, trade_date_) -
               offsetof(Impl_, change_) +
               sizeof(Impl_::trade_date_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateTrade)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateTrade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unique_id_(arena),
        account_id_(arena),
        market_id_(arena),
        status_detail_(arena),
        exchange_trade_id_(arena),
        contra_trader_(arena),
        contra_broker_(arena) {}

inline void OrderUpdateTrade::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, trade_date_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::trade_date_));
}
OrderUpdateTrade::~OrderUpdateTrade() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateTrade)
  SharedDtor(*this);
}
inline void OrderUpdateTrade::SharedDtor(MessageLite& self) {
  OrderUpdateTrade& this_ = static_cast<OrderUpdateTrade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.exchange_trade_id_.Destroy();
  this_._impl_.contra_trader_.Destroy();
  this_._impl_.contra_broker_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdateTrade::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateTrade(arena);
}
constexpr auto OrderUpdateTrade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdateTrade),
                                            alignof(OrderUpdateTrade));
}
constexpr auto OrderUpdateTrade::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateTrade_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateTrade::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateTrade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateTrade::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateTrade>(), &OrderUpdateTrade::ByteSizeLong,
              &OrderUpdateTrade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_._cached_size_),
          false,
      },
      &OrderUpdateTrade::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateTrade_class_data_ =
        OrderUpdateTrade::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateTrade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateTrade_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateTrade_class_data_.tc_table);
  return OrderUpdateTrade_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 19, 3, 149, 2>
OrderUpdateTrade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_._has_bits_),
    0, // no _extensions_
    19, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294443008,  // skipmap
    offsetof(decltype(_table_), field_entries),
    19,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateTrade_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTrade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.unique_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.market_id_)}},
    // .google.protobuf.Timestamp time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.time_)}},
    // .google.protobuf.Timestamp exchange_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 8, 1, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.exchange_time_)}},
    // .t4proto.v1.common.OrderChange change = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.change_), 10>(),
     {48, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.change_)}},
    // .t4proto.v1.common.OrderStatus status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.status_), 11>(),
     {56, 11, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.status_)}},
    // string status_detail = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.status_detail_)}},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.response_pending_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.response_pending_)}},
    // int32 total_fill_volume = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.total_fill_volume_), 13>(),
     {80, 13, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.total_fill_volume_)}},
    // int32 working_volume = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.working_volume_), 14>(),
     {88, 14, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.working_volume_)}},
    // int32 volume = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.volume_), 15>(),
     {96, 15, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.volume_)}},
    // .t4proto.v1.common.Price price = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 9, 2, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.price_)}},
    // int32 residual_volume = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTrade, _impl_.residual_volume_), 16>(),
     {112, 16, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.residual_volume_)}},
    // string exchange_trade_id = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 4, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.exchange_trade_id_)}},
    // string contra_trader = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 5, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.contra_trader_)}},
    // string contra_broker = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.contra_broker_)}},
    // int64 trade_date = 18;
    {::_pbi::TcParser::FastV64S2,
     {400, 18, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.trade_date_)}},
    // int32 sequence_order = 19;
    {::_pbi::TcParser::FastV32S2,
     {408, 17, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.sequence_order_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.time_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp exchange_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.exchange_time_), _Internal::kHasBitsOffset + 8, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OrderChange change = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.change_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.status_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string status_detail = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.status_detail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.response_pending_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 total_fill_volume = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.total_fill_volume_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 working_volume = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.working_volume_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 volume = 12;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.volume_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price price = 13;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.price_), _Internal::kHasBitsOffset + 9, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 residual_volume = 14;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.residual_volume_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string exchange_trade_id = 15;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.exchange_trade_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_trader = 16;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.contra_trader_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_broker = 17;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.contra_broker_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 trade_date = 18;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.trade_date_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 sequence_order = 19;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.sequence_order_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
  }},
  {{
    "\50\11\12\11\0\0\0\0\15\0\0\0\0\0\0\21\15\15\0\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdateTrade"
    "unique_id"
    "account_id"
    "market_id"
    "status_detail"
    "exchange_trade_id"
    "contra_trader"
    "contra_broker"
  }},
};
PROTOBUF_NOINLINE void OrderUpdateTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateTrade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.exchange_trade_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.contra_trader_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.contra_broker_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000fc00u) != 0) {
    ::memset(&_impl_.change_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.volume_) -
        reinterpret_cast<char*>(&_impl_.change_)) + sizeof(_impl_.volume_));
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    ::memset(&_impl_.residual_volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.trade_date_) -
        reinterpret_cast<char*>(&_impl_.residual_volume_)) + sizeof(_impl_.trade_date_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateTrade::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateTrade& this_ = static_cast<const OrderUpdateTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateTrade::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateTrade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 4;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp exchange_time = 5;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OrderChange change = 6;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_change(), target);
    }
  }

  // .t4proto.v1.common.OrderStatus status = 7;
  if ((cached_has_bits & 0x00000800u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_status(), target);
    }
  }

  // string status_detail = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.status_detail");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .t4proto.v1.common.ResponsePending response_pending = 9;
  if ((cached_has_bits & 0x00001000u) != 0) {
    if (this_._internal_response_pending() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_response_pending(), target);
    }
  }

  // int32 total_fill_volume = 10;
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (this_._internal_total_fill_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
              stream, this_._internal_total_fill_volume(), target);
    }
  }

  // int32 working_volume = 11;
  if ((cached_has_bits & 0x00004000u) != 0) {
    if (this_._internal_working_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
              stream, this_._internal_working_volume(), target);
    }
  }

  // int32 volume = 12;
  if ((cached_has_bits & 0x00008000u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<12>(
              stream, this_._internal_volume(), target);
    }
  }

  // .t4proto.v1.common.Price price = 13;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        13, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // int32 residual_volume = 14;
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (this_._internal_residual_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<14>(
              stream, this_._internal_residual_volume(), target);
    }
  }

  // string exchange_trade_id = 15;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_exchange_trade_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_trade_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.exchange_trade_id");
      target = stream->WriteStringMaybeAliased(15, _s, target);
    }
  }

  // string contra_trader = 16;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (!this_._internal_contra_trader().empty()) {
      const ::std::string& _s = this_._internal_contra_trader();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.contra_trader");
      target = stream->WriteStringMaybeAliased(16, _s, target);
    }
  }

  // string contra_broker = 17;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (!this_._internal_contra_broker().empty()) {
      const ::std::string& _s = this_._internal_contra_broker();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTrade.contra_broker");
      target = stream->WriteStringMaybeAliased(17, _s, target);
    }
  }

  // int64 trade_date = 18;
  if ((cached_has_bits & 0x00040000u) != 0) {
    if (this_._internal_trade_date() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt64ToArray(
          18, this_._internal_trade_date(), target);
    }
  }

  // int32 sequence_order = 19;
  if ((cached_has_bits & 0x00020000u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          19, this_._internal_sequence_order(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateTrade)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateTrade::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateTrade& this_ = static_cast<const OrderUpdateTrade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateTrade::ByteSizeLong() const {
  const OrderUpdateTrade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateTrade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string status_detail = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string exchange_trade_id = 15;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_exchange_trade_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_trade_id());
      }
    }
    // string contra_trader = 16;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_contra_trader().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_trader());
      }
    }
    // string contra_broker = 17;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!this_._internal_contra_broker().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_broker());
      }
    }
    // .google.protobuf.Timestamp time = 4;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // .google.protobuf.Timestamp exchange_time = 5;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // .t4proto.v1.common.Price price = 13;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // .t4proto.v1.common.OrderChange change = 6;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_change() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_change());
      }
    }
    // .t4proto.v1.common.OrderStatus status = 7;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_response_pending() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_response_pending());
      }
    }
    // int32 total_fill_volume = 10;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_total_fill_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_fill_volume());
      }
    }
    // int32 working_volume = 11;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_working_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_working_volume());
      }
    }
    // int32 volume = 12;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    // int32 residual_volume = 14;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_residual_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_residual_volume());
      }
    }
    // int32 sequence_order = 19;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_sequence_order());
      }
    }
    // int64 trade_date = 18;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (this_._internal_trade_date() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                        this_._internal_trade_date());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateTrade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateTrade*>(&to_msg);
  auto& from = static_cast<const OrderUpdateTrade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_exchange_trade_id().empty()) {
        _this->_internal_set_exchange_trade_id(from._internal_exchange_trade_id());
      } else {
        if (_this->_impl_.exchange_trade_id_.IsDefault()) {
          _this->_internal_set_exchange_trade_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_contra_trader().empty()) {
        _this->_internal_set_contra_trader(from._internal_contra_trader());
      } else {
        if (_this->_impl_.contra_trader_.IsDefault()) {
          _this->_internal_set_contra_trader("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!from._internal_contra_broker().empty()) {
        _this->_internal_set_contra_broker(from._internal_contra_broker());
      } else {
        if (_this->_impl_.contra_broker_.IsDefault()) {
          _this->_internal_set_contra_broker("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_change() != 0) {
        _this->_impl_.change_ = from._impl_.change_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_response_pending() != 0) {
        _this->_impl_.response_pending_ = from._impl_.response_pending_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_total_fill_volume() != 0) {
        _this->_impl_.total_fill_volume_ = from._impl_.total_fill_volume_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_working_volume() != 0) {
        _this->_impl_.working_volume_ = from._impl_.working_volume_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
  }
  if ((cached_has_bits & 0x00070000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (from._internal_residual_volume() != 0) {
        _this->_impl_.residual_volume_ = from._impl_.residual_volume_;
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (from._internal_trade_date() != 0) {
        _this->_impl_.trade_date_ = from._impl_.trade_date_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateTrade::CopyFrom(const OrderUpdateTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateTrade::InternalSwap(OrderUpdateTrade* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_trade_id_, &other->_impl_.exchange_trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_trader_, &other->_impl_.contra_trader_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_broker_, &other->_impl_.contra_broker_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.trade_date_)
      + sizeof(OrderUpdateTrade::_impl_.trade_date_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdateTrade, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderUpdateTrade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdateTradeLeg::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdateTradeLeg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_._has_bits_);
};

void OrderUpdateTradeLeg::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
void OrderUpdateTradeLeg::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
void OrderUpdateTradeLeg::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000200u;
}
OrderUpdateTradeLeg::OrderUpdateTradeLeg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateTradeLeg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateTradeLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateTradeLeg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unique_id_(arena, from.unique_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_),
        status_detail_(arena, from.status_detail_),
        exchange_trade_id_(arena, from.exchange_trade_id_),
        contra_trader_(arena, from.contra_trader_),
        contra_broker_(arena, from.contra_broker_) {}

OrderUpdateTradeLeg::OrderUpdateTradeLeg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateTradeLeg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateTradeLeg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateTradeLeg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  _impl_.price_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, change_),
           offsetof(Impl_, sequence_order_) -
               offsetof(Impl_, change_) +
               sizeof(Impl_::sequence_order_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateTradeLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        unique_id_(arena),
        account_id_(arena),
        market_id_(arena),
        status_detail_(arena),
        exchange_trade_id_(arena),
        contra_trader_(arena),
        contra_broker_(arena) {}

inline void OrderUpdateTradeLeg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, sequence_order_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::sequence_order_));
}
OrderUpdateTradeLeg::~OrderUpdateTradeLeg() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  SharedDtor(*this);
}
inline void OrderUpdateTradeLeg::SharedDtor(MessageLite& self) {
  OrderUpdateTradeLeg& this_ = static_cast<OrderUpdateTradeLeg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.exchange_trade_id_.Destroy();
  this_._impl_.contra_trader_.Destroy();
  this_._impl_.contra_broker_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  delete this_._impl_.price_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdateTradeLeg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateTradeLeg(arena);
}
constexpr auto OrderUpdateTradeLeg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdateTradeLeg),
                                            alignof(OrderUpdateTradeLeg));
}
constexpr auto OrderUpdateTradeLeg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateTradeLeg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateTradeLeg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateTradeLeg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateTradeLeg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateTradeLeg>(), &OrderUpdateTradeLeg::ByteSizeLong,
              &OrderUpdateTradeLeg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_._cached_size_),
          false,
      },
      &OrderUpdateTradeLeg::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateTradeLeg_class_data_ =
        OrderUpdateTradeLeg::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateTradeLeg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateTradeLeg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateTradeLeg_class_data_.tc_table);
  return OrderUpdateTradeLeg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 3, 152, 2>
OrderUpdateTradeLeg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705152,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateTradeLeg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTradeLeg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.unique_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.market_id_)}},
    // .google.protobuf.Timestamp time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.time_)}},
    // .google.protobuf.Timestamp exchange_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 8, 1, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.exchange_time_)}},
    // .t4proto.v1.common.OrderChange change = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTradeLeg, _impl_.change_), 10>(),
     {48, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.change_)}},
    // .t4proto.v1.common.OrderStatus status = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTradeLeg, _impl_.status_), 11>(),
     {56, 11, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.status_)}},
    // string status_detail = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.status_detail_)}},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTradeLeg, _impl_.response_pending_), 12>(),
     {72, 12, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.response_pending_)}},
    // int32 leg_index = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTradeLeg, _impl_.leg_index_), 13>(),
     {80, 13, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.leg_index_)}},
    // int32 volume = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdateTradeLeg, _impl_.volume_), 14>(),
     {88, 14, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.volume_)}},
    // .t4proto.v1.common.Price price = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 9, 2, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.price_)}},
    // string exchange_trade_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 4, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.exchange_trade_id_)}},
    // string contra_trader = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 5, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.contra_trader_)}},
    // string contra_broker = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.contra_broker_)}},
    // int32 residual_volume = 16;
    {::_pbi::TcParser::FastV32S2,
     {384, 15, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.residual_volume_)}},
    // int64 trade_date = 17;
    {::_pbi::TcParser::FastV64S2,
     {392, 16, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.trade_date_)}},
    // int32 sequence_order = 18;
    {::_pbi::TcParser::FastV32S2,
     {400, 17, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.sequence_order_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.time_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp exchange_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.exchange_time_), _Internal::kHasBitsOffset + 8, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OrderChange change = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.change_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.status_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string status_detail = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.status_detail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.response_pending_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 leg_index = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.leg_index_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 volume = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.volume_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price price = 12;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.price_), _Internal::kHasBitsOffset + 9, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange_trade_id = 13;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.exchange_trade_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_trader = 14;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.contra_trader_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_broker = 15;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.contra_broker_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 residual_volume = 16;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.residual_volume_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 trade_date = 17;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.trade_date_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 sequence_order = 18;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.sequence_order_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
  }},
  {{
    "\53\11\12\11\0\0\0\0\15\0\0\0\0\21\15\15\0\0\0\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdateTradeLeg"
    "unique_id"
    "account_id"
    "market_id"
    "status_detail"
    "exchange_trade_id"
    "contra_trader"
    "contra_broker"
  }},
};
PROTOBUF_NOINLINE void OrderUpdateTradeLeg::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.exchange_trade_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.contra_trader_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.contra_broker_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000fc00u) != 0) {
    ::memset(&_impl_.change_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.residual_volume_) -
        reinterpret_cast<char*>(&_impl_.change_)) + sizeof(_impl_.residual_volume_));
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    ::memset(&_impl_.trade_date_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sequence_order_) -
        reinterpret_cast<char*>(&_impl_.trade_date_)) + sizeof(_impl_.sequence_order_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateTradeLeg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateTradeLeg& this_ = static_cast<const OrderUpdateTradeLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateTradeLeg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateTradeLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp time = 4;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp exchange_time = 5;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OrderChange change = 6;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_change(), target);
    }
  }

  // .t4proto.v1.common.OrderStatus status = 7;
  if ((cached_has_bits & 0x00000800u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_status(), target);
    }
  }

  // string status_detail = 8;
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.status_detail");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .t4proto.v1.common.ResponsePending response_pending = 9;
  if ((cached_has_bits & 0x00001000u) != 0) {
    if (this_._internal_response_pending() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_response_pending(), target);
    }
  }

  // int32 leg_index = 10;
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (this_._internal_leg_index() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
              stream, this_._internal_leg_index(), target);
    }
  }

  // int32 volume = 11;
  if ((cached_has_bits & 0x00004000u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
              stream, this_._internal_volume(), target);
    }
  }

  // .t4proto.v1.common.Price price = 12;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // string exchange_trade_id = 13;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (!this_._internal_exchange_trade_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_trade_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.exchange_trade_id");
      target = stream->WriteStringMaybeAliased(13, _s, target);
    }
  }

  // string contra_trader = 14;
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (!this_._internal_contra_trader().empty()) {
      const ::std::string& _s = this_._internal_contra_trader();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.contra_trader");
      target = stream->WriteStringMaybeAliased(14, _s, target);
    }
  }

  // string contra_broker = 15;
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (!this_._internal_contra_broker().empty()) {
      const ::std::string& _s = this_._internal_contra_broker();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateTradeLeg.contra_broker");
      target = stream->WriteStringMaybeAliased(15, _s, target);
    }
  }

  // int32 residual_volume = 16;
  if ((cached_has_bits & 0x00008000u) != 0) {
    if (this_._internal_residual_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          16, this_._internal_residual_volume(), target);
    }
  }

  // int64 trade_date = 17;
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (this_._internal_trade_date() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt64ToArray(
          17, this_._internal_trade_date(), target);
    }
  }

  // int32 sequence_order = 18;
  if ((cached_has_bits & 0x00020000u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          18, this_._internal_sequence_order(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateTradeLeg::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateTradeLeg& this_ = static_cast<const OrderUpdateTradeLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateTradeLeg::ByteSizeLong() const {
  const OrderUpdateTradeLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string status_detail = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string exchange_trade_id = 13;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_exchange_trade_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_trade_id());
      }
    }
    // string contra_trader = 14;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_contra_trader().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_trader());
      }
    }
    // string contra_broker = 15;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!this_._internal_contra_broker().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_broker());
      }
    }
    // .google.protobuf.Timestamp time = 4;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // .google.protobuf.Timestamp exchange_time = 5;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // .t4proto.v1.common.Price price = 12;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // .t4proto.v1.common.OrderChange change = 6;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_change() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_change());
      }
    }
    // .t4proto.v1.common.OrderStatus status = 7;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_response_pending() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_response_pending());
      }
    }
    // int32 leg_index = 10;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_leg_index() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_leg_index());
      }
    }
    // int32 volume = 11;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
    // int32 residual_volume = 16;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_residual_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_residual_volume());
      }
    }
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    // int64 trade_date = 17;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_trade_date() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                        this_._internal_trade_date());
      }
    }
    // int32 sequence_order = 18;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_sequence_order());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateTradeLeg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateTradeLeg*>(&to_msg);
  auto& from = static_cast<const OrderUpdateTradeLeg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_exchange_trade_id().empty()) {
        _this->_internal_set_exchange_trade_id(from._internal_exchange_trade_id());
      } else {
        if (_this->_impl_.exchange_trade_id_.IsDefault()) {
          _this->_internal_set_exchange_trade_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_contra_trader().empty()) {
        _this->_internal_set_contra_trader(from._internal_contra_trader());
      } else {
        if (_this->_impl_.contra_trader_.IsDefault()) {
          _this->_internal_set_contra_trader("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!from._internal_contra_broker().empty()) {
        _this->_internal_set_contra_broker(from._internal_contra_broker());
      } else {
        if (_this->_impl_.contra_broker_.IsDefault()) {
          _this->_internal_set_contra_broker("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_change() != 0) {
        _this->_impl_.change_ = from._impl_.change_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_response_pending() != 0) {
        _this->_impl_.response_pending_ = from._impl_.response_pending_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_leg_index() != 0) {
        _this->_impl_.leg_index_ = from._impl_.leg_index_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_residual_volume() != 0) {
        _this->_impl_.residual_volume_ = from._impl_.residual_volume_;
      }
    }
  }
  if ((cached_has_bits & 0x00030000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (from._internal_trade_date() != 0) {
        _this->_impl_.trade_date_ = from._impl_.trade_date_;
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateTradeLeg::CopyFrom(const OrderUpdateTradeLeg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateTradeLeg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateTradeLeg::InternalSwap(OrderUpdateTradeLeg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_trade_id_, &other->_impl_.exchange_trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_trader_, &other->_impl_.contra_trader_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_broker_, &other->_impl_.contra_broker_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.sequence_order_)
      + sizeof(OrderUpdateTradeLeg::_impl_.sequence_order_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdateTradeLeg, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderUpdateTradeLeg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdate_Trade::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdate_Trade>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_._has_bits_);
};

void OrderUpdate_Trade::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderUpdate_Trade::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OrderUpdate_Trade::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
OrderUpdate_Trade::OrderUpdate_Trade(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_Trade_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdate.Trade)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate_Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdate_Trade& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exchange_trade_id_(arena, from.exchange_trade_id_),
        contra_trader_(arena, from.contra_trader_),
        contra_broker_(arena, from.contra_broker_) {}

OrderUpdate_Trade::OrderUpdate_Trade(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdate_Trade& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_Trade_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdate_Trade* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  _impl_.time_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_order_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_order_),
           offsetof(Impl_, residual_volume_) -
               offsetof(Impl_, sequence_order_) +
               sizeof(Impl_::residual_volume_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdate.Trade)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate_Trade::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exchange_trade_id_(arena),
        contra_trader_(arena),
        contra_broker_(arena) {}

inline void OrderUpdate_Trade::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, residual_volume_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::residual_volume_));
}
OrderUpdate_Trade::~OrderUpdate_Trade() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdate.Trade)
  SharedDtor(*this);
}
inline void OrderUpdate_Trade::SharedDtor(MessageLite& self) {
  OrderUpdate_Trade& this_ = static_cast<OrderUpdate_Trade&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.exchange_trade_id_.Destroy();
  this_._impl_.contra_trader_.Destroy();
  this_._impl_.contra_broker_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdate_Trade::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdate_Trade(arena);
}
constexpr auto OrderUpdate_Trade::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdate_Trade),
                                            alignof(OrderUpdate_Trade));
}
constexpr auto OrderUpdate_Trade::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdate_Trade_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdate_Trade::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdate_Trade>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdate_Trade::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdate_Trade>(), &OrderUpdate_Trade::ByteSizeLong,
              &OrderUpdate_Trade::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_._cached_size_),
          false,
      },
      &OrderUpdate_Trade::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdate_Trade_class_data_ =
        OrderUpdate_Trade::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdate_Trade::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdate_Trade_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdate_Trade_class_data_.tc_table);
  return OrderUpdate_Trade_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 3, 101, 2>
OrderUpdate_Trade::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdate_Trade_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate_Trade>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sequence_order = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_Trade, _impl_.sequence_order_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.sequence_order_)}},
    // int32 volume = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_Trade, _impl_.volume_), 7>(),
     {16, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.volume_)}},
    // .t4proto.v1.common.Price price = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.price_)}},
    // int32 residual_volume = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_Trade, _impl_.residual_volume_), 9>(),
     {32, 9, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.residual_volume_)}},
    // .google.protobuf.Timestamp time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 1, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.time_)}},
    // string exchange_trade_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.exchange_trade_id_)}},
    // .google.protobuf.Timestamp exchange_time = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 2, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.exchange_time_)}},
    // string contra_trader = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.contra_trader_)}},
    // string contra_broker = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.contra_broker_)}},
    // int64 trade_date = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderUpdate_Trade, _impl_.trade_date_), 8>(),
     {80, 8, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.trade_date_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 sequence_order = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.sequence_order_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 volume = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.volume_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price price = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 residual_volume = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.residual_volume_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .google.protobuf.Timestamp time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.time_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange_trade_id = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.exchange_trade_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp exchange_time = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.exchange_time_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string contra_trader = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.contra_trader_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_broker = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.contra_broker_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 trade_date = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.trade_date_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\51\0\0\0\0\0\21\0\15\15\0\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdate.Trade"
    "exchange_trade_id"
    "contra_trader"
    "contra_broker"
  }},
};
PROTOBUF_NOINLINE void OrderUpdate_Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdate.Trade)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.exchange_trade_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.contra_trader_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.contra_broker_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.sequence_order_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.volume_) -
        reinterpret_cast<char*>(&_impl_.sequence_order_)) + sizeof(_impl_.volume_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.trade_date_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.residual_volume_) -
        reinterpret_cast<char*>(&_impl_.trade_date_)) + sizeof(_impl_.residual_volume_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdate_Trade::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdate_Trade& this_ = static_cast<const OrderUpdate_Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdate_Trade::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdate_Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdate.Trade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 sequence_order = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_sequence_order(), target);
    }
  }

  // int32 volume = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_volume(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .t4proto.v1.common.Price price = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // int32 residual_volume = 4;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_residual_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_residual_volume(), target);
    }
  }

  // .google.protobuf.Timestamp time = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // string exchange_trade_id = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_exchange_trade_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_trade_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.Trade.exchange_trade_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // .google.protobuf.Timestamp exchange_time = 7;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // string contra_trader = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_contra_trader().empty()) {
      const ::std::string& _s = this_._internal_contra_trader();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.Trade.contra_trader");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // string contra_broker = 9;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_contra_broker().empty()) {
      const ::std::string& _s = this_._internal_contra_broker();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.Trade.contra_broker");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // int64 trade_date = 10;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_trade_date() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<10>(
              stream, this_._internal_trade_date(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdate.Trade)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdate_Trade::ByteSizeLong(const MessageLite& base) {
  const OrderUpdate_Trade& this_ = static_cast<const OrderUpdate_Trade&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdate_Trade::ByteSizeLong() const {
  const OrderUpdate_Trade& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdate.Trade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string exchange_trade_id = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_exchange_trade_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_trade_id());
      }
    }
    // string contra_trader = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_contra_trader().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_trader());
      }
    }
    // string contra_broker = 9;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_contra_broker().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_broker());
      }
    }
    // .t4proto.v1.common.Price price = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // .google.protobuf.Timestamp time = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
    // .google.protobuf.Timestamp exchange_time = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // int32 sequence_order = 1;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sequence_order());
      }
    }
    // int32 volume = 2;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // int64 trade_date = 10;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_trade_date() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_trade_date());
      }
    }
    // int32 residual_volume = 4;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_residual_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_residual_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdate_Trade::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdate_Trade*>(&to_msg);
  auto& from = static_cast<const OrderUpdate_Trade&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdate.Trade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_exchange_trade_id().empty()) {
        _this->_internal_set_exchange_trade_id(from._internal_exchange_trade_id());
      } else {
        if (_this->_impl_.exchange_trade_id_.IsDefault()) {
          _this->_internal_set_exchange_trade_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_contra_trader().empty()) {
        _this->_internal_set_contra_trader(from._internal_contra_trader());
      } else {
        if (_this->_impl_.contra_trader_.IsDefault()) {
          _this->_internal_set_contra_trader("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_contra_broker().empty()) {
        _this->_internal_set_contra_broker(from._internal_contra_broker());
      } else {
        if (_this->_impl_.contra_broker_.IsDefault()) {
          _this->_internal_set_contra_broker("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_trade_date() != 0) {
        _this->_impl_.trade_date_ = from._impl_.trade_date_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_residual_volume() != 0) {
        _this->_impl_.residual_volume_ = from._impl_.residual_volume_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdate_Trade::CopyFrom(const OrderUpdate_Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdate.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdate_Trade::InternalSwap(OrderUpdate_Trade* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_trade_id_, &other->_impl_.exchange_trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_trader_, &other->_impl_.contra_trader_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_broker_, &other->_impl_.contra_broker_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.residual_volume_)
      + sizeof(OrderUpdate_Trade::_impl_.residual_volume_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdate_Trade, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderUpdate_Trade::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdate_TradeLeg::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdate_TradeLeg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_._has_bits_);
};

void OrderUpdate_TradeLeg::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ != nullptr) _impl_.price_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void OrderUpdate_TradeLeg::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void OrderUpdate_TradeLeg::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
OrderUpdate_TradeLeg::OrderUpdate_TradeLeg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_TradeLeg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate_TradeLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdate_TradeLeg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exchange_trade_id_(arena, from.exchange_trade_id_),
        contra_trader_(arena, from.contra_trader_),
        contra_broker_(arena, from.contra_broker_) {}

OrderUpdate_TradeLeg::OrderUpdate_TradeLeg(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdate_TradeLeg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_TradeLeg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdate_TradeLeg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.price_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_)
                : nullptr;
  _impl_.time_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_order_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_order_),
           offsetof(Impl_, trade_date_) -
               offsetof(Impl_, sequence_order_) +
               sizeof(Impl_::trade_date_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate_TradeLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exchange_trade_id_(arena),
        contra_trader_(arena),
        contra_broker_(arena) {}

inline void OrderUpdate_TradeLeg::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, trade_date_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::trade_date_));
}
OrderUpdate_TradeLeg::~OrderUpdate_TradeLeg() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  SharedDtor(*this);
}
inline void OrderUpdate_TradeLeg::SharedDtor(MessageLite& self) {
  OrderUpdate_TradeLeg& this_ = static_cast<OrderUpdate_TradeLeg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.exchange_trade_id_.Destroy();
  this_._impl_.contra_trader_.Destroy();
  this_._impl_.contra_broker_.Destroy();
  delete this_._impl_.price_;
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdate_TradeLeg::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdate_TradeLeg(arena);
}
constexpr auto OrderUpdate_TradeLeg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdate_TradeLeg),
                                            alignof(OrderUpdate_TradeLeg));
}
constexpr auto OrderUpdate_TradeLeg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdate_TradeLeg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdate_TradeLeg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdate_TradeLeg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdate_TradeLeg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdate_TradeLeg>(), &OrderUpdate_TradeLeg::ByteSizeLong,
              &OrderUpdate_TradeLeg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_._cached_size_),
          false,
      },
      &OrderUpdate_TradeLeg::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdate_TradeLeg_class_data_ =
        OrderUpdate_TradeLeg::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdate_TradeLeg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdate_TradeLeg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdate_TradeLeg_class_data_.tc_table);
  return OrderUpdate_TradeLeg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 3, 104, 2>
OrderUpdate_TradeLeg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdate_TradeLeg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate_TradeLeg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sequence_order = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_TradeLeg, _impl_.sequence_order_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.sequence_order_)}},
    // int32 leg_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_TradeLeg, _impl_.leg_index_), 7>(),
     {16, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.leg_index_)}},
    // int32 volume = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_TradeLeg, _impl_.volume_), 8>(),
     {24, 8, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.volume_)}},
    // .t4proto.v1.common.Price price = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.price_)}},
    // .google.protobuf.Timestamp time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 1, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.time_)}},
    // string exchange_trade_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.exchange_trade_id_)}},
    // .google.protobuf.Timestamp exchange_time = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 5, 2, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.exchange_time_)}},
    // string contra_trader = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.contra_trader_)}},
    // string contra_broker = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.contra_broker_)}},
    // int32 residual_volume = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderUpdate_TradeLeg, _impl_.residual_volume_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.residual_volume_)}},
    // int64 trade_date = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderUpdate_TradeLeg, _impl_.trade_date_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.trade_date_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 sequence_order = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.sequence_order_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 leg_index = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.leg_index_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 volume = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.volume_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price price = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.time_), _Internal::kHasBitsOffset + 4, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string exchange_trade_id = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.exchange_trade_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp exchange_time = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.exchange_time_), _Internal::kHasBitsOffset + 5, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string contra_trader = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.contra_trader_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contra_broker = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.contra_broker_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 residual_volume = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.residual_volume_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 trade_date = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.trade_date_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\54\0\0\0\0\0\21\0\15\15\0\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdate.TradeLeg"
    "exchange_trade_id"
    "contra_trader"
    "contra_broker"
  }},
};
PROTOBUF_NOINLINE void OrderUpdate_TradeLeg::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.exchange_trade_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.contra_trader_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.contra_broker_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.price_ != nullptr);
      _impl_.price_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
  }
  if ((cached_has_bits & 0x000000c0u) != 0) {
    ::memset(&_impl_.sequence_order_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.leg_index_) -
        reinterpret_cast<char*>(&_impl_.sequence_order_)) + sizeof(_impl_.leg_index_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.trade_date_) -
        reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.trade_date_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdate_TradeLeg::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdate_TradeLeg& this_ = static_cast<const OrderUpdate_TradeLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdate_TradeLeg::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdate_TradeLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 sequence_order = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_sequence_order(), target);
    }
  }

  // int32 leg_index = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_leg_index() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_leg_index(), target);
    }
  }

  // int32 volume = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_volume(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .t4proto.v1.common.Price price = 4;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.price_, this_._impl_.price_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp time = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // string exchange_trade_id = 6;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_exchange_trade_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_trade_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.TradeLeg.exchange_trade_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // .google.protobuf.Timestamp exchange_time = 7;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // string contra_trader = 8;
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_contra_trader().empty()) {
      const ::std::string& _s = this_._internal_contra_trader();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.TradeLeg.contra_trader");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // string contra_broker = 9;
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_contra_broker().empty()) {
      const ::std::string& _s = this_._internal_contra_broker();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.TradeLeg.contra_broker");
      target = stream->WriteStringMaybeAliased(9, _s, target);
    }
  }

  // int32 residual_volume = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_residual_volume() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<10>(
              stream, this_._internal_residual_volume(), target);
    }
  }

  // int64 trade_date = 11;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_trade_date() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<11>(
              stream, this_._internal_trade_date(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdate_TradeLeg::ByteSizeLong(const MessageLite& base) {
  const OrderUpdate_TradeLeg& this_ = static_cast<const OrderUpdate_TradeLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdate_TradeLeg::ByteSizeLong() const {
  const OrderUpdate_TradeLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string exchange_trade_id = 6;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_exchange_trade_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_trade_id());
      }
    }
    // string contra_trader = 8;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_contra_trader().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_trader());
      }
    }
    // string contra_broker = 9;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_contra_broker().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_contra_broker());
      }
    }
    // .t4proto.v1.common.Price price = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.price_);
    }
    // .google.protobuf.Timestamp time = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
    // .google.protobuf.Timestamp exchange_time = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // int32 sequence_order = 1;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sequence_order());
      }
    }
    // int32 leg_index = 2;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_leg_index() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_leg_index());
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // int32 volume = 3;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_volume());
      }
    }
    // int32 residual_volume = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_residual_volume() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_residual_volume());
      }
    }
    // int64 trade_date = 11;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_trade_date() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_trade_date());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdate_TradeLeg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdate_TradeLeg*>(&to_msg);
  auto& from = static_cast<const OrderUpdate_TradeLeg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_exchange_trade_id().empty()) {
        _this->_internal_set_exchange_trade_id(from._internal_exchange_trade_id());
      } else {
        if (_this->_impl_.exchange_trade_id_.IsDefault()) {
          _this->_internal_set_exchange_trade_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_contra_trader().empty()) {
        _this->_internal_set_contra_trader(from._internal_contra_trader());
      } else {
        if (_this->_impl_.contra_trader_.IsDefault()) {
          _this->_internal_set_contra_trader("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_contra_broker().empty()) {
        _this->_internal_set_contra_broker(from._internal_contra_broker());
      } else {
        if (_this->_impl_.contra_broker_.IsDefault()) {
          _this->_internal_set_contra_broker("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.price_ != nullptr);
      if (_this->_impl_.price_ == nullptr) {
        _this->_impl_.price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.price_);
      } else {
        _this->_impl_.price_->MergeFrom(*from._impl_.price_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_leg_index() != 0) {
        _this->_impl_.leg_index_ = from._impl_.leg_index_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_volume() != 0) {
        _this->_impl_.volume_ = from._impl_.volume_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_residual_volume() != 0) {
        _this->_impl_.residual_volume_ = from._impl_.residual_volume_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_trade_date() != 0) {
        _this->_impl_.trade_date_ = from._impl_.trade_date_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdate_TradeLeg::CopyFrom(const OrderUpdate_TradeLeg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdate.TradeLeg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdate_TradeLeg::InternalSwap(OrderUpdate_TradeLeg* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_trade_id_, &other->_impl_.exchange_trade_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_trader_, &other->_impl_.contra_trader_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contra_broker_, &other->_impl_.contra_broker_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.trade_date_)
      + sizeof(OrderUpdate_TradeLeg::_impl_.trade_date_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdate_TradeLeg, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata OrderUpdate_TradeLeg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
OrderUpdate_InstructionExtraEntry_DoNotUse::OrderUpdate_InstructionExtraEntry_DoNotUse()
    : SuperType(OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.base()) {}
OrderUpdate_InstructionExtraEntry_DoNotUse::OrderUpdate_InstructionExtraEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
OrderUpdate_InstructionExtraEntry_DoNotUse::OrderUpdate_InstructionExtraEntry_DoNotUse() : SuperType() {}
OrderUpdate_InstructionExtraEntry_DoNotUse::OrderUpdate_InstructionExtraEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL OrderUpdate_InstructionExtraEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdate_InstructionExtraEntry_DoNotUse(arena);
}
constexpr auto OrderUpdate_InstructionExtraEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderUpdate_InstructionExtraEntry_DoNotUse),
                                            alignof(OrderUpdate_InstructionExtraEntry_DoNotUse));
}
constexpr auto OrderUpdate_InstructionExtraEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdate_InstructionExtraEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdate_InstructionExtraEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdate_InstructionExtraEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdate_InstructionExtraEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&OrderUpdate_InstructionExtraEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &OrderUpdate_InstructionExtraEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_ =
        OrderUpdate_InstructionExtraEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdate_InstructionExtraEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.tc_table);
  return OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2>
OrderUpdate_InstructionExtraEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderUpdate_InstructionExtraEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate_InstructionExtraEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate_InstructionExtraEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\71\3\5\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdate.InstructionExtraEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class OrderUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_._has_bits_);
};

void OrderUpdate::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[1] &= ~0x00000002u;
}
void OrderUpdate::clear_exchange_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exchange_time_ != nullptr) _impl_.exchange_time_->Clear();
  _impl_._has_bits_[1] &= ~0x00000004u;
}
void OrderUpdate::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[1] &= ~0x00000008u;
}
void OrderUpdate::clear_current_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_limit_price_ != nullptr) _impl_.current_limit_price_->Clear();
  _impl_._has_bits_[1] &= ~0x00000010u;
}
void OrderUpdate::clear_current_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_stop_price_ != nullptr) _impl_.current_stop_price_->Clear();
  _impl_._has_bits_[1] &= ~0x00000020u;
}
void OrderUpdate::clear_new_limit_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_limit_price_ != nullptr) _impl_.new_limit_price_->Clear();
  _impl_._has_bits_[1] &= ~0x00000040u;
}
void OrderUpdate::clear_new_stop_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_stop_price_ != nullptr) _impl_.new_stop_price_->Clear();
  _impl_._has_bits_[1] &= ~0x00000080u;
}
void OrderUpdate::clear_trail_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trail_price_ != nullptr) _impl_.trail_price_->Clear();
  _impl_._has_bits_[1] &= ~0x00000100u;
}
void OrderUpdate::clear_receive_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.receive_time_ != nullptr) _impl_.receive_time_->Clear();
  _impl_._has_bits_[1] &= ~0x00000200u;
}
OrderUpdate::OrderUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdate)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        instruction_extra_{visibility, arena, from.instruction_extra_},
        trades_{visibility, arena, from.trades_},
        trade_legs_{visibility, arena, from.trade_legs_},
        unique_id_(arena, from.unique_id_),
        account_id_(arena, from.account_id_),
        market_id_(arena, from.market_id_),
        status_detail_(arena, from.status_detail_),
        exchange_order_id_(arena, from.exchange_order_id_),
        exchange_id_(arena, from.exchange_id_),
        exchange_login_id_(arena, from.exchange_login_id_),
        executing_login_id_(arena, from.executing_login_id_),
        exchange_location_(arena, from.exchange_location_),
        user_id_(arena, from.user_id_),
        user_name_(arena, from.user_name_),
        user_address_(arena, from.user_address_),
        session_id_(arena, from.session_id_),
        app_id_(arena, from.app_id_),
        app_name_(arena, from.app_name_),
        account_number_(arena, from.account_number_),
        member_allocation_(arena, from.member_allocation_),
        trader_allocation_(arena, from.trader_allocation_),
        customer_reference_(arena, from.customer_reference_),
        avg_price_group_id_(arena, from.avg_price_group_id_),
        omnibus_account_(arena, from.omnibus_account_),
        executing_group_id_(arena, from.executing_group_id_),
        tag_(arena, from.tag_),
        orders_linked_(arena, from.orders_linked_),
        routing_user_id_(arena, from.routing_user_id_),
        routing_user_name_(arena, from.routing_user_name_),
        tag_cl_ord_id_(arena, from.tag_cl_ord_id_),
        tag_orig_cl_ord_id_(arena, from.tag_orig_cl_ord_id_),
        tag_relation_id_(arena, from.tag_relation_id_),
        smp_id_(arena, from.smp_id_),
        ats_regulatory_id_(arena, from.ats_regulatory_id_),
        authorized_trader_id_(arena, from.authorized_trader_id_),
        activation_details_(arena, from.activation_details_) {}

OrderUpdate::OrderUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[1];
  _impl_.time_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_)
                : nullptr;
  _impl_.exchange_time_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_)
                : nullptr;
  _impl_.submit_time_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.submit_time_)
                : nullptr;
  _impl_.current_limit_price_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_limit_price_)
                : nullptr;
  _impl_.current_stop_price_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_stop_price_)
                : nullptr;
  _impl_.new_limit_price_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_limit_price_)
                : nullptr;
  _impl_.new_stop_price_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_stop_price_)
                : nullptr;
  _impl_.trail_price_ = ((cached_has_bits & 0x00000100u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_)
                : nullptr;
  _impl_.receive_time_ = ((cached_has_bits & 0x00000200u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.receive_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, change_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, change_),
           offsetof(Impl_, max_volume_) -
               offsetof(Impl_, change_) +
               sizeof(Impl_::max_volume_));

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdate)
}
PROTOBUF_NDEBUG_INLINE OrderUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        instruction_extra_{visibility, arena},
        trades_{visibility, arena},
        trade_legs_{visibility, arena},
        unique_id_(arena),
        account_id_(arena),
        market_id_(arena),
        status_detail_(arena),
        exchange_order_id_(arena),
        exchange_id_(arena),
        exchange_login_id_(arena),
        executing_login_id_(arena),
        exchange_location_(arena),
        user_id_(arena),
        user_name_(arena),
        user_address_(arena),
        session_id_(arena),
        app_id_(arena),
        app_name_(arena),
        account_number_(arena),
        member_allocation_(arena),
        trader_allocation_(arena),
        customer_reference_(arena),
        avg_price_group_id_(arena),
        omnibus_account_(arena),
        executing_group_id_(arena),
        tag_(arena),
        orders_linked_(arena),
        routing_user_id_(arena),
        routing_user_name_(arena),
        tag_cl_ord_id_(arena),
        tag_orig_cl_ord_id_(arena),
        tag_relation_id_(arena),
        smp_id_(arena),
        ats_regulatory_id_(arena),
        authorized_trader_id_(arena),
        activation_details_(arena) {}

inline void OrderUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, max_volume_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::max_volume_));
}
OrderUpdate::~OrderUpdate() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdate)
  SharedDtor(*this);
}
inline void OrderUpdate::SharedDtor(MessageLite& self) {
  OrderUpdate& this_ = static_cast<OrderUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.unique_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.market_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.exchange_order_id_.Destroy();
  this_._impl_.exchange_id_.Destroy();
  this_._impl_.exchange_login_id_.Destroy();
  this_._impl_.executing_login_id_.Destroy();
  this_._impl_.exchange_location_.Destroy();
  this_._impl_.user_id_.Destroy();
  this_._impl_.user_name_.Destroy();
  this_._impl_.user_address_.Destroy();
  this_._impl_.session_id_.Destroy();
  this_._impl_.app_id_.Destroy();
  this_._impl_.app_name_.Destroy();
  this_._impl_.account_number_.Destroy();
  this_._impl_.member_allocation_.Destroy();
  this_._impl_.trader_allocation_.Destroy();
  this_._impl_.customer_reference_.Destroy();
  this_._impl_.avg_price_group_id_.Destroy();
  this_._impl_.omnibus_account_.Destroy();
  this_._impl_.executing_group_id_.Destroy();
  this_._impl_.tag_.Destroy();
  this_._impl_.orders_linked_.Destroy();
  this_._impl_.routing_user_id_.Destroy();
  this_._impl_.routing_user_name_.Destroy();
  this_._impl_.tag_cl_ord_id_.Destroy();
  this_._impl_.tag_orig_cl_ord_id_.Destroy();
  this_._impl_.tag_relation_id_.Destroy();
  this_._impl_.smp_id_.Destroy();
  this_._impl_.ats_regulatory_id_.Destroy();
  this_._impl_.authorized_trader_id_.Destroy();
  this_._impl_.activation_details_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.exchange_time_;
  delete this_._impl_.submit_time_;
  delete this_._impl_.current_limit_price_;
  delete this_._impl_.current_stop_price_;
  delete this_._impl_.new_limit_price_;
  delete this_._impl_.new_stop_price_;
  delete this_._impl_.trail_price_;
  delete this_._impl_.receive_time_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdate(arena);
}
constexpr auto OrderUpdate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.instruction_extra_) +
          decltype(OrderUpdate::_impl_.instruction_extra_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.instruction_extra_) +
          decltype(OrderUpdate::_impl_.instruction_extra_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trades_) +
          decltype(OrderUpdate::_impl_.trades_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trade_legs_) +
          decltype(OrderUpdate::_impl_.trade_legs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderUpdate), alignof(OrderUpdate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderUpdate::PlacementNew_,
                                 sizeof(OrderUpdate),
                                 alignof(OrderUpdate));
  }
}
constexpr auto OrderUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdate>(), &OrderUpdate::ByteSizeLong,
              &OrderUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_._cached_size_),
          false,
      },
      &OrderUpdate::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdate_class_data_ =
        OrderUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdate_class_data_.tc_table);
  return OrderUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 78, 12, 578, 11>
OrderUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_._has_bits_),
    0, // no _extensions_
    78, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    78,  // num_field_entries
    12,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string unique_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.unique_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.account_id_)}},
    // string market_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.market_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string status_detail = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 3, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.status_detail_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string exchange_order_id = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 4, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_order_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string exchange_id = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 5, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_id_)}},
    // string exchange_login_id = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 6, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_login_id_)}},
    // string executing_login_id = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 7, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.executing_login_id_)}},
    // string exchange_location = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 8, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_location_)}},
    // string user_id = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 9, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_id_)}},
    // string user_name = 18;
    {::_pbi::TcParser::FastUS2,
     {402, 10, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_name_)}},
    // string user_address = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 11, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_address_)}},
    // string session_id = 20;
    {::_pbi::TcParser::FastUS2,
     {418, 12, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.session_id_)}},
    // string app_id = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 13, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.app_id_)}},
    // string app_name = 22;
    {::_pbi::TcParser::FastUS2,
     {434, 14, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.app_name_)}},
    // string customer_reference = 39;
    {::_pbi::TcParser::FastUS2,
     {698, 18, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.customer_reference_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string authorized_trader_id = 73;
    {::_pbi::TcParser::FastUS2,
     {1226, 31, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.authorized_trader_id_)}},
    // string avg_price_group_id = 42;
    {::_pbi::TcParser::FastUS2,
     {722, 19, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.avg_price_group_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string routing_user_id = 60;
    {::_pbi::TcParser::FastUS2,
     {994, 24, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.routing_user_id_)}},
    // string omnibus_account = 45;
    {::_pbi::TcParser::FastUS2,
     {746, 20, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.omnibus_account_)}},
    // string executing_group_id = 46;
    {::_pbi::TcParser::FastUS2,
     {754, 21, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.executing_group_id_)}},
    // string tag = 47;
    {::_pbi::TcParser::FastUS2,
     {762, 22, 0, PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.tag_)}},
  }}, {{
    33, 0, 3,
    0, 32,
    0, 48,
    49152, 64,
    65535, 65535
  }}, {{
    // string unique_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.unique_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string market_id = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.market_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.time_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp exchange_time = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_time_), _Internal::kHasBitsOffset + 34, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OrderChange change = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.change_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderStatus status = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.status_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string status_detail = 8;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.status_detail_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.response_pending_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string exchange_order_id = 10;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_order_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp submit_time = 11;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.submit_time_), _Internal::kHasBitsOffset + 35, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 trade_date = 12;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trade_date_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string exchange_id = 13;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange_login_id = 14;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_login_id_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string executing_login_id = 15;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.executing_login_id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange_location = 16;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_location_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_id = 17;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_id_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_name = 18;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_name_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_address = 19;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.user_address_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string session_id = 20;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.session_id_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_id = 21;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.app_id_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string app_name = 22;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.app_name_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.BuySell buy_sell = 23;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.buy_sell_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.PriceType price_type = 24;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.price_type_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.TimeType time_type = 25;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.time_type_), _Internal::kHasBitsOffset + 48, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 current_volume = 26;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.current_volume_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price current_limit_price = 27;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.current_limit_price_), _Internal::kHasBitsOffset + 36, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.Price current_stop_price = 28;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.current_stop_price_), _Internal::kHasBitsOffset + 37, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 new_volume = 29;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.new_volume_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price new_limit_price = 30;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.new_limit_price_), _Internal::kHasBitsOffset + 38, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.Price new_stop_price = 31;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.new_stop_price_), _Internal::kHasBitsOffset + 39, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.common.OpenClose open_close = 32;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.open_close_), _Internal::kHasBitsOffset + 51, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string account_number = 33;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.account_number_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.CTI cti = 34;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.cti_), _Internal::kHasBitsOffset + 52, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.Origin origin = 35;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.origin_), _Internal::kHasBitsOffset + 53, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.AccountCode account_code = 36;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.account_code_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string member_allocation = 37;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.member_allocation_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trader_allocation = 38;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trader_allocation_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string customer_reference = 39;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.customer_reference_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.CustOrderHandlingInstType cust_order_handling_inst = 40;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.cust_order_handling_inst_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.AvgPriceIndicatorType avg_price_indicator = 41;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.avg_price_indicator_), _Internal::kHasBitsOffset + 56, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string avg_price_group_id = 42;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.avg_price_group_id_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ClearingTradePriceType clearing_trade_price_type = 43;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.clearing_trade_price_type_), _Internal::kHasBitsOffset + 57, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.BillingFee billing_fee = 44;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.billing_fee_), _Internal::kHasBitsOffset + 58, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string omnibus_account = 45;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.omnibus_account_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string executing_group_id = 46;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.executing_group_id_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag = 47;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.tag_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_fill_volume = 48;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.total_fill_volume_), _Internal::kHasBitsOffset + 59, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 working_volume = 49;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.working_volume_), _Internal::kHasBitsOffset + 60, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 exchange_total_fill_volume = 50;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.exchange_total_fill_volume_), _Internal::kHasBitsOffset + 61, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.Price trail_price = 51;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trail_price_), _Internal::kHasBitsOffset + 40, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 trail_revision_interval = 52;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trail_revision_interval_), _Internal::kHasBitsOffset + 62, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 trail_revision_change = 53;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trail_revision_change_), _Internal::kHasBitsOffset + 63, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .t4proto.v1.common.OrderLink order_link = 54;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.order_link_), _Internal::kHasBitsOffset + 64, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string orders_linked = 55;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.orders_linked_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.ActivationType activation_type = 56;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.activation_type_), _Internal::kHasBitsOffset + 65, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.PrimaryUserType primary_user = 57;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.primary_user_), _Internal::kHasBitsOffset + 66, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 current_max_show = 58;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.current_max_show_), _Internal::kHasBitsOffset + 67, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 new_max_show = 59;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.new_max_show_), _Internal::kHasBitsOffset + 68, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string routing_user_id = 60;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.routing_user_id_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string routing_user_name = 61;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.routing_user_name_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.OrderSource order_source = 62;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.order_source_), _Internal::kHasBitsOffset + 69, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.OrderSourceMethod order_source_method = 63;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.order_source_method_), _Internal::kHasBitsOffset + 70, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.ApplicationType app_type = 64;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.app_type_), _Internal::kHasBitsOffset + 71, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .t4proto.v1.common.MasterType master_type = 65;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.master_type_), _Internal::kHasBitsOffset + 72, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string tag_cl_ord_id = 66;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.tag_cl_ord_id_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_orig_cl_ord_id = 67;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.tag_orig_cl_ord_id_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tag_relation_id = 68;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.tag_relation_id_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string smp_id = 69;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.smp_id_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sequence_order = 70;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.sequence_order_), _Internal::kHasBitsOffset + 73, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string ats_regulatory_id = 71;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.ats_regulatory_id_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 max_volume = 72;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.max_volume_), _Internal::kHasBitsOffset + 74, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string authorized_trader_id = 73;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.authorized_trader_id_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> instruction_extra = 74;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.instruction_extra_), -1, 11,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .google.protobuf.Timestamp receive_time = 75;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.receive_time_), _Internal::kHasBitsOffset + 41, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string activation_details = 76;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.activation_details_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .t4proto.v1.orderrouting.OrderUpdate.Trade trades = 77;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trades_), -1, 9,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .t4proto.v1.orderrouting.OrderUpdate.TradeLeg trade_legs = 78;
    {PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.trade_legs_), -1, 10,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::common::Price>()},
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate_Trade>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate_TradeLeg>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\43\11\12\11\0\0\0\0\15\0\21\0\0\13\21\22\21\7\11\14\12\6\10\0\0\0\0\0\0\0\0\0\0\16\0\0\0\21\21\22\0\0\22\0\0\17\22\3\0\0\0\0\0\0\0\15\0\0\0\0\17\21\0\0\0\0\15\22\17\6\0\21\0\24\21\0\22\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdate"
    "unique_id"
    "account_id"
    "market_id"
    "status_detail"
    "exchange_order_id"
    "exchange_id"
    "exchange_login_id"
    "executing_login_id"
    "exchange_location"
    "user_id"
    "user_name"
    "user_address"
    "session_id"
    "app_id"
    "app_name"
    "account_number"
    "member_allocation"
    "trader_allocation"
    "customer_reference"
    "avg_price_group_id"
    "omnibus_account"
    "executing_group_id"
    "tag"
    "orders_linked"
    "routing_user_id"
    "routing_user_name"
    "tag_cl_ord_id"
    "tag_orig_cl_ord_id"
    "tag_relation_id"
    "smp_id"
    "ats_regulatory_id"
    "authorized_trader_id"
    "instruction_extra"
    "activation_details"
  }},
};
PROTOBUF_NOINLINE void OrderUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instruction_extra_.Clear();
  _impl_.trades_.Clear();
  _impl_.trade_legs_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.unique_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.exchange_order_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.exchange_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      _impl_.exchange_login_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      _impl_.executing_login_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      _impl_.exchange_location_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      _impl_.user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      _impl_.user_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      _impl_.user_address_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      _impl_.session_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      _impl_.app_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      _impl_.app_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      _impl_.account_number_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      _impl_.member_allocation_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      _impl_.trader_allocation_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      _impl_.customer_reference_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      _impl_.avg_price_group_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      _impl_.omnibus_account_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      _impl_.executing_group_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      _impl_.tag_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      _impl_.orders_linked_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      _impl_.routing_user_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      _impl_.routing_user_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      _impl_.tag_cl_ord_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      _impl_.tag_orig_cl_ord_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      _impl_.tag_relation_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      _impl_.smp_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x40000000u) != 0) {
      _impl_.ats_regulatory_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x80000000u) != 0) {
      _impl_.authorized_trader_id_.ClearNonDefaultToEmpty();
    }
  }
  cached_has_bits = _impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.activation_details_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.exchange_time_ != nullptr);
      _impl_.exchange_time_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.submit_time_ != nullptr);
      _impl_.submit_time_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.current_limit_price_ != nullptr);
      _impl_.current_limit_price_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.current_stop_price_ != nullptr);
      _impl_.current_stop_price_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.new_limit_price_ != nullptr);
      _impl_.new_limit_price_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.new_stop_price_ != nullptr);
      _impl_.new_stop_price_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(_impl_.trail_price_ != nullptr);
      _impl_.trail_price_->Clear();
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(_impl_.receive_time_ != nullptr);
      _impl_.receive_time_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000fc00u) != 0) {
    ::memset(&_impl_.change_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.price_type_) -
        reinterpret_cast<char*>(&_impl_.change_)) + sizeof(_impl_.price_type_));
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    ::memset(&_impl_.time_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cust_order_handling_inst_) -
        reinterpret_cast<char*>(&_impl_.time_type_)) + sizeof(_impl_.cust_order_handling_inst_));
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    ::memset(&_impl_.avg_price_indicator_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.trail_revision_change_) -
        reinterpret_cast<char*>(&_impl_.avg_price_indicator_)) + sizeof(_impl_.trail_revision_change_));
  }
  cached_has_bits = _impl_._has_bits_[2];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.order_link_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.app_type_) -
        reinterpret_cast<char*>(&_impl_.order_link_)) + sizeof(_impl_.app_type_));
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    ::memset(&_impl_.master_type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_volume_) -
        reinterpret_cast<char*>(&_impl_.master_type_)) + sizeof(_impl_.max_volume_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdate& this_ = static_cast<const OrderUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string unique_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_unique_id().empty()) {
      const ::std::string& _s = this_._internal_unique_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.unique_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string market_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.market_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[1];
  // .google.protobuf.Timestamp time = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
        stream);
  }

  // .google.protobuf.Timestamp exchange_time = 5;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.exchange_time_, this_._impl_.exchange_time_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OrderChange change = 6;
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          6, this_._internal_change(), target);
    }
  }

  // .t4proto.v1.common.OrderStatus status = 7;
  if ((cached_has_bits & 0x00000800u) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_status(), target);
    }
  }

  // string status_detail = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.status_detail");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // .t4proto.v1.common.ResponsePending response_pending = 9;
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (this_._internal_response_pending() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          9, this_._internal_response_pending(), target);
    }
  }

  // string exchange_order_id = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_exchange_order_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_order_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.exchange_order_id");
      target = stream->WriteStringMaybeAliased(10, _s, target);
    }
  }

  // .google.protobuf.Timestamp submit_time = 11;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
        stream);
  }

  // int64 trade_date = 12;
  if ((cached_has_bits & 0x00001000u) != 0) {
    if (this_._internal_trade_date() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<12>(
              stream, this_._internal_trade_date(), target);
    }
  }

  // string exchange_id = 13;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._internal_exchange_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.exchange_id");
      target = stream->WriteStringMaybeAliased(13, _s, target);
    }
  }

  // string exchange_login_id = 14;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (!this_._internal_exchange_login_id().empty()) {
      const ::std::string& _s = this_._internal_exchange_login_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.exchange_login_id");
      target = stream->WriteStringMaybeAliased(14, _s, target);
    }
  }

  // string executing_login_id = 15;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (!this_._internal_executing_login_id().empty()) {
      const ::std::string& _s = this_._internal_executing_login_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.executing_login_id");
      target = stream->WriteStringMaybeAliased(15, _s, target);
    }
  }

  // string exchange_location = 16;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (!this_._internal_exchange_location().empty()) {
      const ::std::string& _s = this_._internal_exchange_location();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.exchange_location");
      target = stream->WriteStringMaybeAliased(16, _s, target);
    }
  }

  // string user_id = 17;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.user_id");
      target = stream->WriteStringMaybeAliased(17, _s, target);
    }
  }

  // string user_name = 18;
  if ((this_._impl_._has_bits_[0] & 0x00000400u) != 0) {
    if (!this_._internal_user_name().empty()) {
      const ::std::string& _s = this_._internal_user_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.user_name");
      target = stream->WriteStringMaybeAliased(18, _s, target);
    }
  }

  // string user_address = 19;
  if ((this_._impl_._has_bits_[0] & 0x00000800u) != 0) {
    if (!this_._internal_user_address().empty()) {
      const ::std::string& _s = this_._internal_user_address();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.user_address");
      target = stream->WriteStringMaybeAliased(19, _s, target);
    }
  }

  // string session_id = 20;
  if ((this_._impl_._has_bits_[0] & 0x00001000u) != 0) {
    if (!this_._internal_session_id().empty()) {
      const ::std::string& _s = this_._internal_session_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.session_id");
      target = stream->WriteStringMaybeAliased(20, _s, target);
    }
  }

  // string app_id = 21;
  if ((this_._impl_._has_bits_[0] & 0x00002000u) != 0) {
    if (!this_._internal_app_id().empty()) {
      const ::std::string& _s = this_._internal_app_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.app_id");
      target = stream->WriteStringMaybeAliased(21, _s, target);
    }
  }

  // string app_name = 22;
  if ((this_._impl_._has_bits_[0] & 0x00004000u) != 0) {
    if (!this_._internal_app_name().empty()) {
      const ::std::string& _s = this_._internal_app_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.app_name");
      target = stream->WriteStringMaybeAliased(22, _s, target);
    }
  }

  // .t4proto.v1.common.BuySell buy_sell = 23;
  if ((cached_has_bits & 0x00004000u) != 0) {
    if (this_._internal_buy_sell() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          23, this_._internal_buy_sell(), target);
    }
  }

  // .t4proto.v1.common.PriceType price_type = 24;
  if ((cached_has_bits & 0x00008000u) != 0) {
    if (this_._internal_price_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          24, this_._internal_price_type(), target);
    }
  }

  // .t4proto.v1.common.TimeType time_type = 25;
  if ((cached_has_bits & 0x00010000u) != 0) {
    if (this_._internal_time_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          25, this_._internal_time_type(), target);
    }
  }

  // int32 current_volume = 26;
  if ((cached_has_bits & 0x00020000u) != 0) {
    if (this_._internal_current_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          26, this_._internal_current_volume(), target);
    }
  }

  // .t4proto.v1.common.Price current_limit_price = 27;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, *this_._impl_.current_limit_price_, this_._impl_.current_limit_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.Price current_stop_price = 28;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        28, *this_._impl_.current_stop_price_, this_._impl_.current_stop_price_->GetCachedSize(), target,
        stream);
  }

  // int32 new_volume = 29;
  if ((cached_has_bits & 0x00040000u) != 0) {
    if (this_._internal_new_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          29, this_._internal_new_volume(), target);
    }
  }

  // .t4proto.v1.common.Price new_limit_price = 30;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, *this_._impl_.new_limit_price_, this_._impl_.new_limit_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.Price new_stop_price = 31;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        31, *this_._impl_.new_stop_price_, this_._impl_.new_stop_price_->GetCachedSize(), target,
        stream);
  }

  // .t4proto.v1.common.OpenClose open_close = 32;
  if ((cached_has_bits & 0x00080000u) != 0) {
    if (this_._internal_open_close() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          32, this_._internal_open_close(), target);
    }
  }

  // string account_number = 33;
  if ((this_._impl_._has_bits_[0] & 0x00008000u) != 0) {
    if (!this_._internal_account_number().empty()) {
      const ::std::string& _s = this_._internal_account_number();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.account_number");
      target = stream->WriteStringMaybeAliased(33, _s, target);
    }
  }

  // .t4proto.v1.common.CTI cti = 34;
  if ((cached_has_bits & 0x00100000u) != 0) {
    if (this_._internal_cti() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          34, this_._internal_cti(), target);
    }
  }

  // .t4proto.v1.common.Origin origin = 35;
  if ((cached_has_bits & 0x00200000u) != 0) {
    if (this_._internal_origin() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          35, this_._internal_origin(), target);
    }
  }

  // .t4proto.v1.common.AccountCode account_code = 36;
  if ((cached_has_bits & 0x00400000u) != 0) {
    if (this_._internal_account_code() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          36, this_._internal_account_code(), target);
    }
  }

  // string member_allocation = 37;
  if ((this_._impl_._has_bits_[0] & 0x00010000u) != 0) {
    if (!this_._internal_member_allocation().empty()) {
      const ::std::string& _s = this_._internal_member_allocation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.member_allocation");
      target = stream->WriteStringMaybeAliased(37, _s, target);
    }
  }

  // string trader_allocation = 38;
  if ((this_._impl_._has_bits_[0] & 0x00020000u) != 0) {
    if (!this_._internal_trader_allocation().empty()) {
      const ::std::string& _s = this_._internal_trader_allocation();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.trader_allocation");
      target = stream->WriteStringMaybeAliased(38, _s, target);
    }
  }

  // string customer_reference = 39;
  if ((this_._impl_._has_bits_[0] & 0x00040000u) != 0) {
    if (!this_._internal_customer_reference().empty()) {
      const ::std::string& _s = this_._internal_customer_reference();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.customer_reference");
      target = stream->WriteStringMaybeAliased(39, _s, target);
    }
  }

  // .t4proto.v1.common.CustOrderHandlingInstType cust_order_handling_inst = 40;
  if ((cached_has_bits & 0x00800000u) != 0) {
    if (this_._internal_cust_order_handling_inst() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          40, this_._internal_cust_order_handling_inst(), target);
    }
  }

  // .t4proto.v1.common.AvgPriceIndicatorType avg_price_indicator = 41;
  if ((cached_has_bits & 0x01000000u) != 0) {
    if (this_._internal_avg_price_indicator() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          41, this_._internal_avg_price_indicator(), target);
    }
  }

  // string avg_price_group_id = 42;
  if ((this_._impl_._has_bits_[0] & 0x00080000u) != 0) {
    if (!this_._internal_avg_price_group_id().empty()) {
      const ::std::string& _s = this_._internal_avg_price_group_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.avg_price_group_id");
      target = stream->WriteStringMaybeAliased(42, _s, target);
    }
  }

  // .t4proto.v1.common.ClearingTradePriceType clearing_trade_price_type = 43;
  if ((cached_has_bits & 0x02000000u) != 0) {
    if (this_._internal_clearing_trade_price_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          43, this_._internal_clearing_trade_price_type(), target);
    }
  }

  // .t4proto.v1.common.BillingFee billing_fee = 44;
  if ((cached_has_bits & 0x04000000u) != 0) {
    if (this_._internal_billing_fee() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          44, this_._internal_billing_fee(), target);
    }
  }

  // string omnibus_account = 45;
  if ((this_._impl_._has_bits_[0] & 0x00100000u) != 0) {
    if (!this_._internal_omnibus_account().empty()) {
      const ::std::string& _s = this_._internal_omnibus_account();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.omnibus_account");
      target = stream->WriteStringMaybeAliased(45, _s, target);
    }
  }

  // string executing_group_id = 46;
  if ((this_._impl_._has_bits_[0] & 0x00200000u) != 0) {
    if (!this_._internal_executing_group_id().empty()) {
      const ::std::string& _s = this_._internal_executing_group_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.executing_group_id");
      target = stream->WriteStringMaybeAliased(46, _s, target);
    }
  }

  // string tag = 47;
  if ((this_._impl_._has_bits_[0] & 0x00400000u) != 0) {
    if (!this_._internal_tag().empty()) {
      const ::std::string& _s = this_._internal_tag();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.tag");
      target = stream->WriteStringMaybeAliased(47, _s, target);
    }
  }

  // int32 total_fill_volume = 48;
  if ((cached_has_bits & 0x08000000u) != 0) {
    if (this_._internal_total_fill_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          48, this_._internal_total_fill_volume(), target);
    }
  }

  // int32 working_volume = 49;
  if ((cached_has_bits & 0x10000000u) != 0) {
    if (this_._internal_working_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          49, this_._internal_working_volume(), target);
    }
  }

  // int32 exchange_total_fill_volume = 50;
  if ((cached_has_bits & 0x20000000u) != 0) {
    if (this_._internal_exchange_total_fill_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          50, this_._internal_exchange_total_fill_volume(), target);
    }
  }

  // .t4proto.v1.common.Price trail_price = 51;
  if ((cached_has_bits & 0x00000100u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        51, *this_._impl_.trail_price_, this_._impl_.trail_price_->GetCachedSize(), target,
        stream);
  }

  // int32 trail_revision_interval = 52;
  if ((cached_has_bits & 0x40000000u) != 0) {
    if (this_._internal_trail_revision_interval() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          52, this_._internal_trail_revision_interval(), target);
    }
  }

  // int32 trail_revision_change = 53;
  if ((cached_has_bits & 0x80000000u) != 0) {
    if (this_._internal_trail_revision_change() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          53, this_._internal_trail_revision_change(), target);
    }
  }

  // .t4proto.v1.common.OrderLink order_link = 54;
  if ((this_._impl_._has_bits_[2] & 0x00000001u) != 0) {
    if (this_._internal_order_link() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          54, this_._internal_order_link(), target);
    }
  }

  // string orders_linked = 55;
  if ((this_._impl_._has_bits_[0] & 0x00800000u) != 0) {
    if (!this_._internal_orders_linked().empty()) {
      const ::std::string& _s = this_._internal_orders_linked();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.orders_linked");
      target = stream->WriteStringMaybeAliased(55, _s, target);
    }
  }

  // .t4proto.v1.common.ActivationType activation_type = 56;
  if ((this_._impl_._has_bits_[2] & 0x00000002u) != 0) {
    if (this_._internal_activation_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          56, this_._internal_activation_type(), target);
    }
  }

  // .t4proto.v1.common.PrimaryUserType primary_user = 57;
  if ((this_._impl_._has_bits_[2] & 0x00000004u) != 0) {
    if (this_._internal_primary_user() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          57, this_._internal_primary_user(), target);
    }
  }

  // int32 current_max_show = 58;
  if ((this_._impl_._has_bits_[2] & 0x00000008u) != 0) {
    if (this_._internal_current_max_show() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          58, this_._internal_current_max_show(), target);
    }
  }

  // int32 new_max_show = 59;
  if ((this_._impl_._has_bits_[2] & 0x00000010u) != 0) {
    if (this_._internal_new_max_show() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          59, this_._internal_new_max_show(), target);
    }
  }

  // string routing_user_id = 60;
  if ((this_._impl_._has_bits_[0] & 0x01000000u) != 0) {
    if (!this_._internal_routing_user_id().empty()) {
      const ::std::string& _s = this_._internal_routing_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.routing_user_id");
      target = stream->WriteStringMaybeAliased(60, _s, target);
    }
  }

  // string routing_user_name = 61;
  if ((this_._impl_._has_bits_[0] & 0x02000000u) != 0) {
    if (!this_._internal_routing_user_name().empty()) {
      const ::std::string& _s = this_._internal_routing_user_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.routing_user_name");
      target = stream->WriteStringMaybeAliased(61, _s, target);
    }
  }

  // .t4proto.v1.common.OrderSource order_source = 62;
  if ((this_._impl_._has_bits_[2] & 0x00000020u) != 0) {
    if (this_._internal_order_source() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          62, this_._internal_order_source(), target);
    }
  }

  // .t4proto.v1.common.OrderSourceMethod order_source_method = 63;
  if ((this_._impl_._has_bits_[2] & 0x00000040u) != 0) {
    if (this_._internal_order_source_method() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          63, this_._internal_order_source_method(), target);
    }
  }

  // .t4proto.v1.common.ApplicationType app_type = 64;
  if ((this_._impl_._has_bits_[2] & 0x00000080u) != 0) {
    if (this_._internal_app_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          64, this_._internal_app_type(), target);
    }
  }

  // .t4proto.v1.common.MasterType master_type = 65;
  if ((this_._impl_._has_bits_[2] & 0x00000100u) != 0) {
    if (this_._internal_master_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          65, this_._internal_master_type(), target);
    }
  }

  // string tag_cl_ord_id = 66;
  if ((this_._impl_._has_bits_[0] & 0x04000000u) != 0) {
    if (!this_._internal_tag_cl_ord_id().empty()) {
      const ::std::string& _s = this_._internal_tag_cl_ord_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.tag_cl_ord_id");
      target = stream->WriteStringMaybeAliased(66, _s, target);
    }
  }

  // string tag_orig_cl_ord_id = 67;
  if ((this_._impl_._has_bits_[0] & 0x08000000u) != 0) {
    if (!this_._internal_tag_orig_cl_ord_id().empty()) {
      const ::std::string& _s = this_._internal_tag_orig_cl_ord_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.tag_orig_cl_ord_id");
      target = stream->WriteStringMaybeAliased(67, _s, target);
    }
  }

  // string tag_relation_id = 68;
  if ((this_._impl_._has_bits_[0] & 0x10000000u) != 0) {
    if (!this_._internal_tag_relation_id().empty()) {
      const ::std::string& _s = this_._internal_tag_relation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.tag_relation_id");
      target = stream->WriteStringMaybeAliased(68, _s, target);
    }
  }

  // string smp_id = 69;
  if ((this_._impl_._has_bits_[0] & 0x20000000u) != 0) {
    if (!this_._internal_smp_id().empty()) {
      const ::std::string& _s = this_._internal_smp_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.smp_id");
      target = stream->WriteStringMaybeAliased(69, _s, target);
    }
  }

  // int32 sequence_order = 70;
  if ((this_._impl_._has_bits_[2] & 0x00000200u) != 0) {
    if (this_._internal_sequence_order() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          70, this_._internal_sequence_order(), target);
    }
  }

  // string ats_regulatory_id = 71;
  if ((this_._impl_._has_bits_[0] & 0x40000000u) != 0) {
    if (!this_._internal_ats_regulatory_id().empty()) {
      const ::std::string& _s = this_._internal_ats_regulatory_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.ats_regulatory_id");
      target = stream->WriteStringMaybeAliased(71, _s, target);
    }
  }

  // int32 max_volume = 72;
  if ((this_._impl_._has_bits_[2] & 0x00000400u) != 0) {
    if (this_._internal_max_volume() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteInt32ToArray(
          72, this_._internal_max_volume(), target);
    }
  }

  // string authorized_trader_id = 73;
  if ((this_._impl_._has_bits_[0] & 0x80000000u) != 0) {
    if (!this_._internal_authorized_trader_id().empty()) {
      const ::std::string& _s = this_._internal_authorized_trader_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.authorized_trader_id");
      target = stream->WriteStringMaybeAliased(73, _s, target);
    }
  }

  // map<string, string> instruction_extra = 74;
  if (!this_._internal_instruction_extra().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_instruction_extra();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            74, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.instruction_extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.instruction_extra");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            74, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.instruction_extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.instruction_extra");
      }
    }
  }

  // .google.protobuf.Timestamp receive_time = 75;
  if ((cached_has_bits & 0x00000200u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        75, *this_._impl_.receive_time_, this_._impl_.receive_time_->GetCachedSize(), target,
        stream);
  }

  // string activation_details = 76;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_activation_details().empty()) {
      const ::std::string& _s = this_._internal_activation_details();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdate.activation_details");
      target = stream->WriteStringMaybeAliased(76, _s, target);
    }
  }

  // repeated .t4proto.v1.orderrouting.OrderUpdate.Trade trades = 77;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_trades_size());
       i < n; i++) {
    const auto& repfield = this_._internal_trades().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            77, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .t4proto.v1.orderrouting.OrderUpdate.TradeLeg trade_legs = 78;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_trade_legs_size());
       i < n; i++) {
    const auto& repfield = this_._internal_trade_legs().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            78, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdate::ByteSizeLong(const MessageLite& base) {
  const OrderUpdate& this_ = static_cast<const OrderUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdate::ByteSizeLong() const {
  const OrderUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> instruction_extra = 74;
    {
      total_size +=
          2 * ::google::protobuf::internal::FromIntSize(this_._internal_instruction_extra_size());
      for (const auto& entry : this_._internal_instruction_extra()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .t4proto.v1.orderrouting.OrderUpdate.Trade trades = 77;
    {
      total_size += 2UL * this_._internal_trades_size();
      for (const auto& msg : this_._internal_trades()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .t4proto.v1.orderrouting.OrderUpdate.TradeLeg trade_legs = 78;
    {
      total_size += 2UL * this_._internal_trade_legs_size();
      for (const auto& msg : this_._internal_trade_legs()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string unique_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_unique_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_unique_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // string market_id = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string status_detail = 8;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string exchange_order_id = 10;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_exchange_order_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_order_id());
      }
    }
    // string exchange_id = 13;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_exchange_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_id());
      }
    }
    // string exchange_login_id = 14;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!this_._internal_exchange_login_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_login_id());
      }
    }
    // string executing_login_id = 15;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!this_._internal_executing_login_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_executing_login_id());
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // string exchange_location = 16;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!this_._internal_exchange_location().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange_location());
      }
    }
    // string user_id = 17;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // string user_name = 18;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (!this_._internal_user_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_name());
      }
    }
    // string user_address = 19;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (!this_._internal_user_address().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_address());
      }
    }
    // string session_id = 20;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (!this_._internal_session_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_session_id());
      }
    }
    // string app_id = 21;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (!this_._internal_app_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_app_id());
      }
    }
    // string app_name = 22;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (!this_._internal_app_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_app_name());
      }
    }
    // string account_number = 33;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (!this_._internal_account_number().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_number());
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // string member_allocation = 37;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (!this_._internal_member_allocation().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_member_allocation());
      }
    }
    // string trader_allocation = 38;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (!this_._internal_trader_allocation().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trader_allocation());
      }
    }
    // string customer_reference = 39;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (!this_._internal_customer_reference().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_customer_reference());
      }
    }
    // string avg_price_group_id = 42;
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (!this_._internal_avg_price_group_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_avg_price_group_id());
      }
    }
    // string omnibus_account = 45;
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (!this_._internal_omnibus_account().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_omnibus_account());
      }
    }
    // string executing_group_id = 46;
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (!this_._internal_executing_group_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_executing_group_id());
      }
    }
    // string tag = 47;
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (!this_._internal_tag().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag());
      }
    }
    // string orders_linked = 55;
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (!this_._internal_orders_linked().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_orders_linked());
      }
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    // string routing_user_id = 60;
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (!this_._internal_routing_user_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_routing_user_id());
      }
    }
    // string routing_user_name = 61;
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (!this_._internal_routing_user_name().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_routing_user_name());
      }
    }
    // string tag_cl_ord_id = 66;
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (!this_._internal_tag_cl_ord_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_cl_ord_id());
      }
    }
    // string tag_orig_cl_ord_id = 67;
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (!this_._internal_tag_orig_cl_ord_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_orig_cl_ord_id());
      }
    }
    // string tag_relation_id = 68;
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (!this_._internal_tag_relation_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_tag_relation_id());
      }
    }
    // string smp_id = 69;
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (!this_._internal_smp_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_smp_id());
      }
    }
    // string ats_regulatory_id = 71;
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (!this_._internal_ats_regulatory_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_ats_regulatory_id());
      }
    }
    // string authorized_trader_id = 73;
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (!this_._internal_authorized_trader_id().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_authorized_trader_id());
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string activation_details = 76;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_activation_details().empty()) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_activation_details());
      }
    }
    // .google.protobuf.Timestamp time = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
    }
    // .google.protobuf.Timestamp exchange_time = 5;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exchange_time_);
    }
    // .google.protobuf.Timestamp submit_time = 11;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
    }
    // .t4proto.v1.common.Price current_limit_price = 27;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_limit_price_);
    }
    // .t4proto.v1.common.Price current_stop_price = 28;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.current_stop_price_);
    }
    // .t4proto.v1.common.Price new_limit_price = 30;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_limit_price_);
    }
    // .t4proto.v1.common.Price new_stop_price = 31;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_stop_price_);
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    // .t4proto.v1.common.Price trail_price = 51;
    if ((cached_has_bits & 0x00000100u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.trail_price_);
    }
    // .google.protobuf.Timestamp receive_time = 75;
    if ((cached_has_bits & 0x00000200u) != 0) {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.receive_time_);
    }
    // .t4proto.v1.common.OrderChange change = 6;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_change() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_change());
      }
    }
    // .t4proto.v1.common.OrderStatus status = 7;
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
    // int64 trade_date = 12;
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_trade_date() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_trade_date());
      }
    }
    // .t4proto.v1.common.ResponsePending response_pending = 9;
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_response_pending() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_response_pending());
      }
    }
    // .t4proto.v1.common.BuySell buy_sell = 23;
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (this_._internal_buy_sell() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_buy_sell());
      }
    }
    // .t4proto.v1.common.PriceType price_type = 24;
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (this_._internal_price_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_price_type());
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    // .t4proto.v1.common.TimeType time_type = 25;
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (this_._internal_time_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_time_type());
      }
    }
    // int32 current_volume = 26;
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (this_._internal_current_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_current_volume());
      }
    }
    // int32 new_volume = 29;
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (this_._internal_new_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_new_volume());
      }
    }
    // .t4proto.v1.common.OpenClose open_close = 32;
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (this_._internal_open_close() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_open_close());
      }
    }
    // .t4proto.v1.common.CTI cti = 34;
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (this_._internal_cti() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cti());
      }
    }
    // .t4proto.v1.common.Origin origin = 35;
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (this_._internal_origin() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_origin());
      }
    }
    // .t4proto.v1.common.AccountCode account_code = 36;
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (this_._internal_account_code() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_account_code());
      }
    }
    // .t4proto.v1.common.CustOrderHandlingInstType cust_order_handling_inst = 40;
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (this_._internal_cust_order_handling_inst() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_cust_order_handling_inst());
      }
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    // .t4proto.v1.common.AvgPriceIndicatorType avg_price_indicator = 41;
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (this_._internal_avg_price_indicator() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_avg_price_indicator());
      }
    }
    // .t4proto.v1.common.ClearingTradePriceType clearing_trade_price_type = 43;
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (this_._internal_clearing_trade_price_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_clearing_trade_price_type());
      }
    }
    // .t4proto.v1.common.BillingFee billing_fee = 44;
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (this_._internal_billing_fee() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_billing_fee());
      }
    }
    // int32 total_fill_volume = 48;
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (this_._internal_total_fill_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_total_fill_volume());
      }
    }
    // int32 working_volume = 49;
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (this_._internal_working_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_working_volume());
      }
    }
    // int32 exchange_total_fill_volume = 50;
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (this_._internal_exchange_total_fill_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_exchange_total_fill_volume());
      }
    }
    // int32 trail_revision_interval = 52;
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (this_._internal_trail_revision_interval() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_trail_revision_interval());
      }
    }
    // int32 trail_revision_change = 53;
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (this_._internal_trail_revision_change() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_trail_revision_change());
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[2];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // .t4proto.v1.common.OrderLink order_link = 54;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_order_link() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_order_link());
      }
    }
    // .t4proto.v1.common.ActivationType activation_type = 56;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_activation_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_activation_type());
      }
    }
    // .t4proto.v1.common.PrimaryUserType primary_user = 57;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_primary_user() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_primary_user());
      }
    }
    // int32 current_max_show = 58;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_current_max_show() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_current_max_show());
      }
    }
    // int32 new_max_show = 59;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_new_max_show() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_new_max_show());
      }
    }
    // .t4proto.v1.common.OrderSource order_source = 62;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_order_source() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_order_source());
      }
    }
    // .t4proto.v1.common.OrderSourceMethod order_source_method = 63;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_order_source_method() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_order_source_method());
      }
    }
    // .t4proto.v1.common.ApplicationType app_type = 64;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_app_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_app_type());
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    // .t4proto.v1.common.MasterType master_type = 65;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_master_type() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_master_type());
      }
    }
    // int32 sequence_order = 70;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_sequence_order() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_sequence_order());
      }
    }
    // int32 max_volume = 72;
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_max_volume() != 0) {
        total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                        this_._internal_max_volume());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdate*>(&to_msg);
  auto& from = static_cast<const OrderUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.instruction_extra_.MergeFrom(from._impl_.instruction_extra_);
  _this->_internal_mutable_trades()->MergeFrom(
      from._internal_trades());
  _this->_internal_mutable_trade_legs()->MergeFrom(
      from._internal_trade_legs());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_unique_id().empty()) {
        _this->_internal_set_unique_id(from._internal_unique_id());
      } else {
        if (_this->_impl_.unique_id_.IsDefault()) {
          _this->_internal_set_unique_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_exchange_order_id().empty()) {
        _this->_internal_set_exchange_order_id(from._internal_exchange_order_id());
      } else {
        if (_this->_impl_.exchange_order_id_.IsDefault()) {
          _this->_internal_set_exchange_order_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_exchange_id().empty()) {
        _this->_internal_set_exchange_id(from._internal_exchange_id());
      } else {
        if (_this->_impl_.exchange_id_.IsDefault()) {
          _this->_internal_set_exchange_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (!from._internal_exchange_login_id().empty()) {
        _this->_internal_set_exchange_login_id(from._internal_exchange_login_id());
      } else {
        if (_this->_impl_.exchange_login_id_.IsDefault()) {
          _this->_internal_set_exchange_login_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (!from._internal_executing_login_id().empty()) {
        _this->_internal_set_executing_login_id(from._internal_executing_login_id());
      } else {
        if (_this->_impl_.executing_login_id_.IsDefault()) {
          _this->_internal_set_executing_login_id("");
        }
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (!from._internal_exchange_location().empty()) {
        _this->_internal_set_exchange_location(from._internal_exchange_location());
      } else {
        if (_this->_impl_.exchange_location_.IsDefault()) {
          _this->_internal_set_exchange_location("");
        }
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (!from._internal_user_name().empty()) {
        _this->_internal_set_user_name(from._internal_user_name());
      } else {
        if (_this->_impl_.user_name_.IsDefault()) {
          _this->_internal_set_user_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (!from._internal_user_address().empty()) {
        _this->_internal_set_user_address(from._internal_user_address());
      } else {
        if (_this->_impl_.user_address_.IsDefault()) {
          _this->_internal_set_user_address("");
        }
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (!from._internal_session_id().empty()) {
        _this->_internal_set_session_id(from._internal_session_id());
      } else {
        if (_this->_impl_.session_id_.IsDefault()) {
          _this->_internal_set_session_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (!from._internal_app_id().empty()) {
        _this->_internal_set_app_id(from._internal_app_id());
      } else {
        if (_this->_impl_.app_id_.IsDefault()) {
          _this->_internal_set_app_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (!from._internal_app_name().empty()) {
        _this->_internal_set_app_name(from._internal_app_name());
      } else {
        if (_this->_impl_.app_name_.IsDefault()) {
          _this->_internal_set_app_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (!from._internal_account_number().empty()) {
        _this->_internal_set_account_number(from._internal_account_number());
      } else {
        if (_this->_impl_.account_number_.IsDefault()) {
          _this->_internal_set_account_number("");
        }
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (!from._internal_member_allocation().empty()) {
        _this->_internal_set_member_allocation(from._internal_member_allocation());
      } else {
        if (_this->_impl_.member_allocation_.IsDefault()) {
          _this->_internal_set_member_allocation("");
        }
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (!from._internal_trader_allocation().empty()) {
        _this->_internal_set_trader_allocation(from._internal_trader_allocation());
      } else {
        if (_this->_impl_.trader_allocation_.IsDefault()) {
          _this->_internal_set_trader_allocation("");
        }
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (!from._internal_customer_reference().empty()) {
        _this->_internal_set_customer_reference(from._internal_customer_reference());
      } else {
        if (_this->_impl_.customer_reference_.IsDefault()) {
          _this->_internal_set_customer_reference("");
        }
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (!from._internal_avg_price_group_id().empty()) {
        _this->_internal_set_avg_price_group_id(from._internal_avg_price_group_id());
      } else {
        if (_this->_impl_.avg_price_group_id_.IsDefault()) {
          _this->_internal_set_avg_price_group_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (!from._internal_omnibus_account().empty()) {
        _this->_internal_set_omnibus_account(from._internal_omnibus_account());
      } else {
        if (_this->_impl_.omnibus_account_.IsDefault()) {
          _this->_internal_set_omnibus_account("");
        }
      }
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (!from._internal_executing_group_id().empty()) {
        _this->_internal_set_executing_group_id(from._internal_executing_group_id());
      } else {
        if (_this->_impl_.executing_group_id_.IsDefault()) {
          _this->_internal_set_executing_group_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (!from._internal_tag().empty()) {
        _this->_internal_set_tag(from._internal_tag());
      } else {
        if (_this->_impl_.tag_.IsDefault()) {
          _this->_internal_set_tag("");
        }
      }
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (!from._internal_orders_linked().empty()) {
        _this->_internal_set_orders_linked(from._internal_orders_linked());
      } else {
        if (_this->_impl_.orders_linked_.IsDefault()) {
          _this->_internal_set_orders_linked("");
        }
      }
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (!from._internal_routing_user_id().empty()) {
        _this->_internal_set_routing_user_id(from._internal_routing_user_id());
      } else {
        if (_this->_impl_.routing_user_id_.IsDefault()) {
          _this->_internal_set_routing_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (!from._internal_routing_user_name().empty()) {
        _this->_internal_set_routing_user_name(from._internal_routing_user_name());
      } else {
        if (_this->_impl_.routing_user_name_.IsDefault()) {
          _this->_internal_set_routing_user_name("");
        }
      }
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (!from._internal_tag_cl_ord_id().empty()) {
        _this->_internal_set_tag_cl_ord_id(from._internal_tag_cl_ord_id());
      } else {
        if (_this->_impl_.tag_cl_ord_id_.IsDefault()) {
          _this->_internal_set_tag_cl_ord_id("");
        }
      }
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (!from._internal_tag_orig_cl_ord_id().empty()) {
        _this->_internal_set_tag_orig_cl_ord_id(from._internal_tag_orig_cl_ord_id());
      } else {
        if (_this->_impl_.tag_orig_cl_ord_id_.IsDefault()) {
          _this->_internal_set_tag_orig_cl_ord_id("");
        }
      }
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (!from._internal_tag_relation_id().empty()) {
        _this->_internal_set_tag_relation_id(from._internal_tag_relation_id());
      } else {
        if (_this->_impl_.tag_relation_id_.IsDefault()) {
          _this->_internal_set_tag_relation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (!from._internal_smp_id().empty()) {
        _this->_internal_set_smp_id(from._internal_smp_id());
      } else {
        if (_this->_impl_.smp_id_.IsDefault()) {
          _this->_internal_set_smp_id("");
        }
      }
    }
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (!from._internal_ats_regulatory_id().empty()) {
        _this->_internal_set_ats_regulatory_id(from._internal_ats_regulatory_id());
      } else {
        if (_this->_impl_.ats_regulatory_id_.IsDefault()) {
          _this->_internal_set_ats_regulatory_id("");
        }
      }
    }
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (!from._internal_authorized_trader_id().empty()) {
        _this->_internal_set_authorized_trader_id(from._internal_authorized_trader_id());
      } else {
        if (_this->_impl_.authorized_trader_id_.IsDefault()) {
          _this->_internal_set_authorized_trader_id("");
        }
      }
    }
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_activation_details().empty()) {
        _this->_internal_set_activation_details(from._internal_activation_details());
      } else {
        if (_this->_impl_.activation_details_.IsDefault()) {
          _this->_internal_set_activation_details("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.exchange_time_ != nullptr);
      if (_this->_impl_.exchange_time_ == nullptr) {
        _this->_impl_.exchange_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exchange_time_);
      } else {
        _this->_impl_.exchange_time_->MergeFrom(*from._impl_.exchange_time_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
      if (_this->_impl_.submit_time_ == nullptr) {
        _this->_impl_.submit_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.submit_time_);
      } else {
        _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.current_limit_price_ != nullptr);
      if (_this->_impl_.current_limit_price_ == nullptr) {
        _this->_impl_.current_limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_limit_price_);
      } else {
        _this->_impl_.current_limit_price_->MergeFrom(*from._impl_.current_limit_price_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.current_stop_price_ != nullptr);
      if (_this->_impl_.current_stop_price_ == nullptr) {
        _this->_impl_.current_stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.current_stop_price_);
      } else {
        _this->_impl_.current_stop_price_->MergeFrom(*from._impl_.current_stop_price_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.new_limit_price_ != nullptr);
      if (_this->_impl_.new_limit_price_ == nullptr) {
        _this->_impl_.new_limit_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_limit_price_);
      } else {
        _this->_impl_.new_limit_price_->MergeFrom(*from._impl_.new_limit_price_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.new_stop_price_ != nullptr);
      if (_this->_impl_.new_stop_price_ == nullptr) {
        _this->_impl_.new_stop_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.new_stop_price_);
      } else {
        _this->_impl_.new_stop_price_->MergeFrom(*from._impl_.new_stop_price_);
      }
    }
  }
  if ((cached_has_bits & 0x0000ff00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      ABSL_DCHECK(from._impl_.trail_price_ != nullptr);
      if (_this->_impl_.trail_price_ == nullptr) {
        _this->_impl_.trail_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.trail_price_);
      } else {
        _this->_impl_.trail_price_->MergeFrom(*from._impl_.trail_price_);
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      ABSL_DCHECK(from._impl_.receive_time_ != nullptr);
      if (_this->_impl_.receive_time_ == nullptr) {
        _this->_impl_.receive_time_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.receive_time_);
      } else {
        _this->_impl_.receive_time_->MergeFrom(*from._impl_.receive_time_);
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_change() != 0) {
        _this->_impl_.change_ = from._impl_.change_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_trade_date() != 0) {
        _this->_impl_.trade_date_ = from._impl_.trade_date_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_response_pending() != 0) {
        _this->_impl_.response_pending_ = from._impl_.response_pending_;
      }
    }
    if ((cached_has_bits & 0x00004000u) != 0) {
      if (from._internal_buy_sell() != 0) {
        _this->_impl_.buy_sell_ = from._impl_.buy_sell_;
      }
    }
    if ((cached_has_bits & 0x00008000u) != 0) {
      if (from._internal_price_type() != 0) {
        _this->_impl_.price_type_ = from._impl_.price_type_;
      }
    }
  }
  if ((cached_has_bits & 0x00ff0000u) != 0) {
    if ((cached_has_bits & 0x00010000u) != 0) {
      if (from._internal_time_type() != 0) {
        _this->_impl_.time_type_ = from._impl_.time_type_;
      }
    }
    if ((cached_has_bits & 0x00020000u) != 0) {
      if (from._internal_current_volume() != 0) {
        _this->_impl_.current_volume_ = from._impl_.current_volume_;
      }
    }
    if ((cached_has_bits & 0x00040000u) != 0) {
      if (from._internal_new_volume() != 0) {
        _this->_impl_.new_volume_ = from._impl_.new_volume_;
      }
    }
    if ((cached_has_bits & 0x00080000u) != 0) {
      if (from._internal_open_close() != 0) {
        _this->_impl_.open_close_ = from._impl_.open_close_;
      }
    }
    if ((cached_has_bits & 0x00100000u) != 0) {
      if (from._internal_cti() != 0) {
        _this->_impl_.cti_ = from._impl_.cti_;
      }
    }
    if ((cached_has_bits & 0x00200000u) != 0) {
      if (from._internal_origin() != 0) {
        _this->_impl_.origin_ = from._impl_.origin_;
      }
    }
    if ((cached_has_bits & 0x00400000u) != 0) {
      if (from._internal_account_code() != 0) {
        _this->_impl_.account_code_ = from._impl_.account_code_;
      }
    }
    if ((cached_has_bits & 0x00800000u) != 0) {
      if (from._internal_cust_order_handling_inst() != 0) {
        _this->_impl_.cust_order_handling_inst_ = from._impl_.cust_order_handling_inst_;
      }
    }
  }
  if ((cached_has_bits & 0xff000000u) != 0) {
    if ((cached_has_bits & 0x01000000u) != 0) {
      if (from._internal_avg_price_indicator() != 0) {
        _this->_impl_.avg_price_indicator_ = from._impl_.avg_price_indicator_;
      }
    }
    if ((cached_has_bits & 0x02000000u) != 0) {
      if (from._internal_clearing_trade_price_type() != 0) {
        _this->_impl_.clearing_trade_price_type_ = from._impl_.clearing_trade_price_type_;
      }
    }
    if ((cached_has_bits & 0x04000000u) != 0) {
      if (from._internal_billing_fee() != 0) {
        _this->_impl_.billing_fee_ = from._impl_.billing_fee_;
      }
    }
    if ((cached_has_bits & 0x08000000u) != 0) {
      if (from._internal_total_fill_volume() != 0) {
        _this->_impl_.total_fill_volume_ = from._impl_.total_fill_volume_;
      }
    }
    if ((cached_has_bits & 0x10000000u) != 0) {
      if (from._internal_working_volume() != 0) {
        _this->_impl_.working_volume_ = from._impl_.working_volume_;
      }
    }
    if ((cached_has_bits & 0x20000000u) != 0) {
      if (from._internal_exchange_total_fill_volume() != 0) {
        _this->_impl_.exchange_total_fill_volume_ = from._impl_.exchange_total_fill_volume_;
      }
    }
    if ((cached_has_bits & 0x40000000u) != 0) {
      if (from._internal_trail_revision_interval() != 0) {
        _this->_impl_.trail_revision_interval_ = from._impl_.trail_revision_interval_;
      }
    }
    if ((cached_has_bits & 0x80000000u) != 0) {
      if (from._internal_trail_revision_change() != 0) {
        _this->_impl_.trail_revision_change_ = from._impl_.trail_revision_change_;
      }
    }
  }
  cached_has_bits = from._impl_._has_bits_[2];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_order_link() != 0) {
        _this->_impl_.order_link_ = from._impl_.order_link_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_activation_type() != 0) {
        _this->_impl_.activation_type_ = from._impl_.activation_type_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_primary_user() != 0) {
        _this->_impl_.primary_user_ = from._impl_.primary_user_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_current_max_show() != 0) {
        _this->_impl_.current_max_show_ = from._impl_.current_max_show_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_new_max_show() != 0) {
        _this->_impl_.new_max_show_ = from._impl_.new_max_show_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_order_source() != 0) {
        _this->_impl_.order_source_ = from._impl_.order_source_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_order_source_method() != 0) {
        _this->_impl_.order_source_method_ = from._impl_.order_source_method_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_app_type() != 0) {
        _this->_impl_.app_type_ = from._impl_.app_type_;
      }
    }
  }
  if ((cached_has_bits & 0x00000700u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_master_type() != 0) {
        _this->_impl_.master_type_ = from._impl_.master_type_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_sequence_order() != 0) {
        _this->_impl_.sequence_order_ = from._impl_.sequence_order_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_max_volume() != 0) {
        _this->_impl_.max_volume_ = from._impl_.max_volume_;
      }
    }
  }
  _this->_impl_._has_bits_.Or(from._impl_._has_bits_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdate::CopyFrom(const OrderUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdate::InternalSwap(OrderUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  swap(_impl_._has_bits_[2], other->_impl_._has_bits_[2]);
  _impl_.instruction_extra_.InternalSwap(&other->_impl_.instruction_extra_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  _impl_.trade_legs_.InternalSwap(&other->_impl_.trade_legs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.unique_id_, &other->_impl_.unique_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_order_id_, &other->_impl_.exchange_order_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_id_, &other->_impl_.exchange_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_login_id_, &other->_impl_.exchange_login_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executing_login_id_, &other->_impl_.executing_login_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_location_, &other->_impl_.exchange_location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, &other->_impl_.user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_address_, &other->_impl_.user_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_name_, &other->_impl_.app_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_number_, &other->_impl_.account_number_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.member_allocation_, &other->_impl_.member_allocation_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trader_allocation_, &other->_impl_.trader_allocation_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.customer_reference_, &other->_impl_.customer_reference_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avg_price_group_id_, &other->_impl_.avg_price_group_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.omnibus_account_, &other->_impl_.omnibus_account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.executing_group_id_, &other->_impl_.executing_group_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.orders_linked_, &other->_impl_.orders_linked_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_user_id_, &other->_impl_.routing_user_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.routing_user_name_, &other->_impl_.routing_user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_cl_ord_id_, &other->_impl_.tag_cl_ord_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_orig_cl_ord_id_, &other->_impl_.tag_orig_cl_ord_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_relation_id_, &other->_impl_.tag_relation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.smp_id_, &other->_impl_.smp_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ats_regulatory_id_, &other->_impl_.ats_regulatory_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.authorized_trader_id_, &other->_impl_.authorized_trader_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.activation_details_, &other->_impl_.activation_details_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.max_volume_)
      + sizeof(OrderUpdate::_impl_.max_volume_)
      - PROTOBUF_FIELD_OFFSET(OrderUpdate, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata OrderUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdateMultiMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::t4proto::v1::orderrouting::OrderUpdateMultiMessage, _impl_._oneof_case_);
};

void OrderUpdateMultiMessage::set_allocated_order_update(::t4proto::v1::orderrouting::OrderUpdate* PROTOBUF_NULLABLE order_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update) {
    ::google::protobuf::Arena* submessage_arena = order_update->GetArena();
    if (message_arena != submessage_arena) {
      order_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update, submessage_arena);
    }
    set_has_order_update();
    _impl_.payload_.order_update_ = order_update;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.orderrouting.OrderUpdateMultiMessage.order_update)
}
void OrderUpdateMultiMessage::set_allocated_order_update_failed(::t4proto::v1::orderrouting::OrderUpdateFailed* PROTOBUF_NULLABLE order_update_failed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_failed) {
    ::google::protobuf::Arena* submessage_arena = order_update_failed->GetArena();
    if (message_arena != submessage_arena) {
      order_update_failed = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_failed, submessage_arena);
    }
    set_has_order_update_failed();
    _impl_.payload_.order_update_failed_ = order_update_failed;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.orderrouting.OrderUpdateMultiMessage.order_update_failed)
}
void OrderUpdateMultiMessage::set_allocated_order_update_status(::t4proto::v1::orderrouting::OrderUpdateStatus* PROTOBUF_NULLABLE order_update_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_status) {
    ::google::protobuf::Arena* submessage_arena = order_update_status->GetArena();
    if (message_arena != submessage_arena) {
      order_update_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_status, submessage_arena);
    }
    set_has_order_update_status();
    _impl_.payload_.order_update_status_ = order_update_status;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.orderrouting.OrderUpdateMultiMessage.order_update_status)
}
void OrderUpdateMultiMessage::set_allocated_order_update_trade(::t4proto::v1::orderrouting::OrderUpdateTrade* PROTOBUF_NULLABLE order_update_trade) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_trade) {
    ::google::protobuf::Arena* submessage_arena = order_update_trade->GetArena();
    if (message_arena != submessage_arena) {
      order_update_trade = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_trade, submessage_arena);
    }
    set_has_order_update_trade();
    _impl_.payload_.order_update_trade_ = order_update_trade;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.orderrouting.OrderUpdateMultiMessage.order_update_trade)
}
void OrderUpdateMultiMessage::set_allocated_order_update_trade_leg(::t4proto::v1::orderrouting::OrderUpdateTradeLeg* PROTOBUF_NULLABLE order_update_trade_leg) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_update_trade_leg) {
    ::google::protobuf::Arena* submessage_arena = order_update_trade_leg->GetArena();
    if (message_arena != submessage_arena) {
      order_update_trade_leg = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_update_trade_leg, submessage_arena);
    }
    set_has_order_update_trade_leg();
    _impl_.payload_.order_update_trade_leg_ = order_update_trade_leg;
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.orderrouting.OrderUpdateMultiMessage.order_update_trade_leg)
}
OrderUpdateMultiMessage::OrderUpdateMultiMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateMultiMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateMultiMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateMultiMessage& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

OrderUpdateMultiMessage::OrderUpdateMultiMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateMultiMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateMultiMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateMultiMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kOrderUpdate:
        _impl_.payload_.order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_);
        break;
      case kOrderUpdateFailed:
        _impl_.payload_.order_update_failed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_failed_);
        break;
      case kOrderUpdateStatus:
        _impl_.payload_.order_update_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_status_);
        break;
      case kOrderUpdateTrade:
        _impl_.payload_.order_update_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_);
        break;
      case kOrderUpdateTradeLeg:
        _impl_.payload_.order_update_trade_leg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_leg_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateMultiMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void OrderUpdateMultiMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OrderUpdateMultiMessage::~OrderUpdateMultiMessage() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  SharedDtor(*this);
}
inline void OrderUpdateMultiMessage::SharedDtor(MessageLite& self) {
  OrderUpdateMultiMessage& this_ = static_cast<OrderUpdateMultiMessage&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void OrderUpdateMultiMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kOrderUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_);
      }
      break;
    }
    case kOrderUpdateFailed: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_failed_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_failed_);
      }
      break;
    }
    case kOrderUpdateStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_status_);
      }
      break;
    }
    case kOrderUpdateTrade: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_trade_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_);
      }
      break;
    }
    case kOrderUpdateTradeLeg: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_update_trade_leg_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_update_trade_leg_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL OrderUpdateMultiMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateMultiMessage(arena);
}
constexpr auto OrderUpdateMultiMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderUpdateMultiMessage),
                                            alignof(OrderUpdateMultiMessage));
}
constexpr auto OrderUpdateMultiMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateMultiMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateMultiMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateMultiMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateMultiMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateMultiMessage>(), &OrderUpdateMultiMessage::ByteSizeLong,
              &OrderUpdateMultiMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_._cached_size_),
          false,
      },
      &OrderUpdateMultiMessage::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateMultiMessage_class_data_ =
        OrderUpdateMultiMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateMultiMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateMultiMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateMultiMessage_class_data_.tc_table);
  return OrderUpdateMultiMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2>
OrderUpdateMultiMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967171,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateMultiMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateMultiMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .t4proto.v1.orderrouting.OrderUpdate order_update = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_.payload_.order_update_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateFailed order_update_failed = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_.payload_.order_update_failed_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateStatus order_update_status = 5;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_.payload_.order_update_status_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateTrade order_update_trade = 6;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_.payload_.order_update_trade_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .t4proto.v1.orderrouting.OrderUpdateTradeLeg order_update_trade_leg = 7;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMultiMessage, _impl_.payload_.order_update_trade_leg_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdate>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateFailed>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateStatus>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTrade>()},
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateTradeLeg>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OrderUpdateMultiMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateMultiMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateMultiMessage& this_ = static_cast<const OrderUpdateMultiMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateMultiMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateMultiMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    case kOrderUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.payload_.order_update_, this_._impl_.payload_.order_update_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateFailed: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.payload_.order_update_failed_, this_._impl_.payload_.order_update_failed_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *this_._impl_.payload_.order_update_status_, this_._impl_.payload_.order_update_status_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateTrade: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *this_._impl_.payload_.order_update_trade_, this_._impl_.payload_.order_update_trade_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderUpdateTradeLeg: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *this_._impl_.payload_.order_update_trade_leg_, this_._impl_.payload_.order_update_trade_leg_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateMultiMessage::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateMultiMessage& this_ = static_cast<const OrderUpdateMultiMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateMultiMessage::ByteSizeLong() const {
  const OrderUpdateMultiMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.payload_case()) {
    // .t4proto.v1.orderrouting.OrderUpdate order_update = 3;
    case kOrderUpdate: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateFailed order_update_failed = 4;
    case kOrderUpdateFailed: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_failed_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateStatus order_update_status = 5;
    case kOrderUpdateStatus: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_status_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateTrade order_update_trade = 6;
    case kOrderUpdateTrade: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_trade_);
      break;
    }
    // .t4proto.v1.orderrouting.OrderUpdateTradeLeg order_update_trade_leg = 7;
    case kOrderUpdateTradeLeg: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_update_trade_leg_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateMultiMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateMultiMessage*>(&to_msg);
  auto& from = static_cast<const OrderUpdateMultiMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kOrderUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_);
        } else {
          _this->_impl_.payload_.order_update_->MergeFrom(*from._impl_.payload_.order_update_);
        }
        break;
      }
      case kOrderUpdateFailed: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_failed_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_failed_);
        } else {
          _this->_impl_.payload_.order_update_failed_->MergeFrom(*from._impl_.payload_.order_update_failed_);
        }
        break;
      }
      case kOrderUpdateStatus: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_status_);
        } else {
          _this->_impl_.payload_.order_update_status_->MergeFrom(*from._impl_.payload_.order_update_status_);
        }
        break;
      }
      case kOrderUpdateTrade: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_trade_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_);
        } else {
          _this->_impl_.payload_.order_update_trade_->MergeFrom(*from._impl_.payload_.order_update_trade_);
        }
        break;
      }
      case kOrderUpdateTradeLeg: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_update_trade_leg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_update_trade_leg_);
        } else {
          _this->_impl_.payload_.order_update_trade_leg_->MergeFrom(*from._impl_.payload_.order_update_trade_leg_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateMultiMessage::CopyFrom(const OrderUpdateMultiMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateMultiMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateMultiMessage::InternalSwap(OrderUpdateMultiMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata OrderUpdateMultiMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderUpdateMulti::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderUpdateMulti>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_._has_bits_);
};

OrderUpdateMulti::OrderUpdateMulti(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateMulti_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.OrderUpdateMulti)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateMulti::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::OrderUpdateMulti& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        updates_{visibility, arena, from.updates_},
        market_id_(arena, from.market_id_),
        account_id_(arena, from.account_id_) {}

OrderUpdateMulti::OrderUpdateMulti(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderUpdateMulti& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderUpdateMulti_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderUpdateMulti* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.historical_ = from._impl_.historical_;

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.OrderUpdateMulti)
}
PROTOBUF_NDEBUG_INLINE OrderUpdateMulti::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        updates_{visibility, arena},
        market_id_(arena),
        account_id_(arena) {}

inline void OrderUpdateMulti::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.historical_ = {};
}
OrderUpdateMulti::~OrderUpdateMulti() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.OrderUpdateMulti)
  SharedDtor(*this);
}
inline void OrderUpdateMulti::SharedDtor(MessageLite& self) {
  OrderUpdateMulti& this_ = static_cast<OrderUpdateMulti&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.market_id_.Destroy();
  this_._impl_.account_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderUpdateMulti::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderUpdateMulti(arena);
}
constexpr auto OrderUpdateMulti::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.updates_) +
          decltype(OrderUpdateMulti::_impl_.updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(OrderUpdateMulti), alignof(OrderUpdateMulti), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&OrderUpdateMulti::PlacementNew_,
                                 sizeof(OrderUpdateMulti),
                                 alignof(OrderUpdateMulti));
  }
}
constexpr auto OrderUpdateMulti::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderUpdateMulti_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderUpdateMulti::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderUpdateMulti>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderUpdateMulti::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderUpdateMulti>(), &OrderUpdateMulti::ByteSizeLong,
              &OrderUpdateMulti::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_._cached_size_),
          false,
      },
      &OrderUpdateMulti::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderUpdateMulti_class_data_ =
        OrderUpdateMulti::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderUpdateMulti::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderUpdateMulti_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderUpdateMulti_class_data_.tc_table);
  return OrderUpdateMulti_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 68, 2>
OrderUpdateMulti::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderUpdateMulti_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateMulti>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .t4proto.v1.orderrouting.OrderUpdateMultiMessage updates = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.updates_)}},
    // string market_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.market_id_)}},
    // string account_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.account_id_)}},
    // bool historical = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderUpdateMulti, _impl_.historical_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.historical_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string market_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.market_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string account_id = 2;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.account_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool historical = 3;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.historical_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .t4proto.v1.orderrouting.OrderUpdateMultiMessage updates = 4;
    {PROTOBUF_FIELD_OFFSET(OrderUpdateMulti, _impl_.updates_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::OrderUpdateMultiMessage>()},
  }},
  {{
    "\50\11\12\0\0\0\0\0"
    "t4proto.v1.orderrouting.OrderUpdateMulti"
    "market_id"
    "account_id"
  }},
};
PROTOBUF_NOINLINE void OrderUpdateMulti::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.OrderUpdateMulti)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.market_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.account_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.historical_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderUpdateMulti::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderUpdateMulti& this_ = static_cast<const OrderUpdateMulti&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderUpdateMulti::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderUpdateMulti& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.OrderUpdateMulti)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string market_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_market_id().empty()) {
      const ::std::string& _s = this_._internal_market_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateMulti.market_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string account_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_account_id().empty()) {
      const ::std::string& _s = this_._internal_account_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.OrderUpdateMulti.account_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool historical = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_historical() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_historical(), target);
    }
  }

  // repeated .t4proto.v1.orderrouting.OrderUpdateMultiMessage updates = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_updates_size());
       i < n; i++) {
    const auto& repfield = this_._internal_updates().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.OrderUpdateMulti)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderUpdateMulti::ByteSizeLong(const MessageLite& base) {
  const OrderUpdateMulti& this_ = static_cast<const OrderUpdateMulti&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderUpdateMulti::ByteSizeLong() const {
  const OrderUpdateMulti& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.OrderUpdateMulti)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .t4proto.v1.orderrouting.OrderUpdateMultiMessage updates = 4;
    {
      total_size += 1UL * this_._internal_updates_size();
      for (const auto& msg : this_._internal_updates()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string market_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_market_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_market_id());
      }
    }
    // string account_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_account_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account_id());
      }
    }
    // bool historical = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_historical() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderUpdateMulti::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderUpdateMulti*>(&to_msg);
  auto& from = static_cast<const OrderUpdateMulti&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.OrderUpdateMulti)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_updates()->MergeFrom(
      from._internal_updates());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_market_id().empty()) {
        _this->_internal_set_market_id(from._internal_market_id());
      } else {
        if (_this->_impl_.market_id_.IsDefault()) {
          _this->_internal_set_market_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_account_id().empty()) {
        _this->_internal_set_account_id(from._internal_account_id());
      } else {
        if (_this->_impl_.account_id_.IsDefault()) {
          _this->_internal_set_account_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_historical() != 0) {
        _this->_impl_.historical_ = from._impl_.historical_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderUpdateMulti::CopyFrom(const OrderUpdateMulti& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.OrderUpdateMulti)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderUpdateMulti::InternalSwap(OrderUpdateMulti* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_id_, &other->_impl_.market_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_id_, &other->_impl_.account_id_, arena);
  swap(_impl_.historical_, other->_impl_.historical_);
}

::google::protobuf::Metadata OrderUpdateMulti::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateUDSResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateUDSResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_._has_bits_);
};

CreateUDSResponse::CreateUDSResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDSResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:t4proto.v1.orderrouting.CreateUDSResponse)
}
PROTOBUF_NDEBUG_INLINE CreateUDSResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::t4proto::v1::orderrouting::CreateUDSResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        request_id_(arena, from.request_id_),
        status_detail_(arena, from.status_detail_),
        marketref_(arena, from.marketref_) {}

CreateUDSResponse::CreateUDSResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateUDSResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateUDSResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateUDSResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.uds_status_ = from._impl_.uds_status_;

  // @@protoc_insertion_point(copy_constructor:t4proto.v1.orderrouting.CreateUDSResponse)
}
PROTOBUF_NDEBUG_INLINE CreateUDSResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        request_id_(arena),
        status_detail_(arena),
        marketref_(arena) {}

inline void CreateUDSResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.uds_status_ = {};
}
CreateUDSResponse::~CreateUDSResponse() {
  // @@protoc_insertion_point(destructor:t4proto.v1.orderrouting.CreateUDSResponse)
  SharedDtor(*this);
}
inline void CreateUDSResponse::SharedDtor(MessageLite& self) {
  CreateUDSResponse& this_ = static_cast<CreateUDSResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.request_id_.Destroy();
  this_._impl_.status_detail_.Destroy();
  this_._impl_.marketref_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateUDSResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateUDSResponse(arena);
}
constexpr auto CreateUDSResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateUDSResponse),
                                            alignof(CreateUDSResponse));
}
constexpr auto CreateUDSResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateUDSResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateUDSResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateUDSResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateUDSResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateUDSResponse>(), &CreateUDSResponse::ByteSizeLong,
              &CreateUDSResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_._cached_size_),
          false,
      },
      &CreateUDSResponse::kDescriptorMethods,
      &descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateUDSResponse_class_data_ =
        CreateUDSResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateUDSResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateUDSResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateUDSResponse_class_data_.tc_table);
  return CreateUDSResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 82, 2>
CreateUDSResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CreateUDSResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::t4proto::v1::orderrouting::CreateUDSResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .t4proto.v1.common.UDSStatus uds_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CreateUDSResponse, _impl_.uds_status_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.uds_status_)}},
    // string request_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.request_id_)}},
    // string status_detail = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.status_detail_)}},
    // string MarketRef = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.marketref_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string request_id = 1;
    {PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.request_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status_detail = 2;
    {PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.status_detail_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string MarketRef = 3;
    {PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.marketref_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .t4proto.v1.common.UDSStatus uds_status = 4;
    {PROTOBUF_FIELD_OFFSET(CreateUDSResponse, _impl_.uds_status_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\51\12\15\11\0\0\0\0"
    "t4proto.v1.orderrouting.CreateUDSResponse"
    "request_id"
    "status_detail"
    "MarketRef"
  }},
};
PROTOBUF_NOINLINE void CreateUDSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:t4proto.v1.orderrouting.CreateUDSResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.request_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.status_detail_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.marketref_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.uds_status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateUDSResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateUDSResponse& this_ = static_cast<const CreateUDSResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateUDSResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateUDSResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:t4proto.v1.orderrouting.CreateUDSResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string request_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_request_id().empty()) {
      const ::std::string& _s = this_._internal_request_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDSResponse.request_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string status_detail = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_status_detail().empty()) {
      const ::std::string& _s = this_._internal_status_detail();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDSResponse.status_detail");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string MarketRef = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_marketref().empty()) {
      const ::std::string& _s = this_._internal_marketref();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "t4proto.v1.orderrouting.CreateUDSResponse.MarketRef");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .t4proto.v1.common.UDSStatus uds_status = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_uds_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_uds_status(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:t4proto.v1.orderrouting.CreateUDSResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateUDSResponse::ByteSizeLong(const MessageLite& base) {
  const CreateUDSResponse& this_ = static_cast<const CreateUDSResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateUDSResponse::ByteSizeLong() const {
  const CreateUDSResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:t4proto.v1.orderrouting.CreateUDSResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string request_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_request_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_request_id());
      }
    }
    // string status_detail = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_status_detail().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status_detail());
      }
    }
    // string MarketRef = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_marketref().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_marketref());
      }
    }
    // .t4proto.v1.common.UDSStatus uds_status = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_uds_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_uds_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateUDSResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateUDSResponse*>(&to_msg);
  auto& from = static_cast<const CreateUDSResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:t4proto.v1.orderrouting.CreateUDSResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_request_id().empty()) {
        _this->_internal_set_request_id(from._internal_request_id());
      } else {
        if (_this->_impl_.request_id_.IsDefault()) {
          _this->_internal_set_request_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_status_detail().empty()) {
        _this->_internal_set_status_detail(from._internal_status_detail());
      } else {
        if (_this->_impl_.status_detail_.IsDefault()) {
          _this->_internal_set_status_detail("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_marketref().empty()) {
        _this->_internal_set_marketref(from._internal_marketref());
      } else {
        if (_this->_impl_.marketref_.IsDefault()) {
          _this->_internal_set_marketref("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_uds_status() != 0) {
        _this->_impl_.uds_status_ = from._impl_.uds_status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUDSResponse::CopyFrom(const CreateUDSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:t4proto.v1.orderrouting.CreateUDSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateUDSResponse::InternalSwap(CreateUDSResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_detail_, &other->_impl_.status_detail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.marketref_, &other->_impl_.marketref_, arena);
  swap(_impl_.uds_status_, other->_impl_.uds_status_);
}

::google::protobuf::Metadata CreateUDSResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace orderrouting
}  // namespace v1
}  // namespace t4proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_t4_2fv1_2forderrouting_2forderrouting_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
