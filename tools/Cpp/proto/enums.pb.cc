// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: enums.proto
// Protobuf C++ Version: 6.31.1

#include "enums.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace t4proto {
namespace v1 {
namespace common {
}  // namespace common
}  // namespace v1
}  // namespace t4proto
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_enums_2eproto[38];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_enums_2eproto = nullptr;
const ::uint32_t TableStruct_enums_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* PROTOBUF_NULLABLE schemas = nullptr;
static constexpr ::_pb::Message* PROTOBUF_NONNULL const* PROTOBUF_NULLABLE
    file_default_instances = nullptr;
const char descriptor_table_protodef_enums_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013enums.proto\022\021t4proto.v1.common*\255\007\n\013Log"
    "inResult\022\030\n\024LOGIN_RESULT_SUCCESS\020\000\022\027\n\023LO"
    "GIN_RESULT_FAILED\020\001\022&\n\"LOGIN_RESULT_APPL"
    "ICATION_NOT_VALID\020\002\022!\n\035LOGIN_RESULT_FIRM"
    "_NOT_ALLOWED\020\003\022!\n\035LOGIN_RESULT_USER_NOT_"
    "ALLOWED\020\004\022\"\n\036LOGIN_RESULT_INCORRECT_VERS"
    "ION\020\005\022$\n LOGIN_RESULT_LOGGED_IN_ELSEWHER"
    "E\020\006\022\027\n\023LOGIN_RESULT_LOGOUT\020\007\022&\n\"LOGIN_RE"
    "SULT_UNEXPECTED_DISCONNECT\020\010\022\035\n\031LOGIN_RE"
    "SULT_UNAUTHORIZED\020\t\022!\n\035LOGIN_RESULT_UNEX"
    "PECTED_ERROR\020\n\022#\n\037LOGIN_RESULT_ROLE_NOT_"
    "SUPPORTED\020\013\022$\n LOGIN_RESULT_API_MESSAGE_"
    "BACKLOG\020\014\022\'\n#LOGIN_RESULT_SERVER_MESSAGE"
    "_BACKLOG\020\r\022!\n\035LOGIN_RESULT_PASSWORD_EXPI"
    "RED\020\016\022\'\n#LOGIN_RESULT_PASSWORD_CHANGE_FA"
    "ILED\020\020\022&\n\"LOGIN_RESULT_PASSWORD_ALREADY_"
    "USED\020\021\022\033\n\027LOGIN_RESULT_LOCKED_OUT\020\022\022-\n)L"
    "OGIN_RESULT_ADDITIONAL_USERS_NOT_ALLOWED"
    "\020\023\022&\n\"LOGIN_RESULT_MARKET_DATA_NOT_SETUP"
    "\020\024\022%\n!LOGIN_RESULT_TWO_FACTOR_NOT_SETUP\020"
    "\025\022\"\n\036LOGIN_RESULT_TWO_FACTOR_FAILED\020\026\022\"\n"
    "\036LOGIN_RESULT_FIX_SESSION_ERROR\020\027\022$\n LOG"
    "IN_RESULT_TWO_FACTOR_REQUIRED\020\030\022\034\n\030LOGIN"
    "_RESULT_USER_EXISTS\020\031\022!\n\024LOGIN_RESULT_UN"
    "KNOWN\020\377\377\377\377\377\377\377\377\377\001*a\n\013PriceFormat\022\030\n\024PRICE"
    "_FORMAT_DECIMAL\020\000\022\025\n\021PRICE_FORMAT_REAL\020\001"
    "\022!\n\035PRICE_FORMAT_CLEARING_DECIMAL\020\002*\225\002\n\013"
    "AccountMode\022\032\n\026ACCOUNT_MODE_BY_MARKET\020\000\022"
    "\034\n\030ACCOUNT_MODE_BY_CONTRACT\020\001\022\033\n\027ACCOUNT"
    "_MODE_BY_ACCOUNT\020\002\022\037\n\033ACCOUNT_MODE_BY_AC"
    "COUNT_DAY\020\003\022\035\n\031ACCOUNT_MODE_BY_PORTFOLIO"
    "\020\004\022\025\n\021ACCOUNT_MODE_T500\020\005\022\032\n\026ACCOUNT_MOD"
    "E_T500_DEMO\020\006\022\031\n\025ACCOUNT_MODE_AUTO_LIQ\020\007"
    "\022!\n\024ACCOUNT_MODE_UNKNOWN\020\377\377\377\377\377\377\377\377\377\001*\230\003\n\n"
    "MarketMode\022\031\n\025MARKET_MODE_UNDEFINED\020\000\022\030\n"
    "\024MARKET_MODE_PRE_OPEN\020\001\022\024\n\020MARKET_MODE_O"
    "PEN\020\002\022\037\n\033MARKET_MODE_RESTRICTED_OPEN\020\003\022\032"
    "\n\026MARKET_MODE_PRE_CLOSED\020\004\022\026\n\022MARKET_MOD"
    "E_CLOSED\020\005\022\031\n\025MARKET_MODE_SUSPENDED\020\006\022\026\n"
    "\022MARKET_MODE_HALTED\020\007\022\026\n\022MARKET_MODE_FAI"
    "LED\020\010\022\031\n\025MARKET_MODE_PRE_CROSS\020\t\022\025\n\021MARK"
    "ET_MODE_CROSS\020\n\022\027\n\023MARKET_MODE_EXPIRED\020\013"
    "\022\030\n\024MARKET_MODE_REJECTED\020\014\022\033\n\027MARKET_MOD"
    "E_UNAVAILABLE\020\r\022\035\n\031MARKET_MODE_NO_PERMIS"
    "SION\020\016*\214\002\n\013DepthBuffer\022 \n\034DEPTH_BUFFER_N"
    "O_SUBSCRIPTION\020\000\022\033\n\027DEPTH_BUFFER_SLOW_TR"
    "ADE\020\001\022\034\n\030DEPTH_BUFFER_SMART_TRADE\020\002\022\033\n\027D"
    "EPTH_BUFFER_SLOW_SMART\020\003\022\026\n\022DEPTH_BUFFER"
    "_SMART\020\004\022\033\n\027DEPTH_BUFFER_FAST_SMART\020\005\022\024\n"
    "\020DEPTH_BUFFER_ALL\020\006\022\033\n\027DEPTH_BUFFER_FAST"
    "_TRADE\020\007\022\033\n\027DEPTH_BUFFER_TRADE_ONLY\020\010*u\n"
    "\013DepthLevels\022\032\n\026DEPTH_LEVELS_UNDEFINED\020\000"
    "\022\032\n\026DEPTH_LEVELS_BEST_ONLY\020\001\022\027\n\023DEPTH_LE"
    "VELS_NORMAL\020\n\022\025\n\020DEPTH_LEVELS_ALL\020\377\001*T\n\010"
    "BidOffer\022\027\n\023BID_OFFER_UNDEFINED\020\000\022\021\n\rBID"
    "_OFFER_BID\020\001\022\034\n\017BID_OFFER_OFFER\020\377\377\377\377\377\377\377\377"
    "\377\001*\210\004\n\014MarketFlags2\022\033\n\027MARKET_FLAGS2_UND"
    "EFINED\020\000\022\026\n\022MARKET_FLAGS2_FAST\020\001\022&\n\"MARK"
    "ET_FLAGS2_PRICE_LIMITS_ENABLED\020\002\022\033\n\027MARK"
    "ET_FLAGS2_NO_CANCEL\020\004\022\035\n\031MARKET_FLAGS2_I"
    "MPLIED_OFF\020\010\022&\n\"MARKET_FLAGS2_NEW_PRICE_"
    "INDICATION\020\020\022+\n\'MARKET_FLAGS2_NOT_AVAILA"
    "BLE_FOR_TRADING\020 \022\034\n\030MARKET_FLAGS2_POST_"
    "CLOSE\020@\022!\n\034MARKET_FLAGS2_GROUP_SCHEDULE\020"
    "\200\001\022(\n#MARKET_FLAGS2_INSTRUMENT_ACTIVATIO"
    "N\020\200\002\022(\n#MARKET_FLAGS2_INSTRUMENT_EXPIRAT"
    "ION\020\200\004\022\037\n\032MARKET_FLAGS2_MARKET_EVENT\020\200\010\022"
    "&\n!MARKET_FLAGS2_RECOVERY_IN_PROCESS\020\200\020\022"
    ",\n\'MARKET_FLAGS2_SURVEILLANCE_INTERVENTI"
    "ON\020\200 *\334\002\n\014ContractType\022\031\n\025CONTRACT_TYPE_"
    "UNKNOWN\020\000\022\030\n\024CONTRACT_TYPE_OPTION\020\001\022\035\n\031C"
    "ONTRACT_TYPE_OPTION_CALL\020\002\022\034\n\030CONTRACT_T"
    "YPE_OPTION_PUT\020\003\022\027\n\023CONTRACT_TYPE_STOCK\020"
    "\004\022\030\n\024CONTRACT_TYPE_FUTURE\020\005\022\027\n\023CONTRACT_"
    "TYPE_INDEX\020\006\022\033\n\027CONTRACT_TYPE_SYNTHETIC\020"
    "\007\022\037\n\033CONTRACT_TYPE_BINARY_OPTION\020\010\022\025\n\021CO"
    "NTRACT_TYPE_UDS\020\t\022\031\n\025CONTRACT_TYPE_FX_SP"
    "OT\020\n\022\036\n\021CONTRACT_TYPE_ANY\020\377\377\377\377\377\377\377\377\377\001*\303\001\n"
    "\016MarketDataType\022\031\n\025MARKET_DATA_TYPE_NONE"
    "\020\000\022\030\n\024MARKET_DATA_TYPE_TOB\020\001\022\032\n\026MARKET_D"
    "ATA_TYPE_DEPTH\020\002\022\033\n\027MARKET_DATA_TYPE_E_M"
    "INI\020\004\022\034\n\030MARKET_DATA_TYPE_DELAYED\020\010\022%\n\030M"
    "ARKET_DATA_TYPE_NOT_SET\020\377\377\377\377\377\377\377\377\377\001*\375\026\n\014S"
    "trategyType\022\026\n\022STRATEGY_TYPE_NONE\020\000\022!\n\035S"
    "TRATEGY_TYPE_CALENDAR_SPREAD\020\001\022$\n STRATE"
    "GY_TYPE_RT_CALENDAR_SPREAD\020\002\022\'\n#STRATEGY"
    "_TYPE_INTER_CONTRACT_SPREAD\020\003\022\033\n\027STRATEG"
    "Y_TYPE_BUTTERFLY\020\004\022\030\n\024STRATEGY_TYPE_COND"
    "OR\020\005\022\"\n\036STRATEGY_TYPE_DOUBLE_BUTTERFLY\020\006"
    "\022\034\n\030STRATEGY_TYPE_HORIZONTAL\020\007\022\030\n\024STRATE"
    "GY_TYPE_BUNDLE\020\010\022\037\n\033STRATEGY_TYPE_MONTH_"
    "VS_PACK\020\t\022\026\n\022STRATEGY_TYPE_PACK\020\n\022\035\n\031STR"
    "ATEGY_TYPE_PACK_SPREAD\020\013\022 \n\034STRATEGY_TYP"
    "E_PACK_BUTTERFLY\020\014\022\037\n\033STRATEGY_TYPE_BUND"
    "LE_SPREAD\020\r\022\027\n\023STRATEGY_TYPE_STRIP\020\016\022\027\n\023"
    "STRATEGY_TYPE_CRACK\020\017\022!\n\035STRATEGY_TYPE_T"
    "REASURY_SPREAD\020\020\022\027\n\023STRATEGY_TYPE_CRUSH\020"
    "\021\022\033\n\027STRATEGY_TYPE_THREE_WAY\020\023\022,\n(STRATE"
    "GY_TYPE_THREE_WAY_STRADDLE_VS_CALL\020\024\022+\n\'"
    "STRATEGY_TYPE_THREE_WAY_STRADDLE_VS_PUT\020"
    "\025\022\025\n\021STRATEGY_TYPE_BOX\020\026\022\033\n\027STRATEGY_TYP"
    "E_XMAS_TREE\020\027\022#\n\037STRATEGY_TYPE_CONDITION"
    "AL_CURVE\020\030\022\030\n\024STRATEGY_TYPE_DOUBLE\020\031\022%\n!"
    "STRATEGY_TYPE_HORIZONTAL_STRADDLE\020\032\022\035\n\031S"
    "TRATEGY_TYPE_IRON_CONDOR\020\033\022\033\n\027STRATEGY_T"
    "YPE_RATIO_1X2\020\034\022\033\n\027STRATEGY_TYPE_RATIO_1"
    "X3\020\035\022\033\n\027STRATEGY_TYPE_RATIO_2X3\020\036\022\037\n\033STR"
    "ATEGY_TYPE_RISK_REVERSAL\020\037\022 \n\034STRATEGY_T"
    "YPE_STRADDLE_STRIP\020 \022\032\n\026STRATEGY_TYPE_ST"
    "RADDLE\020!\022\032\n\026STRATEGY_TYPE_STRANGLE\020\"\022\032\n\026"
    "STRATEGY_TYPE_VERTICAL\020#\022\034\n\030STRATEGY_TYP"
    "E_JELLY_ROLL\020$\022 \n\034STRATEGY_TYPE_IRON_BUT"
    "TERFLY\020%\022\026\n\022STRATEGY_TYPE_GUTS\020&\022\031\n\025STRA"
    "TEGY_TYPE_GENERIC\020\'\022\032\n\026STRATEGY_TYPE_DIA"
    "GONAL\020(\022#\n\037STRATEGY_TYPE_COVERED_THREE_W"
    "AY\020)\0224\n0STRATEGY_TYPE_COVERED_THREE_WAY_"
    "STRADDLE_VS_CALL\020*\0223\n/STRATEGY_TYPE_COVE"
    "RED_THREE_WAY_STRADDLE_VS_PUT\020+\022\035\n\031STRAT"
    "EGY_TYPE_COVERED_BOX\020,\022#\n\037STRATEGY_TYPE_"
    "COVERED_XMAS_TREE\020-\022+\n\'STRATEGY_TYPE_COV"
    "ERED_CONDITIONAL_CURVE\020.\022 \n\034STRATEGY_TYP"
    "E_COVERED_DOUBLE\020/\022-\n)STRATEGY_TYPE_COVE"
    "RED_HORIZONTAL_STRADDLE\0200\022%\n!STRATEGY_TY"
    "PE_COVERED_IRON_CONDOR\0201\022#\n\037STRATEGY_TYP"
    "E_COVERED_RATIO_1X2\0202\022#\n\037STRATEGY_TYPE_C"
    "OVERED_RATIO_1X3\0203\022#\n\037STRATEGY_TYPE_COVE"
    "RED_RATIO_2X3\0204\022\'\n#STRATEGY_TYPE_COVERED"
    "_RISK_REVERSAL\0205\022(\n$STRATEGY_TYPE_COVERE"
    "D_STRADDLE_STRIP\0206\022\"\n\036STRATEGY_TYPE_COVE"
    "RED_STRADDLE\0207\022\"\n\036STRATEGY_TYPE_COVERED_"
    "STRANGLE\0208\022\"\n\036STRATEGY_TYPE_COVERED_VERT"
    "ICAL\0209\022$\n STRATEGY_TYPE_COVERED_JELLY_RO"
    "LL\020:\022(\n$STRATEGY_TYPE_COVERED_IRON_BUTTE"
    "RFLY\020;\022\036\n\032STRATEGY_TYPE_COVERED_GUTS\020<\022!"
    "\n\035STRATEGY_TYPE_COVERED_GENERIC\020=\022\"\n\036STR"
    "ATEGY_TYPE_COVERED_DIAGONAL\020>\022#\n\037STRATEG"
    "Y_TYPE_COVERED_BUTTERFLY\020\?\022 \n\034STRATEGY_T"
    "YPE_COVERED_CONDOR\020@\022$\n STRATEGY_TYPE_CO"
    "VERED_HORIZONTAL\020A\022\037\n\033STRATEGY_TYPE_COVE"
    "RED_STRIP\020B\022 \n\034STRATEGY_TYPE_COVERED_OPT"
    "ION\020C\022 \n\034STRATEGY_TYPE_BALANCED_STRIP\020D\022"
    "\"\n\036STRATEGY_TYPE_UNBALANCED_STRIP\020E\022&\n\"S"
    "TRATEGY_TYPE_INTER_CONTRACT_STRIP\020F\022\036\n\032S"
    "TRATEGY_TYPE_INVOICE_SWAP\020G\022$\n STRATEGY_"
    "TYPE_INTEREST_RATE_SWAP\020H\022%\n!STRATEGY_TY"
    "PE_AVERAGE_PRICE_STRIP\020I\022\037\n\033STRATEGY_TYP"
    "E_TREASURY_TAIL\020J\022,\n(STRATEGY_TYPE_AVERA"
    "GE_PRICE_STRIP_SPREAD\020K\022\'\n#STRATEGY_TYPE"
    "_INVOICE_SWAP_CALENDAR\020L\022\'\n#STRATEGY_TYP"
    "E_INVOICE_SWAP_SWITCHES\020M\022*\n&STRATEGY_TY"
    "PE_VOLATILITY_QUOTED_OPTION\020N\022\031\n\025STRATEG"
    "Y_TYPE_FX_SPOT\020O\022&\n\"STRATEGY_TYPE_AVERAG"
    "E_PRICE_BUNDLE\020P\022*\n&STRATEGY_TYPE_FIXED_"
    "PRICE_RATIO_SPREAD\020Q\022(\n$STRATEGY_TYPE_SA"
    "_CBOT_SOYBEAN_SPREAD\020R\022*\n&STRATEGY_TYPE_"
    "BALANCED_STRIP_BUTTERFLY\020S\022\036\n\021STRATEGY_T"
    "YPE_ANY\020\377\377\377\377\377\377\377\377\377\001*\271\002\n\022ContractRiskStatu"
    "s\022\035\n\031CONTRACT_RISK_STATUS_NONE\020\000\022$\n CONT"
    "RACT_RISK_STATUS_DAY_TRADING\020\001\022!\n\035CONTRA"
    "CT_RISK_STATUS_ALERTING\020\002\022$\n CONTRACT_RI"
    "SK_STATUS_LIQUIDATION\020\003\022,\n(CONTRACT_RISK"
    "_STATUS_LIQUIDATION_WAITING\020\004\0225\n1CONTRAC"
    "T_RISK_STATUS_BLOCK_EXPIRATION_LIQUIDATI"
    "ON\020\005\0220\n,CONTRACT_RISK_STATUS_PRICE_LIMIT"
    "_LIQUIDATION\020\006*\316\002\n\rAccountStatus\022\032\n\026ACCO"
    "UNT_STATUS_UNKNOWN\020\000\022\032\n\026ACCOUNT_STATUS_B"
    "LOCKED\020\001\022\025\n\021ACCOUNT_STATUS_OK\020\002\022\037\n\033ACCOU"
    "NT_STATUS_UNRESTRICTED\020\003\022\032\n\026ACCOUNT_STAT"
    "US_DELETED\020\004\022\033\n\027ACCOUNT_STATUS_DISABLED\020"
    "\005\022&\n\"ACCOUNT_STATUS_OUTSIDE_ACTIVE_TIME\020"
    "\006\022!\n\035ACCOUNT_STATUS_NOT_ACCESSIBLE\020\007\022!\n\035"
    "ACCOUNT_STATUS_PIT_TRADE_ONLY\020\010\022&\n\"ACCOU"
    "NT_STATUS_LOSS_LIMIT_EXCEEDED\020\t*\225\001\n\016Acco"
    "untEnabled\022\034\n\030ACCOUNT_ENABLED_DISABLED\020\000"
    "\022\033\n\027ACCOUNT_ENABLED_ENABLED\020\001\022$\n ACCOUNT"
    "_ENABLED_BACK_OFFICE_ONLY\020\002\022\"\n\036ACCOUNT_E"
    "NABLED_PIT_TRADE_ONLY\020\003*\203\001\n\021AccountMargi"
    "nType\022\034\n\030ACCOUNT_MARGIN_TYPE_SPEC\020\000\022\'\n#A"
    "CCOUNT_MARGIN_TYPE_HEDGE_OR_MEMBER\020\001\022\'\n#"
    "ACCOUNT_MARGIN_TYPE_FIRM_OR_ACCOUNT\020\002*\371\t"
    "\n\013OrderChange\022\025\n\021ORDER_CHANGE_NONE\020\000\022\027\n\023"
    "ORDER_CHANGE_FAILED\020\001\022(\n$ORDER_CHANGE_SU"
    "BMISSION_RISK_SUCCESS\020\002\022)\n%ORDER_CHANGE_"
    "SUBMISSION_RISK_REJECTED\020\003\022 \n\034ORDER_CHAN"
    "GE_SUBMISSION_SENT\020\004\022\"\n\036ORDER_CHANGE_SUB"
    "MISSION_FAILED\020\005\022#\n\037ORDER_CHANGE_SUBMISS"
    "ION_SUCCESS\020\006\022$\n ORDER_CHANGE_SUBMISSION"
    "_REJECTED\020\007\022&\n\"ORDER_CHANGE_REVISION_RIS"
    "K_SUCCESS\020\010\022%\n!ORDER_CHANGE_REVISION_RIS"
    "K_FAILED\020\t\022\036\n\032ORDER_CHANGE_REVISION_SENT"
    "\020\n\022 \n\034ORDER_CHANGE_REVISION_FAILED\020\013\022!\n\035"
    "ORDER_CHANGE_REVISION_SUCCESS\020\014\022\"\n\036ORDER"
    "_CHANGE_REVISION_REJECTED\020\r\022\"\n\036ORDER_CHA"
    "NGE_PULL_RISK_SUCCESS\020\016\022!\n\035ORDER_CHANGE_"
    "PULL_RISK_FAILED\020\017\022\032\n\026ORDER_CHANGE_PULL_"
    "SENT\020\020\022\034\n\030ORDER_CHANGE_PULL_FAILED\020\021\022\035\n\031"
    "ORDER_CHANGE_PULL_SUCCESS\020\022\022\036\n\032ORDER_CHA"
    "NGE_PULL_REJECTED\020\023\022\026\n\022ORDER_CHANGE_TRAD"
    "E\020\024\022 \n\034ORDER_CHANGE_TRADE_COMPLETED\020\025\022\035\n"
    "\031ORDER_CHANGE_TRADE_BUSTED\020\026\022\031\n\025ORDER_CH"
    "ANGE_HANDOVER\020\027\022,\n(ORDER_CHANGE_STATUS_R"
    "EQUEST_RISK_SUCCESS\020\030\022+\n\'ORDER_CHANGE_ST"
    "ATUS_REQUEST_RISK_FAILED\020\031\022$\n ORDER_CHAN"
    "GE_STATUS_REQUEST_SENT\020\032\022&\n\"ORDER_CHANGE"
    "_STATUS_REQUEST_FAILED\020\033\022\'\n#ORDER_CHANGE"
    "_STATUS_REQUEST_SUCCESS\020\034\022(\n$ORDER_CHANG"
    "E_STATUS_REQUEST_REJECTED\020\035\022\031\n\025ORDER_CHA"
    "NGE_ROLLOVER\020\036\022\034\n\030ORDER_CHANGE_TAG_SUCCE"
    "SS\020\037\022\033\n\027ORDER_CHANGE_TAG_FAILED\020 \022&\n\"ORD"
    "ER_CHANGE_ADD_PIT_TRADE_SUCCESS\020!\022%\n!ORD"
    "ER_CHANGE_ADD_PIT_TRADE_FAILED\020\"\022\'\n#ORDE"
    "R_CHANGE_ADD_PIT_TRADE_REJECTED\020#*\247\001\n\013Or"
    "derStatus\022\025\n\021ORDER_STATUS_NONE\020\000\022\030\n\024ORDE"
    "R_STATUS_WORKING\020\001\022\031\n\025ORDER_STATUS_FINIS"
    "HED\020\002\022\031\n\025ORDER_STATUS_REJECTED\020\003\022\025\n\021ORDE"
    "R_STATUS_HELD\020\004\022\032\n\026ORDER_STATUS_NO_CHANG"
    "E\020\005*\304\001\n\017ResponsePending\022\031\n\025RESPONSE_PEND"
    "ING_NONE\020\000\022\037\n\033RESPONSE_PENDING_SUBMISSIO"
    "N\020\001\022\035\n\031RESPONSE_PENDING_REVISION\020\002\022\031\n\025RE"
    "SPONSE_PENDING_PULL\020\003\022\033\n\027RESPONSE_PENDIN"
    "G_STATUS\020\004\022\036\n\032RESPONSE_PENDING_NO_CHANGE"
    "\020\005*\273\006\n\016ActivationType\022\035\n\031ACTIVATION_TYPE"
    "_IMMEDIATE\020\000\022\030\n\024ACTIVATION_TYPE_HOLD\020\001\022\035"
    "\n\031ACTIVATION_TYPE_TRIGGERED\020\002\022$\n ACTIVAT"
    "ION_TYPE_AT_OR_AFTER_TIME\020\003\022+\n\'ACTIVATIO"
    "N_TYPE_AT_OR_ABOVE_TRADE_TICKS\020\004\022+\n\'ACTI"
    "VATION_TYPE_AT_OR_BELOW_TRADE_TICKS\020\005\022\"\n"
    "\036ACTIVATION_TYPE_ON_MARKET_MODE\020\006\022.\n*ACT"
    "IVATION_TYPE_TRIGGERED_AT_OR_AFTER_TIME\020"
    "\007\0225\n1ACTIVATION_TYPE_TRIGGERED_AT_OR_ABO"
    "VE_TRADE_TICKS\020\010\0225\n1ACTIVATION_TYPE_TRIG"
    "GERED_AT_OR_BELOW_TRADE_TICKS\020\t\022,\n(ACTIV"
    "ATION_TYPE_TRIGGERED_ON_MARKET_MODE\020\n\022\031\n"
    "\025ACTIVATION_TYPE_QUEUE\020\013\022#\n\037ACTIVATION_T"
    "YPE_TRIGGERED_QUEUE\020\014\022$\n ACTIVATION_TYPE"
    "_PIT_FILLED_QUEUE\020\r\022%\n!ACTIVATION_TYPE_A"
    "T_OR_ABOVE_TICKS\020\016\022%\n!ACTIVATION_TYPE_AT"
    "_OR_BELOW_TICKS\020\017\022/\n+ACTIVATION_TYPE_TRI"
    "GGERED_AT_OR_ABOVE_TICKS\020\020\022/\n+ACTIVATION"
    "_TYPE_TRIGGERED_AT_OR_BELOW_TICKS\020\021\022#\n\037A"
    "CTIVATION_TYPE_MARKET_ON_CLOSE\020\022\022&\n\031ACTI"
    "VATION_TYPE_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001*\313\004\n\tPri"
    "ceType\022\025\n\021PRICE_TYPE_MARKET\020\000\022\024\n\020PRICE_T"
    "YPE_LIMIT\020\001\022\032\n\026PRICE_TYPE_STOP_MARKET\020\002\022"
    "\031\n\025PRICE_TYPE_STOP_LIMIT\020\003\022!\n\035PRICE_TYPE"
    "_OVERNIGHT_POSITION\020\004\022\022\n\016PRICE_TYPE_PIT\020"
    "\005\022 \n\034PRICE_TYPE_MARKET_IF_TOUCHED\020\006\022\036\n\032P"
    "RICE_TYPE_STOP_SAME_LIMIT\020\007\022\023\n\017PRICE_TYP"
    "E_JOIN\020\010\022\022\n\016PRICE_TYPE_HIT\020\t\022#\n\037PRICE_TY"
    "PE_BACK_OFFICE_POSITION\020\n\022\037\n\033PRICE_TYPE_"
    "SYNTHETIC_MARKET\020\013\022\036\n\032PRICE_TYPE_SYNTHET"
    "IC_LIMIT\020\014\022$\n PRICE_TYPE_SYNTHETIC_STOP_"
    "MARKET\020\r\022#\n\037PRICE_TYPE_SYNTHETIC_STOP_LI"
    "MIT\020\016\022\022\n\016PRICE_TYPE_RFQ\020\017\022\026\n\022PRICE_TYPE_"
    "FLATTEN\020\020\022\025\n\021PRICE_TYPE_IMPORT\020\021\022!\n\035PRIC"
    "E_TYPE_OPTIONS_SETTLEMENT\020\022\022!\n\024PRICE_TYP"
    "E_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001*\345\001\n\010TimeType\022\024\n\020T"
    "IME_TYPE_NORMAL\020\000\022\"\n\036TIME_TYPE_IMMEDIATE"
    "_AND_CANCEL\020\001\022!\n\035TIME_TYPE_GOOD_TILL_CAN"
    "CELLED\020\002\022\035\n\031TIME_TYPE_COMPLETE_VOLUME\020\003\022"
    "\034\n\030TIME_TYPE_MARKET_ON_OPEN\020\004\022\035\n\031TIME_TY"
    "PE_MARKET_ON_CLOSE\020\005\022 \n\023TIME_TYPE_UNDEFI"
    "NED\020\377\377\377\377\377\377\377\377\377\001*\303\002\n\017ApplicationType\022\033\n\027AP"
    "PLICATION_TYPE_MANUAL\020\000\022\030\n\024APPLICATION_T"
    "YPE_ATS\020\001\022!\n\035APPLICATION_TYPE_PROFESSION"
    "AL\020\002\022%\n!APPLICATION_TYPE_NON_PROFESSIONA"
    "L\020\003\022\037\n\033APPLICATION_TYPE_TRADE_DESK\020\004\022\036\n\032"
    "APPLICATION_TYPE_WALLBOARD\020\005\022\037\n\033APPLICAT"
    "ION_TYPE_SUB_VENDOR\020\006\022 \n\034APPLICATION_TYP"
    "E_ATS_DISPLAY\020\007\022+\n\'APPLICATION_TYPE_FINA"
    "NCIAL_PROFESSIONAL\020\010*O\n\007BuySell\022\026\n\022BUY_S"
    "ELL_UNDEFINED\020\000\022\020\n\014BUY_SELL_BUY\020\001\022\032\n\rBUY"
    "_SELL_SELL\020\377\377\377\377\377\377\377\377\377\001*\204\001\n\003CTI\022\021\n\rCTI_UND"
    "EFINED\020\000\022\016\n\nCTI_MEMBER\020\001\022\023\n\017CTI_PROPRIET"
    "ARY\020\002\022\025\n\021CTI_BROKER_MEMBER\020\003\022\027\n\023CTI_BROK"
    "ER_CUSTOMER\020\004\022\025\n\010CTI_NONE\020\377\377\377\377\377\377\377\377\377\001*\375\002\n"
    "\006Origin\022\024\n\020ORIGIN_UNDEFINED\020\000\022\023\n\017ORIGIN_"
    "CUSTOMER\020\001\022\027\n\023ORIGIN_NON_CUSTOMER\020\002\022\030\n\024O"
    "RIGIN_OTHER_MEMBERS\020\003\022\030\n\024ORIGIN_FLOOR_BR"
    "OKERS\020\004\022\027\n\023ORIGIN_POSTING_NONE\020\005\022\031\n\025ORIG"
    "IN_POSTING_MANUAL\020\006\022\034\n\030ORIGIN_POSTING_AU"
    "TOMATIC\020\007\022\032\n\026ORIGIN_POSTING_GIVE_UP\020\010\022-\n"
    ")ORIGIN_POSTING_AUTO_AND_ACT_AUTHORISATI"
    "ON\020\t\022/\n+ORIGIN_POSTING_MANUAL_AND_ACT_AU"
    "THORISATION\020\n\022\024\n\020ORIGIN_PRINCIPAL\020\013\022\027\n\023O"
    "RIGIN_MARKET_MAKER\020\014*\326\020\n\013AccountCode\022\032\n\026"
    "ACCOUNT_CODE_UNDEFINED\020\000\022\025\n\021ACCOUNT_CODE"
    "_NONE\020\001\022\'\n#ACCOUNT_CODE_GIVE_UP_TO_SINGL"
    "E_FIRM\020\002\022*\n&ACCOUNT_CODE_GIVE_UP_TO_MULT"
    "IPLE_FIRMS\020\003\022\035\n\031ACCOUNT_CODE_MARKET_MAKE"
    "R\020\004\022\031\n\025ACCOUNT_CODE_AGENT_A1\020\005\022\033\n\027ACCOUN"
    "T_CODE_GIVE_UP_G1\020\006\022\033\n\027ACCOUNT_CODE_GIVE"
    "_UP_G2\020\007\022 \n\034ACCOUNT_CODE_MARKET_MAKER_M1"
    "\020\010\022 \n\034ACCOUNT_CODE_MARKET_MAKER_M2\020\t\022\037\n\033"
    "ACCOUNT_CODE_PROPRIETARY_P1\020\n\022\037\n\033ACCOUNT"
    "_CODE_PROPRIETARY_P2\020\013\022\033\n\027ACCOUNT_CODE_S"
    "EGREGATED\020\014\022\037\n\033ACCOUNT_CODE_NON_SEGREGAT"
    "ED\020\r\022\026\n\022ACCOUNT_CODE_HOUSE\020\016\022\026\n\022ACCOUNT_"
    "CODE_LOCAL\020\017\022\030\n\024ACCOUNT_CODE_DEFAULT\020\020\022\032"
    "\n\026ACCOUNT_CODE_ALLOCATED\020\021\022\026\n\022ACCOUNT_CO"
    "DE_SPLIT\020\022\022\033\n\027ACCOUNT_CODE_UNASSIGNED\020\023\022"
    "\036\n\032ACCOUNT_CODE_GAS_ASSOCIATE\020\024\022\031\n\025ACCOU"
    "NT_CODE_CUSTOMER\020\025\022$\n ACCOUNT_CODE_US_CU"
    "STOMER_FUTURES\020\026\022\"\n\036ACCOUNT_CODE_US_CUST"
    "OMER_SWAPS\020\027\022!\n\035ACCOUNT_CODE_US_CUSTOMER"
    "_FBOT\020\030\022\025\n\021ACCOUNT_CODE_FIRM\020\031\0223\n/ACCOUN"
    "T_CODE_MEMBER_CUSTOMER_SEGREGATED_ACCOUN"
    "T\020\032\022%\n!ACCOUNT_CODE_MEMBER_HOUSE_ACCOUNT"
    "\020\033\022.\n*ACCOUNT_CODE_MEMBER_SIPC_PROTECTED"
    "_ACCOUNT\020\034\022B\n>ACCOUNT_CODE_USER_PROXY_FO"
    "R_TRADER_CUSTOMER_SEGREGATED_ACCOUNT\020\035\0224"
    "\n0ACCOUNT_CODE_USER_PROXY_FOR_TRADER_HOU"
    "SE_ACCOUNT\020\036\022=\n9ACCOUNT_CODE_USER_PROXY_"
    "FOR_TRADER_SIPC_PROTECTED_ACCOUNT\020\037\022)\n%A"
    "CCOUNT_CODE_NON_MEMBER_HOUSE_ACCOUNT\020 \0222"
    "\n.ACCOUNT_CODE_NON_MEMBER_SIPC_PROTECTED"
    "_ACCOUNT\020!\0222\n.ACCOUNT_CODE_CUSTOMER_FLOO"
    "R_BROKER_WORKSTATION\020\"\022\031\n\025ACCOUNT_CODE_A"
    "GENT_A2\020#\022\031\n\025ACCOUNT_CODE_AGENT_A3\020$\022\031\n\025"
    "ACCOUNT_CODE_AGENT_A4\020%\022\031\n\025ACCOUNT_CODE_"
    "AGENT_A5\020&\022\031\n\025ACCOUNT_CODE_AGENT_A6\020\'\022\031\n"
    "\025ACCOUNT_CODE_AGENT_A7\020(\022\031\n\025ACCOUNT_CODE"
    "_AGENT_A8\020)\022\031\n\025ACCOUNT_CODE_AGENT_A9\020*\022$"
    "\n ACCOUNT_CODE_CLIENT_SEGREGATED_E\020+\022$\n "
    "ACCOUNT_CODE_CLIENT_SEGREGATED_K\020,\022$\n AC"
    "COUNT_CODE_CLIENT_SEGREGATED_R\020-\022\035\n\031ACCO"
    "UNT_CODE_SEGREGATED_T\020.\0222\n.ACCOUNT_CODE_"
    "INDIRECT_CLEARING_GROSS_ISOC_CASS\020/\0223\n/A"
    "CCOUNT_CODE_INDIRECT_CLEARING_GROSS_ISOC"
    "_TTFCA\0200\022-\n)ACCOUNT_CODE_INDIRECT_CLEARI"
    "NG_GROSS_CASS\0201\022.\n*ACCOUNT_CODE_INDIRECT"
    "_CLEARING_GROSS_TTFCA\0202\022+\n\'ACCOUNT_CODE_"
    "INDIRECT_CLEARING_NET_CASS\0203\022-\n)ACCOUNT_"
    "CODE_INDIRECT_CLEARING_NETS_TTFCA\0204\022\023\n\017A"
    "CCOUNT_CODE_RO\0205\022#\n\037ACCOUNT_CODE_LIQUIDI"
    "TY_PROVIDER\0206\022\036\n\032ACCOUNT_CODE_RELATED_PA"
    "RTY\0207\0220\n,ACCOUNT_CODE_STRUCTURED_PRODUCT"
    "_MARKET_MAKER\0208\022\035\n\031ACCOUNT_CODE_OMEGA_CL"
    "IENT\0209\022\035\n\031ACCOUNT_CODE_CERES_CLIENT\020:*Y\n"
    "\tOpenClose\022\023\n\017OPEN_CLOSE_OPEN\020\000\022\024\n\020OPEN_"
    "CLOSE_CLOSE\020\001\022!\n\024OPEN_CLOSE_UNDEFINED\020\377\377"
    "\377\377\377\377\377\377\377\001*\202\003\n\031CustOrderHandlingInstType\022&"
    "\n\"CUST_ORDER_HANDLING_INST_TYPE_NONE\020\000\022&"
    "\n\"CUST_ORDER_HANDLING_INST_TYPE_DESK\020\001\022,"
    "\n(CUST_ORDER_HANDLING_INST_TYPE_ELECTRON"
    "IC\020\002\022:\n6CUST_ORDER_HANDLING_INST_TYPE_VE"
    "NDOR_PROVIDED_PLATFORM\020\003\022A\n=CUST_ORDER_H"
    "ANDLING_INST_TYPE_SPONSORED_ACCESS_VIA_A"
    "PI_OR_FIX\020\004\022\?\n;CUST_ORDER_HANDLING_INST_"
    "TYPE_PREMIUM_ALGO_TRADING_PROVIDER\020\005\022\'\n#"
    "CUST_ORDER_HANDLING_INST_TYPE_OTHER\020\006*\241\001"
    "\n\025AvgPriceIndicatorType\022!\n\035AVG_PRICE_IND"
    "ICATOR_TYPE_NONE\020\000\0220\n,AVG_PRICE_INDICATO"
    "R_TYPE_AVERAGE_PRICE_GROUP\020\001\0223\n/AVG_PRIC"
    "E_INDICATOR_TYPE_NOTIONAL_VALUE_AVERAGE\020"
    "\002*\177\n\026ClearingTradePriceType\022-\n)CLEARING_"
    "TRADE_PRICE_TYPE_EXECUTION_PRICE\020\000\0226\n2CL"
    "EARING_TRADE_PRICE_TYPE_ALTERNATE_CLEARI"
    "NG_PRICE\020\001*\277\001\n\nBillingFee\022\031\n\025BILLING_FEE"
    "_UNDEFINED\020\000\022\030\n\024BILLING_FEE_CUSTOMER\020\001\022\035"
    "\n\031BILLING_FEE_EQUITY_MEMBER\020\002\022\032\n\026BILLING"
    "_FEE_FIRM_106HJ\020\003\022$\n BILLING_FEE_LESSEE_"
    "106F_EMPLOYEE\020\004\022\033\n\027BILLING_FEE_CBOE_MEMB"
    "ER\020\005*\204\002\n\tOrderLink\022\023\n\017ORDER_LINK_NONE\020\000\022"
    "\022\n\016ORDER_LINK_OCO\020\001\022\027\n\023ORDER_LINK_AUTO_O"
    "CO\020\002\022\024\n\020ORDER_LINK_SPARK\020\003\022\037\n\033ORDER_LINK"
    "_CLIENT_SYNTHETIC\020\004\022\025\n\021ORDER_LINK_SPARK2"
    "\020\005\022\025\n\021ORDER_LINK_CHAIN2\020\006\022\031\n\025ORDER_LINK_"
    "AUTO_OCO_P\020\007\022\031\n\025ORDER_LINK_AUTO_OCO_M\020\010\022"
    "\032\n\026ORDER_LINK_AUTO_OCO_MP\020\t*\247\001\n\017PrimaryU"
    "serType\022\035\n\031PRIMARY_USER_TYPE_PRIMARY\020\000\022\037"
    "\n\033PRIMARY_USER_TYPE_SECONDARY\020\001\022\'\n#PRIMA"
    "RY_USER_TYPE_SECONDARY_APPLIED\020\002\022+\n\'PRIM"
    "ARY_USER_TYPE_SECONDARY_NOT_APPLIED\020\003*;\n"
    "\nMasterType\022\026\n\022MASTER_TYPE_MASTER\020\000\022\025\n\021M"
    "ASTER_TYPE_CHILD\020\001*\316\013\n\013OrderSource\022\030\n\024OR"
    "DER_SOURCE_UNKNOWN\020\000\022\024\n\020ORDER_SOURCE_API"
    "\020\001\022\033\n\027ORDER_SOURCE_WEB_TRADER\020\002\022\027\n\023ORDER"
    "_SOURCE_MOBILE\020\003\022\034\n\030ORDER_SOURCE_DATA_IM"
    "PORT\020\004\022 \n\034ORDER_SOURCE_ACCOUNT_HANDLER\020\005"
    "\022\036\n\032ORDER_SOURCE_STATIC_LADDER\020\024\022!\n\035ORDE"
    "R_SOURCE_SCROLLING_LADDER\020\025\022 \n\034ORDER_SOU"
    "RCE_CENTERED_LADDER\020\026\022\'\n#ORDER_SOURCE_AU"
    "TO_RECENTERED_LADDER\020\027\022\026\n\022ORDER_SOURCE_D"
    "EPTH\020\030\022\033\n\027ORDER_SOURCE_QUOTEBOARD\020\031\022\034\n\030O"
    "RDER_SOURCE_OPTIONBOARD\020\032\022 \n\034ORDER_SOURC"
    "E_ADV_OPTIONBOARD\020\033\022\032\n\026ORDER_SOURCE_ORDE"
    "RBOOK\020\034\022\036\n\032ORDER_SOURCE_SPREAD_MATRIX\020\035\022"
    "\030\n\024ORDER_SOURCE_FIX_API\020\036\022 \n\034ORDER_SOURC"
    "E_CLIENT_SPREADER\020\037\022\"\n\036ORDER_SOURCE_ANTS"
    "_OPTION_SHEET\020 \022,\n(ORDER_SOURCE_ANTS_OPT"
    "ION_STRATEGY_SOLVER\020!\022\031\n\025ORDER_SOURCE_JA"
    "VA_API\020\"\022.\n*ORDER_SOURCE_ANTS_OPTION_STR"
    "ATEGIES_WINDOW\020#\022\026\n\022ORDER_SOURCE_CHART\020$"
    "\022\024\n\020ORDER_SOURCE_STP\020%\022,\n(ORDER_SOURCE_T"
    "4_ANDROID_SCROLLING_LADDER\020&\022+\n\'ORDER_SO"
    "URCE_T4_ANDROID_CENTERED_LADDER\020\'\0222\n.ORD"
    "ER_SOURCE_T4_ANDROID_AUTO_RECENTERED_LAD"
    "DER\020(\022!\n\035ORDER_SOURCE_T4_ANDROID_DEPTH\020)"
    "\022&\n\"ORDER_SOURCE_T4_ANDROID_QUOTEBOARD\020*"
    "\022%\n!ORDER_SOURCE_T4_ANDROID_POSITIONS\020+\022"
    "\"\n\036ORDER_SOURCE_T4_ANDROID_ORDERS\020,\022!\n\035O"
    "RDER_SOURCE_T4_ANDROID_CHART\020-\022\023\n\017ORDER_"
    "SOURCE_MQ\020.\022\030\n\024ORDER_SOURCE_IOS_API\020/\022(\n"
    "$ORDER_SOURCE_T4_IOS_SCROLLING_LADDER\0200\022"
    "\'\n#ORDER_SOURCE_T4_IOS_CENTERED_LADDER\0201"
    "\022.\n*ORDER_SOURCE_T4_IOS_AUTO_RECENTERED_"
    "LADDER\0202\022\035\n\031ORDER_SOURCE_T4_IOS_DEPTH\0203\022"
    "\"\n\036ORDER_SOURCE_T4_IOS_QUOTEBOARD\0204\022!\n\035O"
    "RDER_SOURCE_T4_IOS_POSITIONS\0205\022\036\n\032ORDER_"
    "SOURCE_T4_IOS_ORDERS\0206\022\035\n\031ORDER_SOURCE_T"
    "4_IOS_CHART\0207\022\031\n\025ORDER_SOURCE_KEYBOARD\0208"
    "\022\031\n\025ORDER_SOURCE_HTTP_API\0209*\300\004\n\021OrderSou"
    "rceMethod\022\037\n\033ORDER_SOURCE_METHOD_UNKNOWN"
    "\020\000\022\035\n\031ORDER_SOURCE_METHOD_CLICK\020\001\022\036\n\032ORD"
    "ER_SOURCE_METHOD_PROMPT\020\002\022%\n!ORDER_SOURC"
    "E_METHOD_PRICE_CONFIRM\020\003\022$\n ORDER_SOURCE"
    "_METHOD_ORDER_TICKET\020\004\022!\n\035ORDER_SOURCE_M"
    "ETHOD_KEY_ENTRY\020\005\022&\n\"ORDER_SOURCE_METHOD"
    "_ORDER_LOAD_BAR\020\006\022\'\n#ORDER_SOURCE_METHOD"
    "_CONTRACT_TICKET\020\007\022+\n\'ORDER_SOURCE_METHO"
    "D_QUEUED_ORDER_TICKET\020\010\022&\n\"ORDER_SOURCE_"
    "METHOD_CLEARING_HOUSE\020\t\022\"\n\036ORDER_SOURCE_"
    "METHOD_ELECTRONIC\020\n\022)\n%ORDER_SOURCE_METH"
    "OD_OFF_FACILITY_SWAP\020\013\022\033\n\027ORDER_SOURCE_M"
    "ETHOD_PIT\020\014\022)\n%ORDER_SOURCE_METHOD_REGIS"
    "TERED_MARKET\020\r\022\036\n\032ORDER_SOURCE_METHOD_EX"
    "_PIT\020\016*_\n\024AccountSubscribeType\022\037\n\033ACCOUN"
    "T_SUBSCRIBE_TYPE_NONE\020\000\022&\n\"ACCOUNT_SUBSC"
    "RIBE_TYPE_ALL_UPDATES\020\002*q\n\tUDSStatus\022\026\n\022"
    "UDS_STATUS_UNKNOWN\020\000\022\026\n\022UDS_STATUS_Succe"
    "ss\020\001\022\025\n\021UDS_STATUS_FAILED\020\002\022\035\n\031UDS_STATU"
    "S_ALREADY_EXISTS\020\003b\006proto3"
};
static ::absl::once_flag descriptor_table_enums_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_enums_2eproto = {
    false,
    false,
    17306,
    descriptor_table_protodef_enums_2eproto,
    "enums.proto",
    &descriptor_table_enums_2eproto_once,
    nullptr,
    0,
    0,
    schemas,
    file_default_instances,
    TableStruct_enums_2eproto::offsets,
    file_level_enum_descriptors_enums_2eproto,
    file_level_service_descriptors_enums_2eproto,
};
namespace t4proto {
namespace v1 {
namespace common {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL LoginResult_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LoginResult_internal_data_[] = {
    1114111u, 32u, 2046u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PriceFormat_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PriceFormat_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t AccountMode_internal_data_[] = {
    655359u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MarketMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t MarketMode_internal_data_[] = {
    983040u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DepthBuffer_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t DepthBuffer_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DepthLevels_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t DepthLevels_internal_data_[] = {
    131072u, 65568u, 256u, 255u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BidOffer_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t BidOffer_internal_data_[] = {
    262143u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MarketFlags2_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t MarketFlags2_internal_data_[] = {
    196608u, 393280u, 536879138u, 536870912u, 1024u, 256u, 4096u, 128u, 512u, 2048u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ContractType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t ContractType_internal_data_[] = {
    851967u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MarketDataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t MarketDataType_internal_data_[] = {
    327679u, 32u, 34u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StrategyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t StrategyType_internal_data_[] = {
    1310719u, 96u, 4294967294u, 4294967295u, 3u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ContractRiskStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t ContractRiskStatus_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[12];
}
PROTOBUF_CONSTINIT const uint32_t AccountStatus_internal_data_[] = {
    655360u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountEnabled_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[13];
}
PROTOBUF_CONSTINIT const uint32_t AccountEnabled_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountMarginType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[14];
}
PROTOBUF_CONSTINIT const uint32_t AccountMarginType_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderChange_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[15];
}
PROTOBUF_CONSTINIT const uint32_t OrderChange_internal_data_[] = {
    2359296u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[16];
}
PROTOBUF_CONSTINIT const uint32_t OrderStatus_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ResponsePending_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[17];
}
PROTOBUF_CONSTINIT const uint32_t ResponsePending_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ActivationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[18];
}
PROTOBUF_CONSTINIT const uint32_t ActivationType_internal_data_[] = {
    1376255u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PriceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[19];
}
PROTOBUF_CONSTINIT const uint32_t PriceType_internal_data_[] = {
    1376255u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL TimeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[20];
}
PROTOBUF_CONSTINIT const uint32_t TimeType_internal_data_[] = {
    524287u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ApplicationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[21];
}
PROTOBUF_CONSTINIT const uint32_t ApplicationType_internal_data_[] = {
    589824u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BuySell_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[22];
}
PROTOBUF_CONSTINIT const uint32_t BuySell_internal_data_[] = {
    262143u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CTI_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[23];
}
PROTOBUF_CONSTINIT const uint32_t CTI_internal_data_[] = {
    458751u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL Origin_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[24];
}
PROTOBUF_CONSTINIT const uint32_t Origin_internal_data_[] = {
    851968u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[25];
}
PROTOBUF_CONSTINIT const uint32_t AccountCode_internal_data_[] = {
    3866624u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OpenClose_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[26];
}
PROTOBUF_CONSTINIT const uint32_t OpenClose_internal_data_[] = {
    262143u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL CustOrderHandlingInstType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[27];
}
PROTOBUF_CONSTINIT const uint32_t CustOrderHandlingInstType_internal_data_[] = {
    458752u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AvgPriceIndicatorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[28];
}
PROTOBUF_CONSTINIT const uint32_t AvgPriceIndicatorType_internal_data_[] = {
    196608u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ClearingTradePriceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[29];
}
PROTOBUF_CONSTINIT const uint32_t ClearingTradePriceType_internal_data_[] = {
    131072u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BillingFee_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[30];
}
PROTOBUF_CONSTINIT const uint32_t BillingFee_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderLink_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[31];
}
PROTOBUF_CONSTINIT const uint32_t OrderLink_internal_data_[] = {
    655360u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PrimaryUserType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[32];
}
PROTOBUF_CONSTINIT const uint32_t PrimaryUserType_internal_data_[] = {
    262144u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MasterType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[33];
}
PROTOBUF_CONSTINIT const uint32_t MasterType_internal_data_[] = {
    131072u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[34];
}
PROTOBUF_CONSTINIT const uint32_t OrderSource_internal_data_[] = {
    393216u, 64u, 4294950912u, 1048575u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderSourceMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[35];
}
PROTOBUF_CONSTINIT const uint32_t OrderSourceMethod_internal_data_[] = {
    983040u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AccountSubscribeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[36];
}
PROTOBUF_CONSTINIT const uint32_t AccountSubscribeType_internal_data_[] = {
    65536u, 32u, 2u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL UDSStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_enums_2eproto);
  return file_level_enum_descriptors_enums_2eproto[37];
}
PROTOBUF_CONSTINIT const uint32_t UDSStatus_internal_data_[] = {
    262144u, 0u, };
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace v1
}  // namespace t4proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_enums_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
