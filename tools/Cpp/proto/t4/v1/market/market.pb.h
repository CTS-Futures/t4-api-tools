// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: t4/v1/market/market.proto
// Protobuf C++ Version: 6.31.1

#ifndef t4_2fv1_2fmarket_2fmarket_2eproto_2epb_2eh
#define t4_2fv1_2fmarket_2fmarket_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "t4/v1/common/enums.pb.h"
#include "t4/v1/common/price.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_t4_2fv1_2fmarket_2fmarket_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_t4_2fv1_2fmarket_2fmarket_2eproto;
}  // extern "C"
namespace t4proto {
namespace v1 {
namespace market {
enum MarketByOrderUpdate_UpdateType : int;
extern const uint32_t MarketByOrderUpdate_UpdateType_internal_data_[];
class MarketByOrderSnapshot;
struct MarketByOrderSnapshotDefaultTypeInternal;
extern MarketByOrderSnapshotDefaultTypeInternal _MarketByOrderSnapshot_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSnapshot_class_data_;
class MarketByOrderSnapshot_Order;
struct MarketByOrderSnapshot_OrderDefaultTypeInternal;
extern MarketByOrderSnapshot_OrderDefaultTypeInternal _MarketByOrderSnapshot_Order_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSnapshot_Order_class_data_;
class MarketByOrderSubscribe;
struct MarketByOrderSubscribeDefaultTypeInternal;
extern MarketByOrderSubscribeDefaultTypeInternal _MarketByOrderSubscribe_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSubscribe_class_data_;
class MarketByOrderSubscribeReject;
struct MarketByOrderSubscribeRejectDefaultTypeInternal;
extern MarketByOrderSubscribeRejectDefaultTypeInternal _MarketByOrderSubscribeReject_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSubscribeReject_class_data_;
class MarketByOrderUpdate;
struct MarketByOrderUpdateDefaultTypeInternal;
extern MarketByOrderUpdateDefaultTypeInternal _MarketByOrderUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderUpdate_class_data_;
class MarketByOrderUpdate_Update;
struct MarketByOrderUpdate_UpdateDefaultTypeInternal;
extern MarketByOrderUpdate_UpdateDefaultTypeInternal _MarketByOrderUpdate_Update_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketByOrderUpdate_Update_class_data_;
class MarketDepth;
struct MarketDepthDefaultTypeInternal;
extern MarketDepthDefaultTypeInternal _MarketDepth_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepth_class_data_;
class MarketDepthSubscribe;
struct MarketDepthSubscribeDefaultTypeInternal;
extern MarketDepthSubscribeDefaultTypeInternal _MarketDepthSubscribe_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepthSubscribe_class_data_;
class MarketDepthSubscribeReject;
struct MarketDepthSubscribeRejectDefaultTypeInternal;
extern MarketDepthSubscribeRejectDefaultTypeInternal _MarketDepthSubscribeReject_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepthSubscribeReject_class_data_;
class MarketDepthTrade;
struct MarketDepthTradeDefaultTypeInternal;
extern MarketDepthTradeDefaultTypeInternal _MarketDepthTrade_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepthTrade_class_data_;
class MarketDepth_DepthLine;
struct MarketDepth_DepthLineDefaultTypeInternal;
extern MarketDepth_DepthLineDefaultTypeInternal _MarketDepth_DepthLine_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepth_DepthLine_class_data_;
class MarketDepth_TradeData;
struct MarketDepth_TradeDataDefaultTypeInternal;
extern MarketDepth_TradeDataDefaultTypeInternal _MarketDepth_TradeData_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDepth_TradeData_class_data_;
class MarketDetails;
struct MarketDetailsDefaultTypeInternal;
extern MarketDetailsDefaultTypeInternal _MarketDetails_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDetails_class_data_;
class MarketDetails_LegItem;
struct MarketDetails_LegItemDefaultTypeInternal;
extern MarketDetails_LegItemDefaultTypeInternal _MarketDetails_LegItem_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketDetails_LegItem_class_data_;
class MarketHighLow;
struct MarketHighLowDefaultTypeInternal;
extern MarketHighLowDefaultTypeInternal _MarketHighLow_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketHighLow_class_data_;
class MarketPriceLimits;
struct MarketPriceLimitsDefaultTypeInternal;
extern MarketPriceLimitsDefaultTypeInternal _MarketPriceLimits_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketPriceLimits_class_data_;
class MarketSettlement;
struct MarketSettlementDefaultTypeInternal;
extern MarketSettlementDefaultTypeInternal _MarketSettlement_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketSettlement_class_data_;
class MarketSnapshot;
struct MarketSnapshotDefaultTypeInternal;
extern MarketSnapshotDefaultTypeInternal _MarketSnapshot_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketSnapshot_class_data_;
class MarketSnapshotMessage;
struct MarketSnapshotMessageDefaultTypeInternal;
extern MarketSnapshotMessageDefaultTypeInternal _MarketSnapshotMessage_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull MarketSnapshotMessage_class_data_;
}  // namespace market
}  // namespace v1
}  // namespace t4proto
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::t4proto::v1::market::MarketByOrderUpdate_UpdateType_internal_data_>
    internal::EnumTraitsImpl::value<::t4proto::v1::market::MarketByOrderUpdate_UpdateType>;
}  // namespace protobuf
}  // namespace google

namespace t4proto {
namespace v1 {
namespace market {
enum MarketByOrderUpdate_UpdateType : int {
  MarketByOrderUpdate_UpdateType_UPDATE_TYPE_ADD_OR_UPDATE = 0,
  MarketByOrderUpdate_UpdateType_UPDATE_TYPE_DELETE = 1,
  MarketByOrderUpdate_UpdateType_UPDATE_TYPE_CLEAR = 2,
  MarketByOrderUpdate_UpdateType_MarketByOrderUpdate_UpdateType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  MarketByOrderUpdate_UpdateType_MarketByOrderUpdate_UpdateType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t MarketByOrderUpdate_UpdateType_internal_data_[];
inline constexpr MarketByOrderUpdate_UpdateType MarketByOrderUpdate_UpdateType_UpdateType_MIN =
    static_cast<MarketByOrderUpdate_UpdateType>(0);
inline constexpr MarketByOrderUpdate_UpdateType MarketByOrderUpdate_UpdateType_UpdateType_MAX =
    static_cast<MarketByOrderUpdate_UpdateType>(2);
inline bool MarketByOrderUpdate_UpdateType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int MarketByOrderUpdate_UpdateType_UpdateType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MarketByOrderUpdate_UpdateType_descriptor();
template <typename T>
const ::std::string& MarketByOrderUpdate_UpdateType_Name(T value) {
  static_assert(::std::is_same<T, MarketByOrderUpdate_UpdateType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to UpdateType_Name().");
  return MarketByOrderUpdate_UpdateType_Name(static_cast<MarketByOrderUpdate_UpdateType>(value));
}
template <>
inline const ::std::string& MarketByOrderUpdate_UpdateType_Name(MarketByOrderUpdate_UpdateType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MarketByOrderUpdate_UpdateType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool MarketByOrderUpdate_UpdateType_Parse(
    ::absl::string_view name, MarketByOrderUpdate_UpdateType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketByOrderUpdate_UpdateType>(MarketByOrderUpdate_UpdateType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class MarketDepthSubscribe final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepthSubscribe) */ {
 public:
  inline MarketDepthSubscribe() : MarketDepthSubscribe(nullptr) {}
  ~MarketDepthSubscribe() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepthSubscribe* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepthSubscribe));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepthSubscribe(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepthSubscribe(const MarketDepthSubscribe& from) : MarketDepthSubscribe(nullptr, from) {}
  inline MarketDepthSubscribe(MarketDepthSubscribe&& from) noexcept
      : MarketDepthSubscribe(nullptr, ::std::move(from)) {}
  inline MarketDepthSubscribe& operator=(const MarketDepthSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepthSubscribe& operator=(MarketDepthSubscribe&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepthSubscribe& default_instance() {
    return *reinterpret_cast<const MarketDepthSubscribe*>(
        &_MarketDepthSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MarketDepthSubscribe& a, MarketDepthSubscribe& b) { a.Swap(&b); }
  inline void Swap(MarketDepthSubscribe* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepthSubscribe* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepthSubscribe* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepthSubscribe>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepthSubscribe& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepthSubscribe& from) { MarketDepthSubscribe::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepthSubscribe* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepthSubscribe"; }

 protected:
  explicit MarketDepthSubscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepthSubscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepthSubscribe& from);
  MarketDepthSubscribe(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepthSubscribe&& from) noexcept
      : MarketDepthSubscribe(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExchangeIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kMarketIdFieldNumber = 3,
    kBufferFieldNumber = 4,
    kDepthLevelsFieldNumber = 5,
  };
  // string exchange_id = 1;
  void clear_exchange_id() ;
  const ::std::string& exchange_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange_id();
  void set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange_id();

  public:
  // string contract_id = 2;
  void clear_contract_id() ;
  const ::std::string& contract_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_contract_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_contract_id();
  void set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_contract_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_contract_id();

  public:
  // string market_id = 3;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .t4proto.v1.common.DepthBuffer buffer = 4;
  void clear_buffer() ;
  ::t4proto::v1::common::DepthBuffer buffer() const;
  void set_buffer(::t4proto::v1::common::DepthBuffer value);

  private:
  ::t4proto::v1::common::DepthBuffer _internal_buffer() const;
  void _internal_set_buffer(::t4proto::v1::common::DepthBuffer value);

  public:
  // .t4proto.v1.common.DepthLevels depth_levels = 5;
  void clear_depth_levels() ;
  ::t4proto::v1::common::DepthLevels depth_levels() const;
  void set_depth_levels(::t4proto::v1::common::DepthLevels value);

  private:
  ::t4proto::v1::common::DepthLevels _internal_depth_levels() const;
  void _internal_set_depth_levels(::t4proto::v1::common::DepthLevels value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepthSubscribe)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepthSubscribe& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr exchange_id_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    int buffer_;
    int depth_levels_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepthSubscribe_class_data_;
// -------------------------------------------------------------------

class MarketByOrderSubscribe final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderSubscribe) */ {
 public:
  inline MarketByOrderSubscribe() : MarketByOrderSubscribe(nullptr) {}
  ~MarketByOrderSubscribe() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderSubscribe* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderSubscribe));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderSubscribe(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderSubscribe(const MarketByOrderSubscribe& from) : MarketByOrderSubscribe(nullptr, from) {}
  inline MarketByOrderSubscribe(MarketByOrderSubscribe&& from) noexcept
      : MarketByOrderSubscribe(nullptr, ::std::move(from)) {}
  inline MarketByOrderSubscribe& operator=(const MarketByOrderSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderSubscribe& operator=(MarketByOrderSubscribe&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderSubscribe& default_instance() {
    return *reinterpret_cast<const MarketByOrderSubscribe*>(
        &_MarketByOrderSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MarketByOrderSubscribe& a, MarketByOrderSubscribe& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderSubscribe* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderSubscribe* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderSubscribe* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderSubscribe>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderSubscribe& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderSubscribe& from) { MarketByOrderSubscribe::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderSubscribe* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderSubscribe"; }

 protected:
  explicit MarketByOrderSubscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderSubscribe(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderSubscribe& from);
  MarketByOrderSubscribe(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderSubscribe&& from) noexcept
      : MarketByOrderSubscribe(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExchangeIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kMarketIdFieldNumber = 3,
    kSubscribeFieldNumber = 4,
  };
  // string exchange_id = 1;
  void clear_exchange_id() ;
  const ::std::string& exchange_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange_id();
  void set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange_id();

  public:
  // string contract_id = 2;
  void clear_contract_id() ;
  const ::std::string& contract_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_contract_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_contract_id();
  void set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_contract_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_contract_id();

  public:
  // string market_id = 3;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // bool subscribe = 4;
  void clear_subscribe() ;
  bool subscribe() const;
  void set_subscribe(bool value);

  private:
  bool _internal_subscribe() const;
  void _internal_set_subscribe(bool value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderSubscribe)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 80,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderSubscribe& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr exchange_id_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    bool subscribe_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSubscribe_class_data_;
// -------------------------------------------------------------------

class MarketSettlement final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketSettlement) */ {
 public:
  inline MarketSettlement() : MarketSettlement(nullptr) {}
  ~MarketSettlement() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketSettlement* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketSettlement));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketSettlement(::google::protobuf::internal::ConstantInitialized);

  inline MarketSettlement(const MarketSettlement& from) : MarketSettlement(nullptr, from) {}
  inline MarketSettlement(MarketSettlement&& from) noexcept
      : MarketSettlement(nullptr, ::std::move(from)) {}
  inline MarketSettlement& operator=(const MarketSettlement& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketSettlement& operator=(MarketSettlement&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketSettlement& default_instance() {
    return *reinterpret_cast<const MarketSettlement*>(
        &_MarketSettlement_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MarketSettlement& a, MarketSettlement& b) { a.Swap(&b); }
  inline void Swap(MarketSettlement* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketSettlement* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketSettlement* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketSettlement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketSettlement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketSettlement& from) { MarketSettlement::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketSettlement* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketSettlement"; }

 protected:
  explicit MarketSettlement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketSettlement(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketSettlement& from);
  MarketSettlement(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketSettlement&& from) noexcept
      : MarketSettlement(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExchangeIdFieldNumber = 1,
    kMarketIdFieldNumber = 2,
    kSettlementHeldPriceFieldNumber = 7,
    kSettlementPriceFieldNumber = 4,
    kSettlementTimeFieldNumber = 5,
    kSettlementTradeDateFieldNumber = 6,
    kSettlementHeldTimeFieldNumber = 8,
    kSettlementHeldTradeDateFieldNumber = 9,
    kImpliedPriceFieldNumber = 10,
    kImpliedHeldPriceFieldNumber = 11,
    kImpliedTimeFieldNumber = 12,
    kOpenInterestTimeFieldNumber = 14,
    kOpenInterestTradeDateFieldNumber = 15,
    kClearedVolumeTimeFieldNumber = 17,
    kClearedVolumeTradeDateFieldNumber = 18,
    kVwapPriceFieldNumber = 19,
    kVwapTimeFieldNumber = 20,
    kVwapTradeDateFieldNumber = 21,
    kDelayedFieldNumber = 3,
    kOpenInterestFieldNumber = 13,
    kClearedVolumeFieldNumber = 16,
  };
  // string exchange_id = 1;
  void clear_exchange_id() ;
  const ::std::string& exchange_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange_id();
  void set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange_id();

  public:
  // string market_id = 2;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // string settlement_held_price = 7;
  void clear_settlement_held_price() ;
  const ::std::string& settlement_held_price() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_settlement_held_price(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_settlement_held_price();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_settlement_held_price();
  void set_allocated_settlement_held_price(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_settlement_held_price() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_settlement_held_price(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_settlement_held_price();

  public:
  // .t4proto.v1.common.Price settlement_price = 4;
  bool has_settlement_price() const;
  void clear_settlement_price() ;
  const ::t4proto::v1::common::Price& settlement_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_settlement_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_settlement_price();
  void set_allocated_settlement_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_settlement_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_settlement_price();

  private:
  const ::t4proto::v1::common::Price& _internal_settlement_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_settlement_price();

  public:
  // .google.protobuf.Timestamp settlement_time = 5;
  bool has_settlement_time() const;
  void clear_settlement_time() ;
  const ::google::protobuf::Timestamp& settlement_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_settlement_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_settlement_time();
  void set_allocated_settlement_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_settlement_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_settlement_time();

  private:
  const ::google::protobuf::Timestamp& _internal_settlement_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_settlement_time();

  public:
  // .google.protobuf.Timestamp settlement_trade_date = 6;
  bool has_settlement_trade_date() const;
  void clear_settlement_trade_date() ;
  const ::google::protobuf::Timestamp& settlement_trade_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_settlement_trade_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_settlement_trade_date();
  void set_allocated_settlement_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_settlement_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_settlement_trade_date();

  private:
  const ::google::protobuf::Timestamp& _internal_settlement_trade_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_settlement_trade_date();

  public:
  // .google.protobuf.Timestamp settlement_held_time = 8;
  bool has_settlement_held_time() const;
  void clear_settlement_held_time() ;
  const ::google::protobuf::Timestamp& settlement_held_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_settlement_held_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_settlement_held_time();
  void set_allocated_settlement_held_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_settlement_held_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_settlement_held_time();

  private:
  const ::google::protobuf::Timestamp& _internal_settlement_held_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_settlement_held_time();

  public:
  // .google.protobuf.Timestamp settlement_held_trade_date = 9;
  bool has_settlement_held_trade_date() const;
  void clear_settlement_held_trade_date() ;
  const ::google::protobuf::Timestamp& settlement_held_trade_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_settlement_held_trade_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_settlement_held_trade_date();
  void set_allocated_settlement_held_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_settlement_held_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_settlement_held_trade_date();

  private:
  const ::google::protobuf::Timestamp& _internal_settlement_held_trade_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_settlement_held_trade_date();

  public:
  // .t4proto.v1.common.Price implied_price = 10;
  bool has_implied_price() const;
  void clear_implied_price() ;
  const ::t4proto::v1::common::Price& implied_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_implied_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_implied_price();
  void set_allocated_implied_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_implied_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_implied_price();

  private:
  const ::t4proto::v1::common::Price& _internal_implied_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_implied_price();

  public:
  // .t4proto.v1.common.Price implied_held_price = 11;
  bool has_implied_held_price() const;
  void clear_implied_held_price() ;
  const ::t4proto::v1::common::Price& implied_held_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_implied_held_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_implied_held_price();
  void set_allocated_implied_held_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_implied_held_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_implied_held_price();

  private:
  const ::t4proto::v1::common::Price& _internal_implied_held_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_implied_held_price();

  public:
  // .google.protobuf.Timestamp implied_time = 12;
  bool has_implied_time() const;
  void clear_implied_time() ;
  const ::google::protobuf::Timestamp& implied_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_implied_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_implied_time();
  void set_allocated_implied_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_implied_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_implied_time();

  private:
  const ::google::protobuf::Timestamp& _internal_implied_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_implied_time();

  public:
  // .google.protobuf.Timestamp open_interest_time = 14;
  bool has_open_interest_time() const;
  void clear_open_interest_time() ;
  const ::google::protobuf::Timestamp& open_interest_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_open_interest_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_open_interest_time();
  void set_allocated_open_interest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_open_interest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_open_interest_time();

  private:
  const ::google::protobuf::Timestamp& _internal_open_interest_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_open_interest_time();

  public:
  // .google.protobuf.Timestamp open_interest_trade_date = 15;
  bool has_open_interest_trade_date() const;
  void clear_open_interest_trade_date() ;
  const ::google::protobuf::Timestamp& open_interest_trade_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_open_interest_trade_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_open_interest_trade_date();
  void set_allocated_open_interest_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_open_interest_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_open_interest_trade_date();

  private:
  const ::google::protobuf::Timestamp& _internal_open_interest_trade_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_open_interest_trade_date();

  public:
  // .google.protobuf.Timestamp cleared_volume_time = 17;
  bool has_cleared_volume_time() const;
  void clear_cleared_volume_time() ;
  const ::google::protobuf::Timestamp& cleared_volume_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_cleared_volume_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_cleared_volume_time();
  void set_allocated_cleared_volume_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cleared_volume_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_cleared_volume_time();

  private:
  const ::google::protobuf::Timestamp& _internal_cleared_volume_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_cleared_volume_time();

  public:
  // .google.protobuf.Timestamp cleared_volume_trade_date = 18;
  bool has_cleared_volume_trade_date() const;
  void clear_cleared_volume_trade_date() ;
  const ::google::protobuf::Timestamp& cleared_volume_trade_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_cleared_volume_trade_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_cleared_volume_trade_date();
  void set_allocated_cleared_volume_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cleared_volume_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_cleared_volume_trade_date();

  private:
  const ::google::protobuf::Timestamp& _internal_cleared_volume_trade_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_cleared_volume_trade_date();

  public:
  // .t4proto.v1.common.Price vwap_price = 19;
  bool has_vwap_price() const;
  void clear_vwap_price() ;
  const ::t4proto::v1::common::Price& vwap_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_vwap_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_vwap_price();
  void set_allocated_vwap_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vwap_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_vwap_price();

  private:
  const ::t4proto::v1::common::Price& _internal_vwap_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_vwap_price();

  public:
  // .google.protobuf.Timestamp vwap_time = 20;
  bool has_vwap_time() const;
  void clear_vwap_time() ;
  const ::google::protobuf::Timestamp& vwap_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_vwap_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_vwap_time();
  void set_allocated_vwap_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vwap_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_vwap_time();

  private:
  const ::google::protobuf::Timestamp& _internal_vwap_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_vwap_time();

  public:
  // .google.protobuf.Timestamp vwap_trade_date = 21;
  bool has_vwap_trade_date() const;
  void clear_vwap_trade_date() ;
  const ::google::protobuf::Timestamp& vwap_trade_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_vwap_trade_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_vwap_trade_date();
  void set_allocated_vwap_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_vwap_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_vwap_trade_date();

  private:
  const ::google::protobuf::Timestamp& _internal_vwap_trade_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_vwap_trade_date();

  public:
  // bool delayed = 3;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // int32 open_interest = 13;
  void clear_open_interest() ;
  ::int32_t open_interest() const;
  void set_open_interest(::int32_t value);

  private:
  ::int32_t _internal_open_interest() const;
  void _internal_set_open_interest(::int32_t value);

  public:
  // int32 cleared_volume = 16;
  void clear_cleared_volume() ;
  ::int32_t cleared_volume() const;
  void set_cleared_volume(::int32_t value);

  private:
  ::int32_t _internal_cleared_volume() const;
  void _internal_set_cleared_volume(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketSettlement)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 21,
                                   15, 100,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketSettlement& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr exchange_id_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::internal::ArenaStringPtr settlement_held_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE settlement_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE settlement_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE settlement_trade_date_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE settlement_held_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE settlement_held_trade_date_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE implied_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE implied_held_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE implied_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE open_interest_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE open_interest_trade_date_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE cleared_volume_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE cleared_volume_trade_date_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE vwap_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE vwap_time_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE vwap_trade_date_;
    bool delayed_;
    ::int32_t open_interest_;
    ::int32_t cleared_volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketSettlement_class_data_;
// -------------------------------------------------------------------

class MarketPriceLimits final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketPriceLimits) */ {
 public:
  inline MarketPriceLimits() : MarketPriceLimits(nullptr) {}
  ~MarketPriceLimits() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketPriceLimits* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketPriceLimits));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketPriceLimits(::google::protobuf::internal::ConstantInitialized);

  inline MarketPriceLimits(const MarketPriceLimits& from) : MarketPriceLimits(nullptr, from) {}
  inline MarketPriceLimits(MarketPriceLimits&& from) noexcept
      : MarketPriceLimits(nullptr, ::std::move(from)) {}
  inline MarketPriceLimits& operator=(const MarketPriceLimits& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketPriceLimits& operator=(MarketPriceLimits&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketPriceLimits& default_instance() {
    return *reinterpret_cast<const MarketPriceLimits*>(
        &_MarketPriceLimits_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MarketPriceLimits& a, MarketPriceLimits& b) { a.Swap(&b); }
  inline void Swap(MarketPriceLimits* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketPriceLimits* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketPriceLimits* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketPriceLimits>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketPriceLimits& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketPriceLimits& from) { MarketPriceLimits::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketPriceLimits* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketPriceLimits"; }

 protected:
  explicit MarketPriceLimits(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketPriceLimits(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketPriceLimits& from);
  MarketPriceLimits(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketPriceLimits&& from) noexcept
      : MarketPriceLimits(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketIdFieldNumber = 1,
    kHighPriceFieldNumber = 2,
    kLowPriceFieldNumber = 3,
    kTimeFieldNumber = 4,
    kDelayedFieldNumber = 5,
  };
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .t4proto.v1.common.Price high_price = 2;
  bool has_high_price() const;
  void clear_high_price() ;
  const ::t4proto::v1::common::Price& high_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_high_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_high_price();
  void set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_high_price();

  private:
  const ::t4proto::v1::common::Price& _internal_high_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_high_price();

  public:
  // .t4proto.v1.common.Price low_price = 3;
  bool has_low_price() const;
  void clear_low_price() ;
  const ::t4proto::v1::common::Price& low_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_low_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_low_price();
  void set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_low_price();

  private:
  const ::t4proto::v1::common::Price& _internal_low_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_low_price();

  public:
  // .google.protobuf.Timestamp time = 4;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // bool delayed = 5;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketPriceLimits)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketPriceLimits& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE high_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE low_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    bool delayed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketPriceLimits_class_data_;
// -------------------------------------------------------------------

class MarketHighLow final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketHighLow) */ {
 public:
  inline MarketHighLow() : MarketHighLow(nullptr) {}
  ~MarketHighLow() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketHighLow* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketHighLow));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketHighLow(::google::protobuf::internal::ConstantInitialized);

  inline MarketHighLow(const MarketHighLow& from) : MarketHighLow(nullptr, from) {}
  inline MarketHighLow(MarketHighLow&& from) noexcept
      : MarketHighLow(nullptr, ::std::move(from)) {}
  inline MarketHighLow& operator=(const MarketHighLow& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketHighLow& operator=(MarketHighLow&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketHighLow& default_instance() {
    return *reinterpret_cast<const MarketHighLow*>(
        &_MarketHighLow_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MarketHighLow& a, MarketHighLow& b) { a.Swap(&b); }
  inline void Swap(MarketHighLow* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketHighLow* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketHighLow* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketHighLow>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketHighLow& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketHighLow& from) { MarketHighLow::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketHighLow* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketHighLow"; }

 protected:
  explicit MarketHighLow(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketHighLow(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketHighLow& from);
  MarketHighLow(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketHighLow&& from) noexcept
      : MarketHighLow(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketIdFieldNumber = 1,
    kOpenPriceFieldNumber = 2,
    kHighPriceFieldNumber = 3,
    kLowPriceFieldNumber = 4,
    kTimeFieldNumber = 6,
    kTradeDateFieldNumber = 5,
    kDelayedFieldNumber = 7,
  };
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .t4proto.v1.common.Price open_price = 2;
  bool has_open_price() const;
  void clear_open_price() ;
  const ::t4proto::v1::common::Price& open_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_open_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_open_price();
  void set_allocated_open_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_open_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_open_price();

  private:
  const ::t4proto::v1::common::Price& _internal_open_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_open_price();

  public:
  // .t4proto.v1.common.Price high_price = 3;
  bool has_high_price() const;
  void clear_high_price() ;
  const ::t4proto::v1::common::Price& high_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_high_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_high_price();
  void set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_high_price();

  private:
  const ::t4proto::v1::common::Price& _internal_high_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_high_price();

  public:
  // .t4proto.v1.common.Price low_price = 4;
  bool has_low_price() const;
  void clear_low_price() ;
  const ::t4proto::v1::common::Price& low_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_low_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_low_price();
  void set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_low_price();

  private:
  const ::t4proto::v1::common::Price& _internal_low_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_low_price();

  public:
  // .google.protobuf.Timestamp time = 6;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // int64 trade_date = 5;
  void clear_trade_date() ;
  ::int64_t trade_date() const;
  void set_trade_date(::int64_t value);

  private:
  ::int64_t _internal_trade_date() const;
  void _internal_set_trade_date(::int64_t value);

  public:
  // bool delayed = 7;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketHighLow)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   4, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketHighLow& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE open_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE high_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE low_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::int64_t trade_date_;
    bool delayed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketHighLow_class_data_;
// -------------------------------------------------------------------

class MarketDetails_LegItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDetails.LegItem) */ {
 public:
  inline MarketDetails_LegItem() : MarketDetails_LegItem(nullptr) {}
  ~MarketDetails_LegItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDetails_LegItem* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDetails_LegItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDetails_LegItem(::google::protobuf::internal::ConstantInitialized);

  inline MarketDetails_LegItem(const MarketDetails_LegItem& from) : MarketDetails_LegItem(nullptr, from) {}
  inline MarketDetails_LegItem(MarketDetails_LegItem&& from) noexcept
      : MarketDetails_LegItem(nullptr, ::std::move(from)) {}
  inline MarketDetails_LegItem& operator=(const MarketDetails_LegItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDetails_LegItem& operator=(MarketDetails_LegItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDetails_LegItem& default_instance() {
    return *reinterpret_cast<const MarketDetails_LegItem*>(
        &_MarketDetails_LegItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MarketDetails_LegItem& a, MarketDetails_LegItem& b) { a.Swap(&b); }
  inline void Swap(MarketDetails_LegItem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDetails_LegItem* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDetails_LegItem* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDetails_LegItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDetails_LegItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDetails_LegItem& from) { MarketDetails_LegItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDetails_LegItem* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDetails.LegItem"; }

 protected:
  explicit MarketDetails_LegItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDetails_LegItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDetails_LegItem& from);
  MarketDetails_LegItem(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDetails_LegItem&& from) noexcept
      : MarketDetails_LegItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketIdFieldNumber = 1,
    kDeltaFieldNumber = 4,
    kPriceFieldNumber = 5,
    kGroupFieldNumber = 2,
    kVolumeFieldNumber = 3,
  };
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // string delta = 4;
  void clear_delta() ;
  const ::std::string& delta() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_delta(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_delta();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_delta();
  void set_allocated_delta(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_delta() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_delta(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_delta();

  public:
  // .t4proto.v1.common.Price price = 5;
  bool has_price() const;
  void clear_price() ;
  const ::t4proto::v1::common::Price& price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_price();
  void set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_price();

  private:
  const ::t4proto::v1::common::Price& _internal_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // int32 group = 2;
  void clear_group() ;
  ::int32_t group() const;
  void set_group(::int32_t value);

  private:
  ::int32_t _internal_group() const;
  void _internal_set_group(::int32_t value);

  public:
  // int32 volume = 3;
  void clear_volume() ;
  ::int32_t volume() const;
  void set_volume(::int32_t value);

  private:
  ::int32_t _internal_volume() const;
  void _internal_set_volume(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDetails.LegItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDetails_LegItem& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::internal::ArenaStringPtr delta_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE price_;
    ::int32_t group_;
    ::int32_t volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDetails_LegItem_class_data_;
// -------------------------------------------------------------------

class MarketDepthTrade final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepthTrade) */ {
 public:
  inline MarketDepthTrade() : MarketDepthTrade(nullptr) {}
  ~MarketDepthTrade() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepthTrade* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepthTrade));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepthTrade(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepthTrade(const MarketDepthTrade& from) : MarketDepthTrade(nullptr, from) {}
  inline MarketDepthTrade(MarketDepthTrade&& from) noexcept
      : MarketDepthTrade(nullptr, ::std::move(from)) {}
  inline MarketDepthTrade& operator=(const MarketDepthTrade& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepthTrade& operator=(MarketDepthTrade&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepthTrade& default_instance() {
    return *reinterpret_cast<const MarketDepthTrade*>(
        &_MarketDepthTrade_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MarketDepthTrade& a, MarketDepthTrade& b) { a.Swap(&b); }
  inline void Swap(MarketDepthTrade* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepthTrade* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepthTrade* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepthTrade>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepthTrade& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepthTrade& from) { MarketDepthTrade::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepthTrade* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepthTrade"; }

 protected:
  explicit MarketDepthTrade(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepthTrade(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepthTrade& from);
  MarketDepthTrade(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepthTrade&& from) noexcept
      : MarketDepthTrade(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderVolumesFieldNumber = 8,
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kLastTradePriceFieldNumber = 10,
    kTotalTradedVolumeFieldNumber = 3,
    kLastTradeVolumeFieldNumber = 4,
    kAtBidOrOfferFieldNumber = 6,
    kDueToSpreadFieldNumber = 5,
    kDelayedFieldNumber = 7,
    kTotalTradeCountFieldNumber = 9,
    kModeFieldNumber = 11,
  };
  // repeated int32 order_volumes = 8;
  int order_volumes_size() const;
  private:
  int _internal_order_volumes_size() const;

  public:
  void clear_order_volumes() ;
  ::int32_t order_volumes(int index) const;
  void set_order_volumes(int index, ::int32_t value);
  void add_order_volumes(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& order_volumes() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_order_volumes();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_order_volumes() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_order_volumes();

  public:
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 2;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // .t4proto.v1.common.Price last_trade_price = 10;
  bool has_last_trade_price() const;
  void clear_last_trade_price() ;
  const ::t4proto::v1::common::Price& last_trade_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_last_trade_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_last_trade_price();
  void set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_last_trade_price();

  private:
  const ::t4proto::v1::common::Price& _internal_last_trade_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_last_trade_price();

  public:
  // int32 total_traded_volume = 3;
  void clear_total_traded_volume() ;
  ::int32_t total_traded_volume() const;
  void set_total_traded_volume(::int32_t value);

  private:
  ::int32_t _internal_total_traded_volume() const;
  void _internal_set_total_traded_volume(::int32_t value);

  public:
  // int32 last_trade_volume = 4;
  void clear_last_trade_volume() ;
  ::int32_t last_trade_volume() const;
  void set_last_trade_volume(::int32_t value);

  private:
  ::int32_t _internal_last_trade_volume() const;
  void _internal_set_last_trade_volume(::int32_t value);

  public:
  // .t4proto.v1.common.BidOffer at_bid_or_offer = 6;
  void clear_at_bid_or_offer() ;
  ::t4proto::v1::common::BidOffer at_bid_or_offer() const;
  void set_at_bid_or_offer(::t4proto::v1::common::BidOffer value);

  private:
  ::t4proto::v1::common::BidOffer _internal_at_bid_or_offer() const;
  void _internal_set_at_bid_or_offer(::t4proto::v1::common::BidOffer value);

  public:
  // bool due_to_spread = 5;
  void clear_due_to_spread() ;
  bool due_to_spread() const;
  void set_due_to_spread(bool value);

  private:
  bool _internal_due_to_spread() const;
  void _internal_set_due_to_spread(bool value);

  public:
  // bool delayed = 7;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // int32 total_trade_count = 9;
  void clear_total_trade_count() ;
  ::int32_t total_trade_count() const;
  void set_total_trade_count(::int32_t value);

  private:
  ::int32_t _internal_total_trade_count() const;
  void _internal_set_total_trade_count(::int32_t value);

  public:
  // .t4proto.v1.common.MarketMode mode = 11;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepthTrade)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   2, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepthTrade& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> order_volumes_;
    ::google::protobuf::internal::CachedSize _order_volumes_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE last_trade_price_;
    ::int32_t total_traded_volume_;
    ::int32_t last_trade_volume_;
    int at_bid_or_offer_;
    bool due_to_spread_;
    bool delayed_;
    ::int32_t total_trade_count_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepthTrade_class_data_;
// -------------------------------------------------------------------

class MarketDepthSubscribeReject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepthSubscribeReject) */ {
 public:
  inline MarketDepthSubscribeReject() : MarketDepthSubscribeReject(nullptr) {}
  ~MarketDepthSubscribeReject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepthSubscribeReject* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepthSubscribeReject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepthSubscribeReject(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepthSubscribeReject(const MarketDepthSubscribeReject& from) : MarketDepthSubscribeReject(nullptr, from) {}
  inline MarketDepthSubscribeReject(MarketDepthSubscribeReject&& from) noexcept
      : MarketDepthSubscribeReject(nullptr, ::std::move(from)) {}
  inline MarketDepthSubscribeReject& operator=(const MarketDepthSubscribeReject& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepthSubscribeReject& operator=(MarketDepthSubscribeReject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepthSubscribeReject& default_instance() {
    return *reinterpret_cast<const MarketDepthSubscribeReject*>(
        &_MarketDepthSubscribeReject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MarketDepthSubscribeReject& a, MarketDepthSubscribeReject& b) { a.Swap(&b); }
  inline void Swap(MarketDepthSubscribeReject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepthSubscribeReject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepthSubscribeReject* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepthSubscribeReject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepthSubscribeReject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepthSubscribeReject& from) { MarketDepthSubscribeReject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepthSubscribeReject* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepthSubscribeReject"; }

 protected:
  explicit MarketDepthSubscribeReject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepthSubscribeReject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepthSubscribeReject& from);
  MarketDepthSubscribeReject(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepthSubscribeReject&& from) noexcept
      : MarketDepthSubscribeReject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kModeFieldNumber = 3,
  };
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 2;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // .t4proto.v1.common.MarketMode mode = 3;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepthSubscribeReject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepthSubscribeReject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepthSubscribeReject_class_data_;
// -------------------------------------------------------------------

class MarketDepth_TradeData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepth.TradeData) */ {
 public:
  inline MarketDepth_TradeData() : MarketDepth_TradeData(nullptr) {}
  ~MarketDepth_TradeData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepth_TradeData* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepth_TradeData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepth_TradeData(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepth_TradeData(const MarketDepth_TradeData& from) : MarketDepth_TradeData(nullptr, from) {}
  inline MarketDepth_TradeData(MarketDepth_TradeData&& from) noexcept
      : MarketDepth_TradeData(nullptr, ::std::move(from)) {}
  inline MarketDepth_TradeData& operator=(const MarketDepth_TradeData& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepth_TradeData& operator=(MarketDepth_TradeData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepth_TradeData& default_instance() {
    return *reinterpret_cast<const MarketDepth_TradeData*>(
        &_MarketDepth_TradeData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MarketDepth_TradeData& a, MarketDepth_TradeData& b) { a.Swap(&b); }
  inline void Swap(MarketDepth_TradeData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepth_TradeData* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepth_TradeData* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepth_TradeData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepth_TradeData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepth_TradeData& from) { MarketDepth_TradeData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepth_TradeData* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepth.TradeData"; }

 protected:
  explicit MarketDepth_TradeData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepth_TradeData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepth_TradeData& from);
  MarketDepth_TradeData(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepth_TradeData&& from) noexcept
      : MarketDepth_TradeData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLastTradePriceFieldNumber = 3,
    kLastTradeSpdPriceFieldNumber = 6,
    kTimeFieldNumber = 11,
    kTotalTradedVolumeFieldNumber = 1,
    kTotalTradeCountFieldNumber = 2,
    kLastTradeVolumeFieldNumber = 4,
    kLastTradeTotalVolumeFieldNumber = 5,
    kLastTradeSpdVolumeFieldNumber = 7,
    kLastTradeSpdTotalVolumeFieldNumber = 8,
    kDueToSpreadFieldNumber = 9,
    kAtBidOrOfferFieldNumber = 10,
  };
  // .t4proto.v1.common.Price last_trade_price = 3;
  bool has_last_trade_price() const;
  void clear_last_trade_price() ;
  const ::t4proto::v1::common::Price& last_trade_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_last_trade_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_last_trade_price();
  void set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_last_trade_price();

  private:
  const ::t4proto::v1::common::Price& _internal_last_trade_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_last_trade_price();

  public:
  // .t4proto.v1.common.Price last_trade_spd_price = 6;
  bool has_last_trade_spd_price() const;
  void clear_last_trade_spd_price() ;
  const ::t4proto::v1::common::Price& last_trade_spd_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_last_trade_spd_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_last_trade_spd_price();
  void set_allocated_last_trade_spd_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_trade_spd_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_last_trade_spd_price();

  private:
  const ::t4proto::v1::common::Price& _internal_last_trade_spd_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_last_trade_spd_price();

  public:
  // .google.protobuf.Timestamp time = 11;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // int32 total_traded_volume = 1;
  void clear_total_traded_volume() ;
  ::int32_t total_traded_volume() const;
  void set_total_traded_volume(::int32_t value);

  private:
  ::int32_t _internal_total_traded_volume() const;
  void _internal_set_total_traded_volume(::int32_t value);

  public:
  // int32 total_trade_count = 2;
  void clear_total_trade_count() ;
  ::int32_t total_trade_count() const;
  void set_total_trade_count(::int32_t value);

  private:
  ::int32_t _internal_total_trade_count() const;
  void _internal_set_total_trade_count(::int32_t value);

  public:
  // int32 last_trade_volume = 4;
  void clear_last_trade_volume() ;
  ::int32_t last_trade_volume() const;
  void set_last_trade_volume(::int32_t value);

  private:
  ::int32_t _internal_last_trade_volume() const;
  void _internal_set_last_trade_volume(::int32_t value);

  public:
  // int32 last_trade_total_volume = 5;
  void clear_last_trade_total_volume() ;
  ::int32_t last_trade_total_volume() const;
  void set_last_trade_total_volume(::int32_t value);

  private:
  ::int32_t _internal_last_trade_total_volume() const;
  void _internal_set_last_trade_total_volume(::int32_t value);

  public:
  // int32 last_trade_spd_volume = 7;
  void clear_last_trade_spd_volume() ;
  ::int32_t last_trade_spd_volume() const;
  void set_last_trade_spd_volume(::int32_t value);

  private:
  ::int32_t _internal_last_trade_spd_volume() const;
  void _internal_set_last_trade_spd_volume(::int32_t value);

  public:
  // int32 last_trade_spd_total_volume = 8;
  void clear_last_trade_spd_total_volume() ;
  ::int32_t last_trade_spd_total_volume() const;
  void set_last_trade_spd_total_volume(::int32_t value);

  private:
  ::int32_t _internal_last_trade_spd_total_volume() const;
  void _internal_set_last_trade_spd_total_volume(::int32_t value);

  public:
  // bool due_to_spread = 9;
  void clear_due_to_spread() ;
  bool due_to_spread() const;
  void set_due_to_spread(bool value);

  private:
  bool _internal_due_to_spread() const;
  void _internal_set_due_to_spread(bool value);

  public:
  // .t4proto.v1.common.BidOffer at_bid_or_offer = 10;
  void clear_at_bid_or_offer() ;
  ::t4proto::v1::common::BidOffer at_bid_or_offer() const;
  void set_at_bid_or_offer(::t4proto::v1::common::BidOffer value);

  private:
  ::t4proto::v1::common::BidOffer _internal_at_bid_or_offer() const;
  void _internal_set_at_bid_or_offer(::t4proto::v1::common::BidOffer value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepth.TradeData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepth_TradeData& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE last_trade_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE last_trade_spd_price_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::int32_t total_traded_volume_;
    ::int32_t total_trade_count_;
    ::int32_t last_trade_volume_;
    ::int32_t last_trade_total_volume_;
    ::int32_t last_trade_spd_volume_;
    ::int32_t last_trade_spd_total_volume_;
    bool due_to_spread_;
    int at_bid_or_offer_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepth_TradeData_class_data_;
// -------------------------------------------------------------------

class MarketDepth_DepthLine final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepth.DepthLine) */ {
 public:
  inline MarketDepth_DepthLine() : MarketDepth_DepthLine(nullptr) {}
  ~MarketDepth_DepthLine() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepth_DepthLine* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepth_DepthLine));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepth_DepthLine(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepth_DepthLine(const MarketDepth_DepthLine& from) : MarketDepth_DepthLine(nullptr, from) {}
  inline MarketDepth_DepthLine(MarketDepth_DepthLine&& from) noexcept
      : MarketDepth_DepthLine(nullptr, ::std::move(from)) {}
  inline MarketDepth_DepthLine& operator=(const MarketDepth_DepthLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepth_DepthLine& operator=(MarketDepth_DepthLine&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepth_DepthLine& default_instance() {
    return *reinterpret_cast<const MarketDepth_DepthLine*>(
        &_MarketDepth_DepthLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MarketDepth_DepthLine& a, MarketDepth_DepthLine& b) { a.Swap(&b); }
  inline void Swap(MarketDepth_DepthLine* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepth_DepthLine* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepth_DepthLine* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepth_DepthLine>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepth_DepthLine& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepth_DepthLine& from) { MarketDepth_DepthLine::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepth_DepthLine* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepth.DepthLine"; }

 protected:
  explicit MarketDepth_DepthLine(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepth_DepthLine(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepth_DepthLine& from);
  MarketDepth_DepthLine(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepth_DepthLine&& from) noexcept
      : MarketDepth_DepthLine(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPriceFieldNumber = 1,
    kVolumeFieldNumber = 2,
    kNumOrdersFieldNumber = 3,
  };
  // .t4proto.v1.common.Price price = 1;
  bool has_price() const;
  void clear_price() ;
  const ::t4proto::v1::common::Price& price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_price();
  void set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_price();

  private:
  const ::t4proto::v1::common::Price& _internal_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // int32 volume = 2;
  void clear_volume() ;
  ::int32_t volume() const;
  void set_volume(::int32_t value);

  private:
  ::int32_t _internal_volume() const;
  void _internal_set_volume(::int32_t value);

  public:
  // int32 num_orders = 3;
  void clear_num_orders() ;
  ::int32_t num_orders() const;
  void set_num_orders(::int32_t value);

  private:
  ::int32_t _internal_num_orders() const;
  void _internal_set_num_orders(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepth.DepthLine)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepth_DepthLine& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE price_;
    ::int32_t volume_;
    ::int32_t num_orders_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepth_DepthLine_class_data_;
// -------------------------------------------------------------------

class MarketByOrderUpdate_Update final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderUpdate.Update) */ {
 public:
  inline MarketByOrderUpdate_Update() : MarketByOrderUpdate_Update(nullptr) {}
  ~MarketByOrderUpdate_Update() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderUpdate_Update* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderUpdate_Update));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderUpdate_Update(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderUpdate_Update(const MarketByOrderUpdate_Update& from) : MarketByOrderUpdate_Update(nullptr, from) {}
  inline MarketByOrderUpdate_Update(MarketByOrderUpdate_Update&& from) noexcept
      : MarketByOrderUpdate_Update(nullptr, ::std::move(from)) {}
  inline MarketByOrderUpdate_Update& operator=(const MarketByOrderUpdate_Update& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderUpdate_Update& operator=(MarketByOrderUpdate_Update&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderUpdate_Update& default_instance() {
    return *reinterpret_cast<const MarketByOrderUpdate_Update*>(
        &_MarketByOrderUpdate_Update_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(MarketByOrderUpdate_Update& a, MarketByOrderUpdate_Update& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderUpdate_Update* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderUpdate_Update* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderUpdate_Update* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderUpdate_Update>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderUpdate_Update& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderUpdate_Update& from) { MarketByOrderUpdate_Update::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderUpdate_Update* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderUpdate.Update"; }

 protected:
  explicit MarketByOrderUpdate_Update(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderUpdate_Update(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderUpdate_Update& from);
  MarketByOrderUpdate_Update(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderUpdate_Update&& from) noexcept
      : MarketByOrderUpdate_Update(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPriceFieldNumber = 4,
    kOrderIdFieldNumber = 2,
    kUpdateTypeFieldNumber = 1,
    kBidOfferFieldNumber = 3,
    kPriorityFieldNumber = 6,
    kVolumeFieldNumber = 5,
  };
  // .t4proto.v1.common.Price price = 4;
  bool has_price() const;
  void clear_price() ;
  const ::t4proto::v1::common::Price& price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_price();
  void set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_price();

  private:
  const ::t4proto::v1::common::Price& _internal_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // uint64 order_id = 2;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // .t4proto.v1.market.MarketByOrderUpdate.UpdateType update_type = 1;
  void clear_update_type() ;
  ::t4proto::v1::market::MarketByOrderUpdate_UpdateType update_type() const;
  void set_update_type(::t4proto::v1::market::MarketByOrderUpdate_UpdateType value);

  private:
  ::t4proto::v1::market::MarketByOrderUpdate_UpdateType _internal_update_type() const;
  void _internal_set_update_type(::t4proto::v1::market::MarketByOrderUpdate_UpdateType value);

  public:
  // .t4proto.v1.common.BidOffer bid_offer = 3;
  void clear_bid_offer() ;
  ::t4proto::v1::common::BidOffer bid_offer() const;
  void set_bid_offer(::t4proto::v1::common::BidOffer value);

  private:
  ::t4proto::v1::common::BidOffer _internal_bid_offer() const;
  void _internal_set_bid_offer(::t4proto::v1::common::BidOffer value);

  public:
  // uint64 priority = 6;
  void clear_priority() ;
  ::uint64_t priority() const;
  void set_priority(::uint64_t value);

  private:
  ::uint64_t _internal_priority() const;
  void _internal_set_priority(::uint64_t value);

  public:
  // int32 volume = 5;
  void clear_volume() ;
  ::int32_t volume() const;
  void set_volume(::int32_t value);

  private:
  ::int32_t _internal_volume() const;
  void _internal_set_volume(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderUpdate.Update)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderUpdate_Update& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE price_;
    ::uint64_t order_id_;
    int update_type_;
    int bid_offer_;
    ::uint64_t priority_;
    ::int32_t volume_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderUpdate_Update_class_data_;
// -------------------------------------------------------------------

class MarketByOrderSubscribeReject final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderSubscribeReject) */ {
 public:
  inline MarketByOrderSubscribeReject() : MarketByOrderSubscribeReject(nullptr) {}
  ~MarketByOrderSubscribeReject() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderSubscribeReject* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderSubscribeReject));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderSubscribeReject(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderSubscribeReject(const MarketByOrderSubscribeReject& from) : MarketByOrderSubscribeReject(nullptr, from) {}
  inline MarketByOrderSubscribeReject(MarketByOrderSubscribeReject&& from) noexcept
      : MarketByOrderSubscribeReject(nullptr, ::std::move(from)) {}
  inline MarketByOrderSubscribeReject& operator=(const MarketByOrderSubscribeReject& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderSubscribeReject& operator=(MarketByOrderSubscribeReject&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderSubscribeReject& default_instance() {
    return *reinterpret_cast<const MarketByOrderSubscribeReject*>(
        &_MarketByOrderSubscribeReject_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MarketByOrderSubscribeReject& a, MarketByOrderSubscribeReject& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderSubscribeReject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderSubscribeReject* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderSubscribeReject* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderSubscribeReject>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderSubscribeReject& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderSubscribeReject& from) { MarketByOrderSubscribeReject::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderSubscribeReject* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderSubscribeReject"; }

 protected:
  explicit MarketByOrderSubscribeReject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderSubscribeReject(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderSubscribeReject& from);
  MarketByOrderSubscribeReject(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderSubscribeReject&& from) noexcept
      : MarketByOrderSubscribeReject(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kModeFieldNumber = 3,
  };
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 2;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // .t4proto.v1.common.MarketMode mode = 3;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderSubscribeReject)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderSubscribeReject& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSubscribeReject_class_data_;
// -------------------------------------------------------------------

class MarketByOrderSnapshot_Order final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderSnapshot.Order) */ {
 public:
  inline MarketByOrderSnapshot_Order() : MarketByOrderSnapshot_Order(nullptr) {}
  ~MarketByOrderSnapshot_Order() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderSnapshot_Order* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderSnapshot_Order));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderSnapshot_Order(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderSnapshot_Order(const MarketByOrderSnapshot_Order& from) : MarketByOrderSnapshot_Order(nullptr, from) {}
  inline MarketByOrderSnapshot_Order(MarketByOrderSnapshot_Order&& from) noexcept
      : MarketByOrderSnapshot_Order(nullptr, ::std::move(from)) {}
  inline MarketByOrderSnapshot_Order& operator=(const MarketByOrderSnapshot_Order& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderSnapshot_Order& operator=(MarketByOrderSnapshot_Order&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderSnapshot_Order& default_instance() {
    return *reinterpret_cast<const MarketByOrderSnapshot_Order*>(
        &_MarketByOrderSnapshot_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(MarketByOrderSnapshot_Order& a, MarketByOrderSnapshot_Order& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderSnapshot_Order* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderSnapshot_Order* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderSnapshot_Order* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderSnapshot_Order>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderSnapshot_Order& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderSnapshot_Order& from) { MarketByOrderSnapshot_Order::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderSnapshot_Order* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderSnapshot.Order"; }

 protected:
  explicit MarketByOrderSnapshot_Order(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderSnapshot_Order(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderSnapshot_Order& from);
  MarketByOrderSnapshot_Order(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderSnapshot_Order&& from) noexcept
      : MarketByOrderSnapshot_Order(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPriceFieldNumber = 3,
    kOrderIdFieldNumber = 1,
    kBidOfferFieldNumber = 2,
    kVolumeFieldNumber = 4,
    kPriorityFieldNumber = 5,
  };
  // .t4proto.v1.common.Price price = 3;
  bool has_price() const;
  void clear_price() ;
  const ::t4proto::v1::common::Price& price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_price();
  void set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_price();

  private:
  const ::t4proto::v1::common::Price& _internal_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_price();

  public:
  // uint64 order_id = 1;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // .t4proto.v1.common.BidOffer bid_offer = 2;
  void clear_bid_offer() ;
  ::t4proto::v1::common::BidOffer bid_offer() const;
  void set_bid_offer(::t4proto::v1::common::BidOffer value);

  private:
  ::t4proto::v1::common::BidOffer _internal_bid_offer() const;
  void _internal_set_bid_offer(::t4proto::v1::common::BidOffer value);

  public:
  // int32 volume = 4;
  void clear_volume() ;
  ::int32_t volume() const;
  void set_volume(::int32_t value);

  private:
  ::int32_t _internal_volume() const;
  void _internal_set_volume(::int32_t value);

  public:
  // uint64 priority = 5;
  void clear_priority() ;
  ::uint64_t priority() const;
  void set_priority(::uint64_t value);

  private:
  ::uint64_t _internal_priority() const;
  void _internal_set_priority(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderSnapshot.Order)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderSnapshot_Order& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE price_;
    ::uint64_t order_id_;
    int bid_offer_;
    ::int32_t volume_;
    ::uint64_t priority_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSnapshot_Order_class_data_;
// -------------------------------------------------------------------

class MarketDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDetails) */ {
 public:
  inline MarketDetails() : MarketDetails(nullptr) {}
  ~MarketDetails() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDetails* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDetails));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDetails(::google::protobuf::internal::ConstantInitialized);

  inline MarketDetails(const MarketDetails& from) : MarketDetails(nullptr, from) {}
  inline MarketDetails(MarketDetails&& from) noexcept
      : MarketDetails(nullptr, ::std::move(from)) {}
  inline MarketDetails& operator=(const MarketDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDetails& operator=(MarketDetails&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDetails& default_instance() {
    return *reinterpret_cast<const MarketDetails*>(
        &_MarketDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MarketDetails& a, MarketDetails& b) { a.Swap(&b); }
  inline void Swap(MarketDetails* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDetails* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDetails* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDetails& from) { MarketDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDetails* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDetails"; }

 protected:
  explicit MarketDetails(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDetails(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDetails& from);
  MarketDetails(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDetails&& from) noexcept
      : MarketDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using LegItem = MarketDetails_LegItem;

  // accessors -------------------------------------------------------
  enum : int {
    kLegsFieldNumber = 17,
    kMarketIdFieldNumber = 1,
    kExchangeIdFieldNumber = 2,
    kContractIdFieldNumber = 3,
    kMarketRefFieldNumber = 15,
    kGroupFieldNumber = 16,
    kDetailsFieldNumber = 18,
    kPriceCodeFieldNumber = 20,
    kUnderlyingMarketIdFieldNumber = 29,
    kVttFieldNumber = 30,
    kPointValueFieldNumber = 7,
    kMinPriceIncrementFieldNumber = 8,
    kActivationDateFieldNumber = 10,
    kLastTradingDateFieldNumber = 11,
    kLastClientUpdateTimeFieldNumber = 12,
    kMinCabPriceFieldNumber = 24,
    kStrikePriceFieldNumber = 25,
    kExpiryDateFieldNumber = 4,
    kContractTypeFieldNumber = 5,
    kDecimalsFieldNumber = 6,
    kOrderTypesFieldNumber = 9,
    kDelistDateFieldNumber = 13,
    kExchangeDelistDateFieldNumber = 14,
    kStrategyTypeFieldNumber = 19,
    kRealDecimalsFieldNumber = 21,
    kDisplayDecimalsFieldNumber = 22,
    kClearingDecimalsFieldNumber = 23,
    kStrategyRatioFieldNumber = 27,
    kVolumeIncrementFieldNumber = 26,
    kDisabledFieldNumber = 28,
    kMaintIntraMarginFieldNumber = 31,
    kMaintMarginFieldNumber = 32,
    kMaintVolScanFieldNumber = 33,
  };
  // repeated .t4proto.v1.market.MarketDetails.LegItem legs = 17;
  int legs_size() const;
  private:
  int _internal_legs_size() const;

  public:
  void clear_legs() ;
  ::t4proto::v1::market::MarketDetails_LegItem* PROTOBUF_NONNULL mutable_legs(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>* PROTOBUF_NONNULL mutable_legs();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>& _internal_legs() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>* PROTOBUF_NONNULL _internal_mutable_legs();
  public:
  const ::t4proto::v1::market::MarketDetails_LegItem& legs(int index) const;
  ::t4proto::v1::market::MarketDetails_LegItem* PROTOBUF_NONNULL add_legs();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>& legs() const;
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // string exchange_id = 2;
  void clear_exchange_id() ;
  const ::std::string& exchange_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange_id();
  void set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange_id();

  public:
  // string contract_id = 3;
  void clear_contract_id() ;
  const ::std::string& contract_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_contract_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_contract_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_contract_id();
  void set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_contract_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_contract_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_contract_id();

  public:
  // string market_ref = 15;
  void clear_market_ref() ;
  const ::std::string& market_ref() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_ref(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_ref();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_ref();
  void set_allocated_market_ref(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_ref() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_ref(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_ref();

  public:
  // string group = 16;
  void clear_group() ;
  const ::std::string& group() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_group();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_group();
  void set_allocated_group(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_group() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_group(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_group();

  public:
  // string details = 18;
  void clear_details() ;
  const ::std::string& details() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_details(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_details();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_details();
  void set_allocated_details(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_details() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_details(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_details();

  public:
  // string price_code = 20;
  void clear_price_code() ;
  const ::std::string& price_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_price_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_price_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_price_code();
  void set_allocated_price_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_price_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_price_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_price_code();

  public:
  // string underlying_market_id = 29;
  void clear_underlying_market_id() ;
  const ::std::string& underlying_market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_underlying_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_underlying_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_underlying_market_id();
  void set_allocated_underlying_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_underlying_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_underlying_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_underlying_market_id();

  public:
  // string vtt = 30;
  void clear_vtt() ;
  const ::std::string& vtt() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_vtt(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_vtt();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_vtt();
  void set_allocated_vtt(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_vtt() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_vtt(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_vtt();

  public:
  // .t4proto.v1.common.Decimal point_value = 7;
  bool has_point_value() const;
  void clear_point_value() ;
  const ::t4proto::v1::common::Decimal& point_value() const;
  [[nodiscard]] ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE release_point_value();
  ::t4proto::v1::common::Decimal* PROTOBUF_NONNULL mutable_point_value();
  void set_allocated_point_value(::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_point_value(::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE unsafe_arena_release_point_value();

  private:
  const ::t4proto::v1::common::Decimal& _internal_point_value() const;
  ::t4proto::v1::common::Decimal* PROTOBUF_NONNULL _internal_mutable_point_value();

  public:
  // .t4proto.v1.common.Price min_price_increment = 8;
  bool has_min_price_increment() const;
  void clear_min_price_increment() ;
  const ::t4proto::v1::common::Price& min_price_increment() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_min_price_increment();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_min_price_increment();
  void set_allocated_min_price_increment(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_min_price_increment(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_min_price_increment();

  private:
  const ::t4proto::v1::common::Price& _internal_min_price_increment() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_min_price_increment();

  public:
  // .google.protobuf.Timestamp activation_date = 10;
  bool has_activation_date() const;
  void clear_activation_date() ;
  const ::google::protobuf::Timestamp& activation_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_activation_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_activation_date();
  void set_allocated_activation_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_activation_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_activation_date();

  private:
  const ::google::protobuf::Timestamp& _internal_activation_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_activation_date();

  public:
  // .google.protobuf.Timestamp last_trading_date = 11;
  bool has_last_trading_date() const;
  void clear_last_trading_date() ;
  const ::google::protobuf::Timestamp& last_trading_date() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_last_trading_date();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_last_trading_date();
  void set_allocated_last_trading_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_trading_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_last_trading_date();

  private:
  const ::google::protobuf::Timestamp& _internal_last_trading_date() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_last_trading_date();

  public:
  // .google.protobuf.Timestamp last_client_update_time = 12;
  bool has_last_client_update_time() const;
  void clear_last_client_update_time() ;
  const ::google::protobuf::Timestamp& last_client_update_time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_last_client_update_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_last_client_update_time();
  void set_allocated_last_client_update_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_last_client_update_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_last_client_update_time();

  private:
  const ::google::protobuf::Timestamp& _internal_last_client_update_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_last_client_update_time();

  public:
  // optional .t4proto.v1.common.Price min_cab_price = 24;
  bool has_min_cab_price() const;
  void clear_min_cab_price() ;
  const ::t4proto::v1::common::Price& min_cab_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_min_cab_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_min_cab_price();
  void set_allocated_min_cab_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_min_cab_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_min_cab_price();

  private:
  const ::t4proto::v1::common::Price& _internal_min_cab_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_min_cab_price();

  public:
  // optional .t4proto.v1.common.Price strike_price = 25;
  bool has_strike_price() const;
  void clear_strike_price() ;
  const ::t4proto::v1::common::Price& strike_price() const;
  [[nodiscard]] ::t4proto::v1::common::Price* PROTOBUF_NULLABLE release_strike_price();
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL mutable_strike_price();
  void set_allocated_strike_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_strike_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value);
  ::t4proto::v1::common::Price* PROTOBUF_NULLABLE unsafe_arena_release_strike_price();

  private:
  const ::t4proto::v1::common::Price& _internal_strike_price() const;
  ::t4proto::v1::common::Price* PROTOBUF_NONNULL _internal_mutable_strike_price();

  public:
  // int32 expiry_date = 4;
  void clear_expiry_date() ;
  ::int32_t expiry_date() const;
  void set_expiry_date(::int32_t value);

  private:
  ::int32_t _internal_expiry_date() const;
  void _internal_set_expiry_date(::int32_t value);

  public:
  // .t4proto.v1.common.ContractType contract_type = 5;
  void clear_contract_type() ;
  ::t4proto::v1::common::ContractType contract_type() const;
  void set_contract_type(::t4proto::v1::common::ContractType value);

  private:
  ::t4proto::v1::common::ContractType _internal_contract_type() const;
  void _internal_set_contract_type(::t4proto::v1::common::ContractType value);

  public:
  // int32 decimals = 6;
  void clear_decimals() ;
  ::int32_t decimals() const;
  void set_decimals(::int32_t value);

  private:
  ::int32_t _internal_decimals() const;
  void _internal_set_decimals(::int32_t value);

  public:
  // int32 order_types = 9;
  void clear_order_types() ;
  ::int32_t order_types() const;
  void set_order_types(::int32_t value);

  private:
  ::int32_t _internal_order_types() const;
  void _internal_set_order_types(::int32_t value);

  public:
  // int64 delist_date = 13;
  void clear_delist_date() ;
  ::int64_t delist_date() const;
  void set_delist_date(::int64_t value);

  private:
  ::int64_t _internal_delist_date() const;
  void _internal_set_delist_date(::int64_t value);

  public:
  // int64 exchange_delist_date = 14;
  void clear_exchange_delist_date() ;
  ::int64_t exchange_delist_date() const;
  void set_exchange_delist_date(::int64_t value);

  private:
  ::int64_t _internal_exchange_delist_date() const;
  void _internal_set_exchange_delist_date(::int64_t value);

  public:
  // .t4proto.v1.common.StrategyType strategy_type = 19;
  void clear_strategy_type() ;
  ::t4proto::v1::common::StrategyType strategy_type() const;
  void set_strategy_type(::t4proto::v1::common::StrategyType value);

  private:
  ::t4proto::v1::common::StrategyType _internal_strategy_type() const;
  void _internal_set_strategy_type(::t4proto::v1::common::StrategyType value);

  public:
  // int32 real_decimals = 21;
  void clear_real_decimals() ;
  ::int32_t real_decimals() const;
  void set_real_decimals(::int32_t value);

  private:
  ::int32_t _internal_real_decimals() const;
  void _internal_set_real_decimals(::int32_t value);

  public:
  // int32 display_decimals = 22;
  void clear_display_decimals() ;
  ::int32_t display_decimals() const;
  void set_display_decimals(::int32_t value);

  private:
  ::int32_t _internal_display_decimals() const;
  void _internal_set_display_decimals(::int32_t value);

  public:
  // int32 clearing_decimals = 23;
  void clear_clearing_decimals() ;
  ::int32_t clearing_decimals() const;
  void set_clearing_decimals(::int32_t value);

  private:
  ::int32_t _internal_clearing_decimals() const;
  void _internal_set_clearing_decimals(::int32_t value);

  public:
  // double strategy_ratio = 27;
  void clear_strategy_ratio() ;
  double strategy_ratio() const;
  void set_strategy_ratio(double value);

  private:
  double _internal_strategy_ratio() const;
  void _internal_set_strategy_ratio(double value);

  public:
  // int32 volume_increment = 26;
  void clear_volume_increment() ;
  ::int32_t volume_increment() const;
  void set_volume_increment(::int32_t value);

  private:
  ::int32_t _internal_volume_increment() const;
  void _internal_set_volume_increment(::int32_t value);

  public:
  // bool disabled = 28;
  void clear_disabled() ;
  bool disabled() const;
  void set_disabled(bool value);

  private:
  bool _internal_disabled() const;
  void _internal_set_disabled(bool value);

  public:
  // double maint_intra_margin = 31;
  void clear_maint_intra_margin() ;
  double maint_intra_margin() const;
  void set_maint_intra_margin(double value);

  private:
  double _internal_maint_intra_margin() const;
  void _internal_set_maint_intra_margin(double value);

  public:
  // double maint_margin = 32;
  void clear_maint_margin() ;
  double maint_margin() const;
  void set_maint_margin(double value);

  private:
  double _internal_maint_margin() const;
  void _internal_set_maint_margin(double value);

  public:
  // double maint_vol_scan = 33;
  void clear_maint_vol_scan() ;
  double maint_vol_scan() const;
  void set_maint_vol_scan(double value);

  private:
  double _internal_maint_vol_scan() const;
  void _internal_set_maint_vol_scan(double value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 33,
                                   8, 158,
                                   7>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDetails& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketDetails_LegItem > legs_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::internal::ArenaStringPtr exchange_id_;
    ::google::protobuf::internal::ArenaStringPtr contract_id_;
    ::google::protobuf::internal::ArenaStringPtr market_ref_;
    ::google::protobuf::internal::ArenaStringPtr group_;
    ::google::protobuf::internal::ArenaStringPtr details_;
    ::google::protobuf::internal::ArenaStringPtr price_code_;
    ::google::protobuf::internal::ArenaStringPtr underlying_market_id_;
    ::google::protobuf::internal::ArenaStringPtr vtt_;
    ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE point_value_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE min_price_increment_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE activation_date_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE last_trading_date_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE last_client_update_time_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE min_cab_price_;
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE strike_price_;
    ::int32_t expiry_date_;
    int contract_type_;
    ::int32_t decimals_;
    ::int32_t order_types_;
    ::int64_t delist_date_;
    ::int64_t exchange_delist_date_;
    int strategy_type_;
    ::int32_t real_decimals_;
    ::int32_t display_decimals_;
    ::int32_t clearing_decimals_;
    double strategy_ratio_;
    ::int32_t volume_increment_;
    bool disabled_;
    double maint_intra_margin_;
    double maint_margin_;
    double maint_vol_scan_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDetails_class_data_;
// -------------------------------------------------------------------

class MarketDepth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketDepth) */ {
 public:
  inline MarketDepth() : MarketDepth(nullptr) {}
  ~MarketDepth() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketDepth* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketDepth));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketDepth(::google::protobuf::internal::ConstantInitialized);

  inline MarketDepth(const MarketDepth& from) : MarketDepth(nullptr, from) {}
  inline MarketDepth(MarketDepth&& from) noexcept
      : MarketDepth(nullptr, ::std::move(from)) {}
  inline MarketDepth& operator=(const MarketDepth& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketDepth& operator=(MarketDepth&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketDepth& default_instance() {
    return *reinterpret_cast<const MarketDepth*>(
        &_MarketDepth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MarketDepth& a, MarketDepth& b) { a.Swap(&b); }
  inline void Swap(MarketDepth* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketDepth* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketDepth* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketDepth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketDepth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketDepth& from) { MarketDepth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketDepth* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketDepth"; }

 protected:
  explicit MarketDepth(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketDepth(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketDepth& from);
  MarketDepth(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketDepth&& from) noexcept
      : MarketDepth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using DepthLine = MarketDepth_DepthLine;
  using TradeData = MarketDepth_TradeData;

  // accessors -------------------------------------------------------
  enum : int {
    kBidsFieldNumber = 6,
    kOffersFieldNumber = 7,
    kImpliedBidsFieldNumber = 8,
    kImpliedOffersFieldNumber = 9,
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 4,
    kTradeDataFieldNumber = 12,
    kDepthLevelsFieldNumber = 2,
    kDepthBufferFieldNumber = 3,
    kDelayedFieldNumber = 5,
    kModeFieldNumber = 10,
    kFlagsFieldNumber = 11,
  };
  // repeated .t4proto.v1.market.MarketDepth.DepthLine bids = 6;
  int bids_size() const;
  private:
  int _internal_bids_size() const;

  public:
  void clear_bids() ;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL mutable_bids(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL mutable_bids();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& _internal_bids() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL _internal_mutable_bids();
  public:
  const ::t4proto::v1::market::MarketDepth_DepthLine& bids(int index) const;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL add_bids();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& bids() const;
  // repeated .t4proto.v1.market.MarketDepth.DepthLine offers = 7;
  int offers_size() const;
  private:
  int _internal_offers_size() const;

  public:
  void clear_offers() ;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL mutable_offers(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL mutable_offers();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& _internal_offers() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL _internal_mutable_offers();
  public:
  const ::t4proto::v1::market::MarketDepth_DepthLine& offers(int index) const;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL add_offers();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& offers() const;
  // repeated .t4proto.v1.market.MarketDepth.DepthLine implied_bids = 8;
  int implied_bids_size() const;
  private:
  int _internal_implied_bids_size() const;

  public:
  void clear_implied_bids() ;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL mutable_implied_bids(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL mutable_implied_bids();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& _internal_implied_bids() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL _internal_mutable_implied_bids();
  public:
  const ::t4proto::v1::market::MarketDepth_DepthLine& implied_bids(int index) const;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL add_implied_bids();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& implied_bids() const;
  // repeated .t4proto.v1.market.MarketDepth.DepthLine implied_offers = 9;
  int implied_offers_size() const;
  private:
  int _internal_implied_offers_size() const;

  public:
  void clear_implied_offers() ;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL mutable_implied_offers(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL mutable_implied_offers();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& _internal_implied_offers() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL _internal_mutable_implied_offers();
  public:
  const ::t4proto::v1::market::MarketDepth_DepthLine& implied_offers(int index) const;
  ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL add_implied_offers();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& implied_offers() const;
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 4;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // .t4proto.v1.market.MarketDepth.TradeData trade_data = 12;
  bool has_trade_data() const;
  void clear_trade_data() ;
  const ::t4proto::v1::market::MarketDepth_TradeData& trade_data() const;
  [[nodiscard]] ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE release_trade_data();
  ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NONNULL mutable_trade_data();
  void set_allocated_trade_data(::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_trade_data(::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE unsafe_arena_release_trade_data();

  private:
  const ::t4proto::v1::market::MarketDepth_TradeData& _internal_trade_data() const;
  ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NONNULL _internal_mutable_trade_data();

  public:
  // .t4proto.v1.common.DepthLevels depth_levels = 2;
  void clear_depth_levels() ;
  ::t4proto::v1::common::DepthLevels depth_levels() const;
  void set_depth_levels(::t4proto::v1::common::DepthLevels value);

  private:
  ::t4proto::v1::common::DepthLevels _internal_depth_levels() const;
  void _internal_set_depth_levels(::t4proto::v1::common::DepthLevels value);

  public:
  // .t4proto.v1.common.DepthBuffer depth_buffer = 3;
  void clear_depth_buffer() ;
  ::t4proto::v1::common::DepthBuffer depth_buffer() const;
  void set_depth_buffer(::t4proto::v1::common::DepthBuffer value);

  private:
  ::t4proto::v1::common::DepthBuffer _internal_depth_buffer() const;
  void _internal_set_depth_buffer(::t4proto::v1::common::DepthBuffer value);

  public:
  // bool delayed = 5;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // .t4proto.v1.common.MarketMode mode = 10;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // .t4proto.v1.common.MarketFlags2 flags = 11;
  void clear_flags() ;
  ::t4proto::v1::common::MarketFlags2 flags() const;
  void set_flags(::t4proto::v1::common::MarketFlags2 value);

  private:
  ::t4proto::v1::common::MarketFlags2 _internal_flags() const;
  void _internal_set_flags(::t4proto::v1::common::MarketFlags2 value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketDepth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12,
                                   6, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketDepth& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketDepth_DepthLine > bids_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketDepth_DepthLine > offers_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketDepth_DepthLine > implied_bids_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketDepth_DepthLine > implied_offers_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE trade_data_;
    int depth_levels_;
    int depth_buffer_;
    bool delayed_;
    int mode_;
    int flags_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketDepth_class_data_;
// -------------------------------------------------------------------

class MarketByOrderUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderUpdate) */ {
 public:
  inline MarketByOrderUpdate() : MarketByOrderUpdate(nullptr) {}
  ~MarketByOrderUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderUpdate(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderUpdate(const MarketByOrderUpdate& from) : MarketByOrderUpdate(nullptr, from) {}
  inline MarketByOrderUpdate(MarketByOrderUpdate&& from) noexcept
      : MarketByOrderUpdate(nullptr, ::std::move(from)) {}
  inline MarketByOrderUpdate& operator=(const MarketByOrderUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderUpdate& operator=(MarketByOrderUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderUpdate& default_instance() {
    return *reinterpret_cast<const MarketByOrderUpdate*>(
        &_MarketByOrderUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(MarketByOrderUpdate& a, MarketByOrderUpdate& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderUpdate& from) { MarketByOrderUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderUpdate"; }

 protected:
  explicit MarketByOrderUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderUpdate& from);
  MarketByOrderUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderUpdate&& from) noexcept
      : MarketByOrderUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Update = MarketByOrderUpdate_Update;
  using UpdateType = MarketByOrderUpdate_UpdateType;
  static constexpr UpdateType UPDATE_TYPE_ADD_OR_UPDATE = MarketByOrderUpdate_UpdateType_UPDATE_TYPE_ADD_OR_UPDATE;
  static constexpr UpdateType UPDATE_TYPE_DELETE = MarketByOrderUpdate_UpdateType_UPDATE_TYPE_DELETE;
  static constexpr UpdateType UPDATE_TYPE_CLEAR = MarketByOrderUpdate_UpdateType_UPDATE_TYPE_CLEAR;
  static inline bool UpdateType_IsValid(int value) {
    return MarketByOrderUpdate_UpdateType_IsValid(value);
  }
  static constexpr UpdateType UpdateType_MIN = MarketByOrderUpdate_UpdateType_UpdateType_MIN;
  static constexpr UpdateType UpdateType_MAX = MarketByOrderUpdate_UpdateType_UpdateType_MAX;
  static constexpr int UpdateType_ARRAYSIZE = MarketByOrderUpdate_UpdateType_UpdateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL UpdateType_descriptor() {
    return MarketByOrderUpdate_UpdateType_descriptor();
  }
  template <typename T>
  static inline const ::std::string& UpdateType_Name(T value) {
    return MarketByOrderUpdate_UpdateType_Name(value);
  }
  static inline bool UpdateType_Parse(
      ::absl::string_view name, UpdateType* PROTOBUF_NONNULL value) {
    return MarketByOrderUpdate_UpdateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatesFieldNumber = 5,
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kSequenceFieldNumber = 4,
    kModeFieldNumber = 3,
  };
  // repeated .t4proto.v1.market.MarketByOrderUpdate.Update updates = 5;
  int updates_size() const;
  private:
  int _internal_updates_size() const;

  public:
  void clear_updates() ;
  ::t4proto::v1::market::MarketByOrderUpdate_Update* PROTOBUF_NONNULL mutable_updates(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>* PROTOBUF_NONNULL mutable_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>& _internal_updates() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>* PROTOBUF_NONNULL _internal_mutable_updates();
  public:
  const ::t4proto::v1::market::MarketByOrderUpdate_Update& updates(int index) const;
  ::t4proto::v1::market::MarketByOrderUpdate_Update* PROTOBUF_NONNULL add_updates();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>& updates() const;
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 2;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // uint64 sequence = 4;
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // .t4proto.v1.common.MarketMode mode = 3;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketByOrderUpdate_Update > updates_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::uint64_t sequence_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderUpdate_class_data_;
// -------------------------------------------------------------------

class MarketByOrderSnapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketByOrderSnapshot) */ {
 public:
  inline MarketByOrderSnapshot() : MarketByOrderSnapshot(nullptr) {}
  ~MarketByOrderSnapshot() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketByOrderSnapshot* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketByOrderSnapshot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketByOrderSnapshot(::google::protobuf::internal::ConstantInitialized);

  inline MarketByOrderSnapshot(const MarketByOrderSnapshot& from) : MarketByOrderSnapshot(nullptr, from) {}
  inline MarketByOrderSnapshot(MarketByOrderSnapshot&& from) noexcept
      : MarketByOrderSnapshot(nullptr, ::std::move(from)) {}
  inline MarketByOrderSnapshot& operator=(const MarketByOrderSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketByOrderSnapshot& operator=(MarketByOrderSnapshot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketByOrderSnapshot& default_instance() {
    return *reinterpret_cast<const MarketByOrderSnapshot*>(
        &_MarketByOrderSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(MarketByOrderSnapshot& a, MarketByOrderSnapshot& b) { a.Swap(&b); }
  inline void Swap(MarketByOrderSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketByOrderSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketByOrderSnapshot* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketByOrderSnapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketByOrderSnapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketByOrderSnapshot& from) { MarketByOrderSnapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketByOrderSnapshot* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketByOrderSnapshot"; }

 protected:
  explicit MarketByOrderSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketByOrderSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketByOrderSnapshot& from);
  MarketByOrderSnapshot(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketByOrderSnapshot&& from) noexcept
      : MarketByOrderSnapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Order = MarketByOrderSnapshot_Order;

  // accessors -------------------------------------------------------
  enum : int {
    kOrdersFieldNumber = 5,
    kMarketIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kLastSequenceFieldNumber = 4,
    kModeFieldNumber = 3,
  };
  // repeated .t4proto.v1.market.MarketByOrderSnapshot.Order orders = 5;
  int orders_size() const;
  private:
  int _internal_orders_size() const;

  public:
  void clear_orders() ;
  ::t4proto::v1::market::MarketByOrderSnapshot_Order* PROTOBUF_NONNULL mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>* PROTOBUF_NONNULL mutable_orders();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>& _internal_orders() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>* PROTOBUF_NONNULL _internal_mutable_orders();
  public:
  const ::t4proto::v1::market::MarketByOrderSnapshot_Order& orders(int index) const;
  ::t4proto::v1::market::MarketByOrderSnapshot_Order* PROTOBUF_NONNULL add_orders();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>& orders() const;
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .google.protobuf.Timestamp time = 2;
  bool has_time() const;
  void clear_time() ;
  const ::google::protobuf::Timestamp& time() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_time();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_time();
  void set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_time();

  private:
  const ::google::protobuf::Timestamp& _internal_time() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // uint64 last_sequence = 4;
  void clear_last_sequence() ;
  ::uint64_t last_sequence() const;
  void set_last_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_last_sequence() const;
  void _internal_set_last_sequence(::uint64_t value);

  public:
  // .t4proto.v1.common.MarketMode mode = 3;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketByOrderSnapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 57,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketByOrderSnapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketByOrderSnapshot_Order > orders_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE time_;
    ::uint64_t last_sequence_;
    int mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketByOrderSnapshot_class_data_;
// -------------------------------------------------------------------

class MarketSnapshotMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketSnapshotMessage) */ {
 public:
  inline MarketSnapshotMessage() : MarketSnapshotMessage(nullptr) {}
  ~MarketSnapshotMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketSnapshotMessage* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketSnapshotMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketSnapshotMessage(::google::protobuf::internal::ConstantInitialized);

  inline MarketSnapshotMessage(const MarketSnapshotMessage& from) : MarketSnapshotMessage(nullptr, from) {}
  inline MarketSnapshotMessage(MarketSnapshotMessage&& from) noexcept
      : MarketSnapshotMessage(nullptr, ::std::move(from)) {}
  inline MarketSnapshotMessage& operator=(const MarketSnapshotMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketSnapshotMessage& operator=(MarketSnapshotMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketSnapshotMessage& default_instance() {
    return *reinterpret_cast<const MarketSnapshotMessage*>(
        &_MarketSnapshotMessage_default_instance_);
  }
  enum PayloadCase {
    kMarketDepth = 3,
    kMarketDepthTrade = 4,
    kMarketHighLow = 5,
    kMarketPriceLimits = 6,
    kMarketSettlement = 7,
    PAYLOAD_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MarketSnapshotMessage& a, MarketSnapshotMessage& b) { a.Swap(&b); }
  inline void Swap(MarketSnapshotMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketSnapshotMessage* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketSnapshotMessage* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketSnapshotMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketSnapshotMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketSnapshotMessage& from) { MarketSnapshotMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketSnapshotMessage* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketSnapshotMessage"; }

 protected:
  explicit MarketSnapshotMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketSnapshotMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketSnapshotMessage& from);
  MarketSnapshotMessage(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketSnapshotMessage&& from) noexcept
      : MarketSnapshotMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketDepthFieldNumber = 3,
    kMarketDepthTradeFieldNumber = 4,
    kMarketHighLowFieldNumber = 5,
    kMarketPriceLimitsFieldNumber = 6,
    kMarketSettlementFieldNumber = 7,
  };
  // .t4proto.v1.market.MarketDepth market_depth = 3;
  bool has_market_depth() const;
  private:
  bool _internal_has_market_depth() const;

  public:
  void clear_market_depth() ;
  const ::t4proto::v1::market::MarketDepth& market_depth() const;
  [[nodiscard]] ::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE release_market_depth();
  ::t4proto::v1::market::MarketDepth* PROTOBUF_NONNULL mutable_market_depth();
  void set_allocated_market_depth(::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_market_depth(::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE unsafe_arena_release_market_depth();

  private:
  const ::t4proto::v1::market::MarketDepth& _internal_market_depth() const;
  ::t4proto::v1::market::MarketDepth* PROTOBUF_NONNULL _internal_mutable_market_depth();

  public:
  // .t4proto.v1.market.MarketDepthTrade market_depth_trade = 4;
  bool has_market_depth_trade() const;
  private:
  bool _internal_has_market_depth_trade() const;

  public:
  void clear_market_depth_trade() ;
  const ::t4proto::v1::market::MarketDepthTrade& market_depth_trade() const;
  [[nodiscard]] ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE release_market_depth_trade();
  ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NONNULL mutable_market_depth_trade();
  void set_allocated_market_depth_trade(::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_market_depth_trade(::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE unsafe_arena_release_market_depth_trade();

  private:
  const ::t4proto::v1::market::MarketDepthTrade& _internal_market_depth_trade() const;
  ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NONNULL _internal_mutable_market_depth_trade();

  public:
  // .t4proto.v1.market.MarketHighLow market_high_low = 5;
  bool has_market_high_low() const;
  private:
  bool _internal_has_market_high_low() const;

  public:
  void clear_market_high_low() ;
  const ::t4proto::v1::market::MarketHighLow& market_high_low() const;
  [[nodiscard]] ::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE release_market_high_low();
  ::t4proto::v1::market::MarketHighLow* PROTOBUF_NONNULL mutable_market_high_low();
  void set_allocated_market_high_low(::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_market_high_low(::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE unsafe_arena_release_market_high_low();

  private:
  const ::t4proto::v1::market::MarketHighLow& _internal_market_high_low() const;
  ::t4proto::v1::market::MarketHighLow* PROTOBUF_NONNULL _internal_mutable_market_high_low();

  public:
  // .t4proto.v1.market.MarketPriceLimits market_price_limits = 6;
  bool has_market_price_limits() const;
  private:
  bool _internal_has_market_price_limits() const;

  public:
  void clear_market_price_limits() ;
  const ::t4proto::v1::market::MarketPriceLimits& market_price_limits() const;
  [[nodiscard]] ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE release_market_price_limits();
  ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NONNULL mutable_market_price_limits();
  void set_allocated_market_price_limits(::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_market_price_limits(::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE unsafe_arena_release_market_price_limits();

  private:
  const ::t4proto::v1::market::MarketPriceLimits& _internal_market_price_limits() const;
  ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NONNULL _internal_mutable_market_price_limits();

  public:
  // .t4proto.v1.market.MarketSettlement market_settlement = 7;
  bool has_market_settlement() const;
  private:
  bool _internal_has_market_settlement() const;

  public:
  void clear_market_settlement() ;
  const ::t4proto::v1::market::MarketSettlement& market_settlement() const;
  [[nodiscard]] ::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE release_market_settlement();
  ::t4proto::v1::market::MarketSettlement* PROTOBUF_NONNULL mutable_market_settlement();
  void set_allocated_market_settlement(::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_market_settlement(::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE value);
  ::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE unsafe_arena_release_market_settlement();

  private:
  const ::t4proto::v1::market::MarketSettlement& _internal_market_settlement() const;
  ::t4proto::v1::market::MarketSettlement* PROTOBUF_NONNULL _internal_mutable_market_settlement();

  public:
  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketSnapshotMessage)
 private:
  class _Internal;
  void set_has_market_depth();
  void set_has_market_depth_trade();
  void set_has_market_high_low();
  void set_has_market_price_limits();
  void set_has_market_settlement();
  inline bool has_payload() const;
  inline void clear_has_payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 5,
                                   5, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketSnapshotMessage& from_msg);
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE market_depth_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE market_depth_trade_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE market_high_low_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE market_price_limits_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE market_settlement_;
    } payload_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketSnapshotMessage_class_data_;
// -------------------------------------------------------------------

class MarketSnapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:t4proto.v1.market.MarketSnapshot) */ {
 public:
  inline MarketSnapshot() : MarketSnapshot(nullptr) {}
  ~MarketSnapshot() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketSnapshot* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketSnapshot));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketSnapshot(::google::protobuf::internal::ConstantInitialized);

  inline MarketSnapshot(const MarketSnapshot& from) : MarketSnapshot(nullptr, from) {}
  inline MarketSnapshot(MarketSnapshot&& from) noexcept
      : MarketSnapshot(nullptr, ::std::move(from)) {}
  inline MarketSnapshot& operator=(const MarketSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketSnapshot& operator=(MarketSnapshot&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketSnapshot& default_instance() {
    return *reinterpret_cast<const MarketSnapshot*>(
        &_MarketSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(MarketSnapshot& a, MarketSnapshot& b) { a.Swap(&b); }
  inline void Swap(MarketSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketSnapshot* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketSnapshot* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketSnapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketSnapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketSnapshot& from) { MarketSnapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketSnapshot* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "t4proto.v1.market.MarketSnapshot"; }

 protected:
  explicit MarketSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  MarketSnapshot(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const MarketSnapshot& from);
  MarketSnapshot(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, MarketSnapshot&& from) noexcept
      : MarketSnapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 5,
    kMarketIdFieldNumber = 1,
    kModeFieldNumber = 2,
    kDueToConnectionFieldNumber = 3,
    kDelayedFieldNumber = 4,
  };
  // repeated .t4proto.v1.market.MarketSnapshotMessage messages = 5;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::t4proto::v1::market::MarketSnapshotMessage* PROTOBUF_NONNULL mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>* PROTOBUF_NONNULL mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>* PROTOBUF_NONNULL _internal_mutable_messages();
  public:
  const ::t4proto::v1::market::MarketSnapshotMessage& messages(int index) const;
  ::t4proto::v1::market::MarketSnapshotMessage* PROTOBUF_NONNULL add_messages();
  const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>& messages() const;
  // string market_id = 1;
  void clear_market_id() ;
  const ::std::string& market_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_market_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_market_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_market_id();
  void set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_market_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_market_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_market_id();

  public:
  // .t4proto.v1.common.MarketMode mode = 2;
  void clear_mode() ;
  ::t4proto::v1::common::MarketMode mode() const;
  void set_mode(::t4proto::v1::common::MarketMode value);

  private:
  ::t4proto::v1::common::MarketMode _internal_mode() const;
  void _internal_set_mode(::t4proto::v1::common::MarketMode value);

  public:
  // bool due_to_connection = 3;
  void clear_due_to_connection() ;
  bool due_to_connection() const;
  void set_due_to_connection(bool value);

  private:
  bool _internal_due_to_connection() const;
  void _internal_set_due_to_connection(bool value);

  public:
  // bool delayed = 4;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:t4proto.v1.market.MarketSnapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const MarketSnapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::t4proto::v1::market::MarketSnapshotMessage > messages_;
    ::google::protobuf::internal::ArenaStringPtr market_id_;
    int mode_;
    bool due_to_connection_;
    bool delayed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_t4_2fv1_2fmarket_2fmarket_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull MarketSnapshot_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MarketDepthSubscribe

// string exchange_id = 1;
inline void MarketDepthSubscribe::clear_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDepthSubscribe::exchange_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribe.exchange_id)
  return _internal_exchange_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepthSubscribe::set_exchange_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribe.exchange_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::mutable_exchange_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthSubscribe.exchange_id)
  return _s;
}
inline const ::std::string& MarketDepthSubscribe::_internal_exchange_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_id_.Get();
}
inline void MarketDepthSubscribe::_internal_set_exchange_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::_internal_mutable_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.exchange_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepthSubscribe::release_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthSubscribe.exchange_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.exchange_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepthSubscribe::set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.exchange_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_id_.IsDefault()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthSubscribe.exchange_id)
}

// string contract_id = 2;
inline void MarketDepthSubscribe::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MarketDepthSubscribe::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribe.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepthSubscribe::set_contract_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribe.contract_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::mutable_contract_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthSubscribe.contract_id)
  return _s;
}
inline const ::std::string& MarketDepthSubscribe::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void MarketDepthSubscribe::_internal_set_contract_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contract_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.contract_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepthSubscribe::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthSubscribe.contract_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.contract_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepthSubscribe::set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.contract_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_id_.IsDefault()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthSubscribe.contract_id)
}

// string market_id = 3;
inline void MarketDepthSubscribe::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& MarketDepthSubscribe::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribe.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepthSubscribe::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribe.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthSubscribe.market_id)
  return _s;
}
inline const ::std::string& MarketDepthSubscribe::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDepthSubscribe::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribe::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepthSubscribe::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthSubscribe.market_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepthSubscribe::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthSubscribe.market_id)
}

// .t4proto.v1.common.DepthBuffer buffer = 4;
inline void MarketDepthSubscribe::clear_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buffer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::t4proto::v1::common::DepthBuffer MarketDepthSubscribe::buffer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribe.buffer)
  return _internal_buffer();
}
inline void MarketDepthSubscribe::set_buffer(::t4proto::v1::common::DepthBuffer value) {
  _internal_set_buffer(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribe.buffer)
}
inline ::t4proto::v1::common::DepthBuffer MarketDepthSubscribe::_internal_buffer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::DepthBuffer>(_impl_.buffer_);
}
inline void MarketDepthSubscribe::_internal_set_buffer(::t4proto::v1::common::DepthBuffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.buffer_ = value;
}

// .t4proto.v1.common.DepthLevels depth_levels = 5;
inline void MarketDepthSubscribe::clear_depth_levels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_levels_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::t4proto::v1::common::DepthLevels MarketDepthSubscribe::depth_levels() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribe.depth_levels)
  return _internal_depth_levels();
}
inline void MarketDepthSubscribe::set_depth_levels(::t4proto::v1::common::DepthLevels value) {
  _internal_set_depth_levels(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribe.depth_levels)
}
inline ::t4proto::v1::common::DepthLevels MarketDepthSubscribe::_internal_depth_levels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::DepthLevels>(_impl_.depth_levels_);
}
inline void MarketDepthSubscribe::_internal_set_depth_levels(::t4proto::v1::common::DepthLevels value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_levels_ = value;
}

// -------------------------------------------------------------------

// MarketDepthSubscribeReject

// string market_id = 1;
inline void MarketDepthSubscribeReject::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDepthSubscribeReject::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribeReject.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepthSubscribeReject::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribeReject.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribeReject::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthSubscribeReject.market_id)
  return _s;
}
inline const ::std::string& MarketDepthSubscribeReject::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDepthSubscribeReject::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthSubscribeReject::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepthSubscribeReject::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthSubscribeReject.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepthSubscribeReject::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthSubscribeReject.market_id)
}

// .google.protobuf.Timestamp time = 2;
inline bool MarketDepthSubscribeReject::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDepthSubscribeReject::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDepthSubscribeReject::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribeReject.time)
  return _internal_time();
}
inline void MarketDepthSubscribeReject::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepthSubscribeReject.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepthSubscribeReject::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepthSubscribeReject::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthSubscribeReject.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepthSubscribeReject::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepthSubscribeReject::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthSubscribeReject.time)
  return _msg;
}
inline void MarketDepthSubscribeReject::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthSubscribeReject.time)
}

// .t4proto.v1.common.MarketMode mode = 3;
inline void MarketDepthSubscribeReject::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::t4proto::v1::common::MarketMode MarketDepthSubscribeReject::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthSubscribeReject.mode)
  return _internal_mode();
}
inline void MarketDepthSubscribeReject::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthSubscribeReject.mode)
}
inline ::t4proto::v1::common::MarketMode MarketDepthSubscribeReject::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketDepthSubscribeReject::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// MarketByOrderSubscribe

// string exchange_id = 1;
inline void MarketByOrderSubscribe::clear_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketByOrderSubscribe::exchange_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribe.exchange_id)
  return _internal_exchange_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderSubscribe::set_exchange_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribe.exchange_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::mutable_exchange_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSubscribe.exchange_id)
  return _s;
}
inline const ::std::string& MarketByOrderSubscribe::_internal_exchange_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_id_.Get();
}
inline void MarketByOrderSubscribe::_internal_set_exchange_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::_internal_mutable_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.exchange_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderSubscribe::release_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSubscribe.exchange_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.exchange_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderSubscribe::set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.exchange_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_id_.IsDefault()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSubscribe.exchange_id)
}

// string contract_id = 2;
inline void MarketByOrderSubscribe::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MarketByOrderSubscribe::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribe.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderSubscribe::set_contract_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribe.contract_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::mutable_contract_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSubscribe.contract_id)
  return _s;
}
inline const ::std::string& MarketByOrderSubscribe::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void MarketByOrderSubscribe::_internal_set_contract_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.contract_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.contract_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderSubscribe::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSubscribe.contract_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.contract_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderSubscribe::set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.contract_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_id_.IsDefault()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSubscribe.contract_id)
}

// string market_id = 3;
inline void MarketByOrderSubscribe::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& MarketByOrderSubscribe::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribe.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderSubscribe::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribe.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSubscribe.market_id)
  return _s;
}
inline const ::std::string& MarketByOrderSubscribe::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketByOrderSubscribe::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribe::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderSubscribe::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSubscribe.market_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderSubscribe::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSubscribe.market_id)
}

// bool subscribe = 4;
inline void MarketByOrderSubscribe::clear_subscribe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribe_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool MarketByOrderSubscribe::subscribe() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribe.subscribe)
  return _internal_subscribe();
}
inline void MarketByOrderSubscribe::set_subscribe(bool value) {
  _internal_set_subscribe(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribe.subscribe)
}
inline bool MarketByOrderSubscribe::_internal_subscribe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscribe_;
}
inline void MarketByOrderSubscribe::_internal_set_subscribe(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscribe_ = value;
}

// -------------------------------------------------------------------

// MarketByOrderSubscribeReject

// string market_id = 1;
inline void MarketByOrderSubscribeReject::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketByOrderSubscribeReject::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribeReject.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderSubscribeReject::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribeReject.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribeReject::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSubscribeReject.market_id)
  return _s;
}
inline const ::std::string& MarketByOrderSubscribeReject::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketByOrderSubscribeReject::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSubscribeReject::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderSubscribeReject::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSubscribeReject.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderSubscribeReject::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSubscribeReject.market_id)
}

// .google.protobuf.Timestamp time = 2;
inline bool MarketByOrderSubscribeReject::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketByOrderSubscribeReject::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketByOrderSubscribeReject::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribeReject.time)
  return _internal_time();
}
inline void MarketByOrderSubscribeReject::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketByOrderSubscribeReject.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderSubscribeReject::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderSubscribeReject::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSubscribeReject.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderSubscribeReject::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderSubscribeReject::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSubscribeReject.time)
  return _msg;
}
inline void MarketByOrderSubscribeReject::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSubscribeReject.time)
}

// .t4proto.v1.common.MarketMode mode = 3;
inline void MarketByOrderSubscribeReject::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::t4proto::v1::common::MarketMode MarketByOrderSubscribeReject::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSubscribeReject.mode)
  return _internal_mode();
}
inline void MarketByOrderSubscribeReject::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSubscribeReject.mode)
}
inline ::t4proto::v1::common::MarketMode MarketByOrderSubscribeReject::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketByOrderSubscribeReject::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// MarketDetails_LegItem

// string market_id = 1;
inline void MarketDetails_LegItem::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDetails_LegItem::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.LegItem.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails_LegItem::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.LegItem.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails_LegItem::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.LegItem.market_id)
  return _s;
}
inline const ::std::string& MarketDetails_LegItem::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDetails_LegItem::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails_LegItem::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails_LegItem::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.LegItem.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails_LegItem::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.LegItem.market_id)
}

// int32 group = 2;
inline void MarketDetails_LegItem::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MarketDetails_LegItem::group() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.LegItem.group)
  return _internal_group();
}
inline void MarketDetails_LegItem::set_group(::int32_t value) {
  _internal_set_group(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.LegItem.group)
}
inline ::int32_t MarketDetails_LegItem::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_;
}
inline void MarketDetails_LegItem::_internal_set_group(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_ = value;
}

// int32 volume = 3;
inline void MarketDetails_LegItem::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MarketDetails_LegItem::volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.LegItem.volume)
  return _internal_volume();
}
inline void MarketDetails_LegItem::set_volume(::int32_t value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.LegItem.volume)
}
inline ::int32_t MarketDetails_LegItem::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void MarketDetails_LegItem::_internal_set_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// string delta = 4;
inline void MarketDetails_LegItem::clear_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delta_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MarketDetails_LegItem::delta() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.LegItem.delta)
  return _internal_delta();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails_LegItem::set_delta(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.delta_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.LegItem.delta)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails_LegItem::mutable_delta()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_delta();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.LegItem.delta)
  return _s;
}
inline const ::std::string& MarketDetails_LegItem::_internal_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delta_.Get();
}
inline void MarketDetails_LegItem::_internal_set_delta(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.delta_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails_LegItem::_internal_mutable_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.delta_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails_LegItem::release_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.LegItem.delta)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.delta_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.delta_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails_LegItem::set_allocated_delta(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.delta_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delta_.IsDefault()) {
    _impl_.delta_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.LegItem.delta)
}

// .t4proto.v1.common.Price price = 5;
inline bool MarketDetails_LegItem::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDetails_LegItem::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDetails_LegItem::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.LegItem.price)
  return _internal_price();
}
inline void MarketDetails_LegItem::unsafe_arena_set_allocated_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.LegItem.price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails_LegItem::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails_LegItem::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.LegItem.price)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails_LegItem::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails_LegItem::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.LegItem.price)
  return _msg;
}
inline void MarketDetails_LegItem::set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.LegItem.price)
}

// -------------------------------------------------------------------

// MarketDetails

// string market_id = 1;
inline void MarketDetails::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDetails::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.market_id)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDetails::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.market_id)
}

// string exchange_id = 2;
inline void MarketDetails::clear_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MarketDetails::exchange_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.exchange_id)
  return _internal_exchange_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_exchange_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.exchange_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.exchange_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_exchange_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.exchange_id)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_exchange_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_id_.Get();
}
inline void MarketDetails::_internal_set_exchange_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.exchange_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.exchange_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.exchange_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.exchange_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.exchange_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_id_.IsDefault()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.exchange_id)
}

// string contract_id = 3;
inline void MarketDetails::clear_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& MarketDetails::contract_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.contract_id)
  return _internal_contract_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_contract_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.contract_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.contract_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_contract_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_contract_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.contract_id)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_contract_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_id_.Get();
}
inline void MarketDetails::_internal_set_contract_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.contract_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.contract_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_contract_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.contract_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.contract_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_contract_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.contract_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_id_.IsDefault()) {
    _impl_.contract_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.contract_id)
}

// int32 expiry_date = 4;
inline void MarketDetails::clear_expiry_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_date_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline ::int32_t MarketDetails::expiry_date() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.expiry_date)
  return _internal_expiry_date();
}
inline void MarketDetails::set_expiry_date(::int32_t value) {
  _internal_set_expiry_date(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.expiry_date)
}
inline ::int32_t MarketDetails::_internal_expiry_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiry_date_;
}
inline void MarketDetails::_internal_set_expiry_date(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_date_ = value;
}

// .t4proto.v1.common.ContractType contract_type = 5;
inline void MarketDetails::clear_contract_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline ::t4proto::v1::common::ContractType MarketDetails::contract_type() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.contract_type)
  return _internal_contract_type();
}
inline void MarketDetails::set_contract_type(::t4proto::v1::common::ContractType value) {
  _internal_set_contract_type(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.contract_type)
}
inline ::t4proto::v1::common::ContractType MarketDetails::_internal_contract_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::ContractType>(_impl_.contract_type_);
}
inline void MarketDetails::_internal_set_contract_type(::t4proto::v1::common::ContractType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_type_ = value;
}

// int32 decimals = 6;
inline void MarketDetails::clear_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline ::int32_t MarketDetails::decimals() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.decimals)
  return _internal_decimals();
}
inline void MarketDetails::set_decimals(::int32_t value) {
  _internal_set_decimals(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.decimals)
}
inline ::int32_t MarketDetails::_internal_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decimals_;
}
inline void MarketDetails::_internal_set_decimals(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decimals_ = value;
}

// .t4proto.v1.common.Decimal point_value = 7;
inline bool MarketDetails::has_point_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.point_value_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Decimal& MarketDetails::_internal_point_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Decimal* p = _impl_.point_value_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Decimal&>(::t4proto::v1::common::_Decimal_default_instance_);
}
inline const ::t4proto::v1::common::Decimal& MarketDetails::point_value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.point_value)
  return _internal_point_value();
}
inline void MarketDetails::unsafe_arena_set_allocated_point_value(
    ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.point_value_);
  }
  _impl_.point_value_ = reinterpret_cast<::t4proto::v1::common::Decimal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.point_value)
}
inline ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE MarketDetails::release_point_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::t4proto::v1::common::Decimal* released = _impl_.point_value_;
  _impl_.point_value_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_point_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.point_value)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::t4proto::v1::common::Decimal* temp = _impl_.point_value_;
  _impl_.point_value_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Decimal* PROTOBUF_NONNULL MarketDetails::_internal_mutable_point_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.point_value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Decimal>(GetArena());
    _impl_.point_value_ = reinterpret_cast<::t4proto::v1::common::Decimal*>(p);
  }
  return _impl_.point_value_;
}
inline ::t4proto::v1::common::Decimal* PROTOBUF_NONNULL MarketDetails::mutable_point_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::t4proto::v1::common::Decimal* _msg = _internal_mutable_point_value();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.point_value)
  return _msg;
}
inline void MarketDetails::set_allocated_point_value(::t4proto::v1::common::Decimal* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.point_value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.point_value_ = reinterpret_cast<::t4proto::v1::common::Decimal*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.point_value)
}

// .t4proto.v1.common.Price min_price_increment = 8;
inline bool MarketDetails::has_min_price_increment() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_price_increment_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDetails::_internal_min_price_increment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.min_price_increment_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDetails::min_price_increment() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.min_price_increment)
  return _internal_min_price_increment();
}
inline void MarketDetails::unsafe_arena_set_allocated_min_price_increment(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_price_increment_);
  }
  _impl_.min_price_increment_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.min_price_increment)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::release_min_price_increment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::t4proto::v1::common::Price* released = _impl_.min_price_increment_;
  _impl_.min_price_increment_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_min_price_increment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.min_price_increment)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::t4proto::v1::common::Price* temp = _impl_.min_price_increment_;
  _impl_.min_price_increment_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::_internal_mutable_min_price_increment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_price_increment_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.min_price_increment_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.min_price_increment_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::mutable_min_price_increment()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_min_price_increment();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.min_price_increment)
  return _msg;
}
inline void MarketDetails::set_allocated_min_price_increment(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_price_increment_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.min_price_increment_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.min_price_increment)
}

// int32 order_types = 9;
inline void MarketDetails::clear_order_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_types_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t MarketDetails::order_types() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.order_types)
  return _internal_order_types();
}
inline void MarketDetails::set_order_types(::int32_t value) {
  _internal_set_order_types(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.order_types)
}
inline ::int32_t MarketDetails::_internal_order_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_types_;
}
inline void MarketDetails::_internal_set_order_types(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_types_ = value;
}

// .google.protobuf.Timestamp activation_date = 10;
inline bool MarketDetails::has_activation_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.activation_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDetails::_internal_activation_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.activation_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDetails::activation_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.activation_date)
  return _internal_activation_date();
}
inline void MarketDetails::unsafe_arena_set_allocated_activation_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_date_);
  }
  _impl_.activation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.activation_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::release_activation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::google::protobuf::Timestamp* released = _impl_.activation_date_;
  _impl_.activation_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_activation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.activation_date)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::google::protobuf::Timestamp* temp = _impl_.activation_date_;
  _impl_.activation_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::_internal_mutable_activation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.activation_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.activation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.activation_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::mutable_activation_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_activation_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.activation_date)
  return _msg;
}
inline void MarketDetails::set_allocated_activation_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.activation_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.activation_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.activation_date)
}

// .google.protobuf.Timestamp last_trading_date = 11;
inline bool MarketDetails::has_last_trading_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_trading_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDetails::_internal_last_trading_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.last_trading_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDetails::last_trading_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.last_trading_date)
  return _internal_last_trading_date();
}
inline void MarketDetails::unsafe_arena_set_allocated_last_trading_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trading_date_);
  }
  _impl_.last_trading_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.last_trading_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::release_last_trading_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::google::protobuf::Timestamp* released = _impl_.last_trading_date_;
  _impl_.last_trading_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_last_trading_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.last_trading_date)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::google::protobuf::Timestamp* temp = _impl_.last_trading_date_;
  _impl_.last_trading_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::_internal_mutable_last_trading_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_trading_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_trading_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_trading_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::mutable_last_trading_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_trading_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.last_trading_date)
  return _msg;
}
inline void MarketDetails::set_allocated_last_trading_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trading_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.last_trading_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.last_trading_date)
}

// .google.protobuf.Timestamp last_client_update_time = 12;
inline bool MarketDetails::has_last_client_update_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_client_update_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDetails::_internal_last_client_update_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.last_client_update_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDetails::last_client_update_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.last_client_update_time)
  return _internal_last_client_update_time();
}
inline void MarketDetails::unsafe_arena_set_allocated_last_client_update_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_client_update_time_);
  }
  _impl_.last_client_update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.last_client_update_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::release_last_client_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::google::protobuf::Timestamp* released = _impl_.last_client_update_time_;
  _impl_.last_client_update_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_last_client_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.last_client_update_time)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::google::protobuf::Timestamp* temp = _impl_.last_client_update_time_;
  _impl_.last_client_update_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::_internal_mutable_last_client_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_client_update_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_client_update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_client_update_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDetails::mutable_last_client_update_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_client_update_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.last_client_update_time)
  return _msg;
}
inline void MarketDetails::set_allocated_last_client_update_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_client_update_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.last_client_update_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.last_client_update_time)
}

// int64 delist_date = 13;
inline void MarketDetails::clear_delist_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delist_date_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int64_t MarketDetails::delist_date() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.delist_date)
  return _internal_delist_date();
}
inline void MarketDetails::set_delist_date(::int64_t value) {
  _internal_set_delist_date(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.delist_date)
}
inline ::int64_t MarketDetails::_internal_delist_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delist_date_;
}
inline void MarketDetails::_internal_set_delist_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delist_date_ = value;
}

// int64 exchange_delist_date = 14;
inline void MarketDetails::clear_exchange_delist_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_delist_date_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline ::int64_t MarketDetails::exchange_delist_date() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.exchange_delist_date)
  return _internal_exchange_delist_date();
}
inline void MarketDetails::set_exchange_delist_date(::int64_t value) {
  _internal_set_exchange_delist_date(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.exchange_delist_date)
}
inline ::int64_t MarketDetails::_internal_exchange_delist_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_delist_date_;
}
inline void MarketDetails::_internal_set_exchange_delist_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_delist_date_ = value;
}

// string market_ref = 15;
inline void MarketDetails::clear_market_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_ref_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& MarketDetails::market_ref() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.market_ref)
  return _internal_market_ref();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_market_ref(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.market_ref_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.market_ref)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_market_ref()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_ref();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.market_ref)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_market_ref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_ref_.Get();
}
inline void MarketDetails::_internal_set_market_ref(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.market_ref_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_market_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.market_ref_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_market_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.market_ref)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.market_ref_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_ref_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_market_ref(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.market_ref_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_ref_.IsDefault()) {
    _impl_.market_ref_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.market_ref)
}

// string group = 16;
inline void MarketDetails::clear_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& MarketDetails::group() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_group(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.group_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.group)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_group()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.group)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_.Get();
}
inline void MarketDetails::_internal_set_group(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.group_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.group_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.group)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.group_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.group_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_group(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.group_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.group_.IsDefault()) {
    _impl_.group_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.group)
}

// repeated .t4proto.v1.market.MarketDetails.LegItem legs = 17;
inline int MarketDetails::_internal_legs_size() const {
  return _internal_legs().size();
}
inline int MarketDetails::legs_size() const {
  return _internal_legs_size();
}
inline void MarketDetails::clear_legs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.legs_.Clear();
}
inline ::t4proto::v1::market::MarketDetails_LegItem* PROTOBUF_NONNULL MarketDetails::mutable_legs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.legs)
  return _internal_mutable_legs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>* PROTOBUF_NONNULL MarketDetails::mutable_legs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDetails.legs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_legs();
}
inline const ::t4proto::v1::market::MarketDetails_LegItem& MarketDetails::legs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.legs)
  return _internal_legs().Get(index);
}
inline ::t4proto::v1::market::MarketDetails_LegItem* PROTOBUF_NONNULL MarketDetails::add_legs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketDetails_LegItem* _add = _internal_mutable_legs()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDetails.legs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>& MarketDetails::legs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDetails.legs)
  return _internal_legs();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>&
MarketDetails::_internal_legs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.legs_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDetails_LegItem>* PROTOBUF_NONNULL
MarketDetails::_internal_mutable_legs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.legs_;
}

// string details = 18;
inline void MarketDetails::clear_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.details_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& MarketDetails::details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.details)
  return _internal_details();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_details(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.details_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.details)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_details();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.details)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.details_.Get();
}
inline void MarketDetails::_internal_set_details(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.details_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.details_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.details)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.details_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.details_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_details(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.details_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.details_.IsDefault()) {
    _impl_.details_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.details)
}

// .t4proto.v1.common.StrategyType strategy_type = 19;
inline void MarketDetails::clear_strategy_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline ::t4proto::v1::common::StrategyType MarketDetails::strategy_type() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.strategy_type)
  return _internal_strategy_type();
}
inline void MarketDetails::set_strategy_type(::t4proto::v1::common::StrategyType value) {
  _internal_set_strategy_type(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.strategy_type)
}
inline ::t4proto::v1::common::StrategyType MarketDetails::_internal_strategy_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::StrategyType>(_impl_.strategy_type_);
}
inline void MarketDetails::_internal_set_strategy_type(::t4proto::v1::common::StrategyType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_type_ = value;
}

// string price_code = 20;
inline void MarketDetails::clear_price_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::std::string& MarketDetails::price_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.price_code)
  return _internal_price_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_price_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.price_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.price_code)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_price_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_price_code();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.price_code)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_price_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_code_.Get();
}
inline void MarketDetails::_internal_set_price_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.price_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_price_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.price_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_price_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.price_code)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.price_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.price_code_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_price_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.price_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.price_code_.IsDefault()) {
    _impl_.price_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.price_code)
}

// int32 real_decimals = 21;
inline void MarketDetails::clear_real_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.real_decimals_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline ::int32_t MarketDetails::real_decimals() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.real_decimals)
  return _internal_real_decimals();
}
inline void MarketDetails::set_real_decimals(::int32_t value) {
  _internal_set_real_decimals(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.real_decimals)
}
inline ::int32_t MarketDetails::_internal_real_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.real_decimals_;
}
inline void MarketDetails::_internal_set_real_decimals(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.real_decimals_ = value;
}

// int32 display_decimals = 22;
inline void MarketDetails::clear_display_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_decimals_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline ::int32_t MarketDetails::display_decimals() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.display_decimals)
  return _internal_display_decimals();
}
inline void MarketDetails::set_display_decimals(::int32_t value) {
  _internal_set_display_decimals(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.display_decimals)
}
inline ::int32_t MarketDetails::_internal_display_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.display_decimals_;
}
inline void MarketDetails::_internal_set_display_decimals(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.display_decimals_ = value;
}

// int32 clearing_decimals = 23;
inline void MarketDetails::clear_clearing_decimals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clearing_decimals_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline ::int32_t MarketDetails::clearing_decimals() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.clearing_decimals)
  return _internal_clearing_decimals();
}
inline void MarketDetails::set_clearing_decimals(::int32_t value) {
  _internal_set_clearing_decimals(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.clearing_decimals)
}
inline ::int32_t MarketDetails::_internal_clearing_decimals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clearing_decimals_;
}
inline void MarketDetails::_internal_set_clearing_decimals(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clearing_decimals_ = value;
}

// optional .t4proto.v1.common.Price min_cab_price = 24;
inline bool MarketDetails::has_min_cab_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_cab_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDetails::_internal_min_cab_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.min_cab_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDetails::min_cab_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.min_cab_price)
  return _internal_min_cab_price();
}
inline void MarketDetails::unsafe_arena_set_allocated_min_cab_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_cab_price_);
  }
  _impl_.min_cab_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.min_cab_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::release_min_cab_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::t4proto::v1::common::Price* released = _impl_.min_cab_price_;
  _impl_.min_cab_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_min_cab_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.min_cab_price)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::t4proto::v1::common::Price* temp = _impl_.min_cab_price_;
  _impl_.min_cab_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::_internal_mutable_min_cab_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_cab_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.min_cab_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.min_cab_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::mutable_min_cab_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_min_cab_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.min_cab_price)
  return _msg;
}
inline void MarketDetails::set_allocated_min_cab_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_cab_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.min_cab_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.min_cab_price)
}

// optional .t4proto.v1.common.Price strike_price = 25;
inline bool MarketDetails::has_strike_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.strike_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDetails::_internal_strike_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.strike_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDetails::strike_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.strike_price)
  return _internal_strike_price();
}
inline void MarketDetails::unsafe_arena_set_allocated_strike_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.strike_price_);
  }
  _impl_.strike_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDetails.strike_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::release_strike_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::t4proto::v1::common::Price* released = _impl_.strike_price_;
  _impl_.strike_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDetails::unsafe_arena_release_strike_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.strike_price)

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::t4proto::v1::common::Price* temp = _impl_.strike_price_;
  _impl_.strike_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::_internal_mutable_strike_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.strike_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.strike_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.strike_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDetails::mutable_strike_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00008000u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_strike_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.strike_price)
  return _msg;
}
inline void MarketDetails::set_allocated_strike_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.strike_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }

  _impl_.strike_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.strike_price)
}

// int32 volume_increment = 26;
inline void MarketDetails::clear_volume_increment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_increment_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline ::int32_t MarketDetails::volume_increment() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.volume_increment)
  return _internal_volume_increment();
}
inline void MarketDetails::set_volume_increment(::int32_t value) {
  _internal_set_volume_increment(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.volume_increment)
}
inline ::int32_t MarketDetails::_internal_volume_increment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_increment_;
}
inline void MarketDetails::_internal_set_volume_increment(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_increment_ = value;
}

// double strategy_ratio = 27;
inline void MarketDetails::clear_strategy_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_ratio_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline double MarketDetails::strategy_ratio() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.strategy_ratio)
  return _internal_strategy_ratio();
}
inline void MarketDetails::set_strategy_ratio(double value) {
  _internal_set_strategy_ratio(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.strategy_ratio)
}
inline double MarketDetails::_internal_strategy_ratio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strategy_ratio_;
}
inline void MarketDetails::_internal_set_strategy_ratio(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strategy_ratio_ = value;
}

// bool disabled = 28;
inline void MarketDetails::clear_disabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = false;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline bool MarketDetails::disabled() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.disabled)
  return _internal_disabled();
}
inline void MarketDetails::set_disabled(bool value) {
  _internal_set_disabled(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.disabled)
}
inline bool MarketDetails::_internal_disabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disabled_;
}
inline void MarketDetails::_internal_set_disabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = value;
}

// string underlying_market_id = 29;
inline void MarketDetails::clear_underlying_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.underlying_market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const ::std::string& MarketDetails::underlying_market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.underlying_market_id)
  return _internal_underlying_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_underlying_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.underlying_market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.underlying_market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_underlying_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_underlying_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.underlying_market_id)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_underlying_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.underlying_market_id_.Get();
}
inline void MarketDetails::_internal_set_underlying_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.underlying_market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_underlying_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.underlying_market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_underlying_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.underlying_market_id)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.underlying_market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.underlying_market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_underlying_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.underlying_market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.underlying_market_id_.IsDefault()) {
    _impl_.underlying_market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.underlying_market_id)
}

// string vtt = 30;
inline void MarketDetails::clear_vtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vtt_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline const ::std::string& MarketDetails::vtt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.vtt)
  return _internal_vtt();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDetails::set_vtt(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.vtt_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.vtt)
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::mutable_vtt()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_vtt();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDetails.vtt)
  return _s;
}
inline const ::std::string& MarketDetails::_internal_vtt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vtt_.Get();
}
inline void MarketDetails::_internal_set_vtt(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.vtt_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDetails::_internal_mutable_vtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000100u;
  return _impl_.vtt_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDetails::release_vtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDetails.vtt)
  if ((_impl_._has_bits_[0] & 0x00000100u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000100u;
  auto* released = _impl_.vtt_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.vtt_.Set("", GetArena());
  }
  return released;
}
inline void MarketDetails::set_allocated_vtt(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  _impl_.vtt_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vtt_.IsDefault()) {
    _impl_.vtt_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDetails.vtt)
}

// double maint_intra_margin = 31;
inline void MarketDetails::clear_maint_intra_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_intra_margin_ = 0;
  _impl_._has_bits_[0] &= ~0x20000000u;
}
inline double MarketDetails::maint_intra_margin() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.maint_intra_margin)
  return _internal_maint_intra_margin();
}
inline void MarketDetails::set_maint_intra_margin(double value) {
  _internal_set_maint_intra_margin(value);
  _impl_._has_bits_[0] |= 0x20000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.maint_intra_margin)
}
inline double MarketDetails::_internal_maint_intra_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maint_intra_margin_;
}
inline void MarketDetails::_internal_set_maint_intra_margin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_intra_margin_ = value;
}

// double maint_margin = 32;
inline void MarketDetails::clear_maint_margin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_margin_ = 0;
  _impl_._has_bits_[0] &= ~0x40000000u;
}
inline double MarketDetails::maint_margin() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.maint_margin)
  return _internal_maint_margin();
}
inline void MarketDetails::set_maint_margin(double value) {
  _internal_set_maint_margin(value);
  _impl_._has_bits_[0] |= 0x40000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.maint_margin)
}
inline double MarketDetails::_internal_maint_margin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maint_margin_;
}
inline void MarketDetails::_internal_set_maint_margin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_margin_ = value;
}

// double maint_vol_scan = 33;
inline void MarketDetails::clear_maint_vol_scan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_vol_scan_ = 0;
  _impl_._has_bits_[0] &= ~0x80000000u;
}
inline double MarketDetails::maint_vol_scan() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDetails.maint_vol_scan)
  return _internal_maint_vol_scan();
}
inline void MarketDetails::set_maint_vol_scan(double value) {
  _internal_set_maint_vol_scan(value);
  _impl_._has_bits_[0] |= 0x80000000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDetails.maint_vol_scan)
}
inline double MarketDetails::_internal_maint_vol_scan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maint_vol_scan_;
}
inline void MarketDetails::_internal_set_maint_vol_scan(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maint_vol_scan_ = value;
}

// -------------------------------------------------------------------

// MarketDepth_DepthLine

// .t4proto.v1.common.Price price = 1;
inline bool MarketDepth_DepthLine::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDepth_DepthLine::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDepth_DepthLine::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.DepthLine.price)
  return _internal_price();
}
inline void MarketDepth_DepthLine::unsafe_arena_set_allocated_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.DepthLine.price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_DepthLine::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_DepthLine::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.DepthLine.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_DepthLine::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_DepthLine::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.DepthLine.price)
  return _msg;
}
inline void MarketDepth_DepthLine::set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.DepthLine.price)
}

// int32 volume = 2;
inline void MarketDepth_DepthLine::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t MarketDepth_DepthLine::volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.DepthLine.volume)
  return _internal_volume();
}
inline void MarketDepth_DepthLine::set_volume(::int32_t value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.DepthLine.volume)
}
inline ::int32_t MarketDepth_DepthLine::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void MarketDepth_DepthLine::_internal_set_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// int32 num_orders = 3;
inline void MarketDepth_DepthLine::clear_num_orders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_orders_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t MarketDepth_DepthLine::num_orders() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.DepthLine.num_orders)
  return _internal_num_orders();
}
inline void MarketDepth_DepthLine::set_num_orders(::int32_t value) {
  _internal_set_num_orders(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.DepthLine.num_orders)
}
inline ::int32_t MarketDepth_DepthLine::_internal_num_orders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_orders_;
}
inline void MarketDepth_DepthLine::_internal_set_num_orders(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_orders_ = value;
}

// -------------------------------------------------------------------

// MarketDepth_TradeData

// int32 total_traded_volume = 1;
inline void MarketDepth_TradeData::clear_total_traded_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_traded_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MarketDepth_TradeData::total_traded_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.total_traded_volume)
  return _internal_total_traded_volume();
}
inline void MarketDepth_TradeData::set_total_traded_volume(::int32_t value) {
  _internal_set_total_traded_volume(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.total_traded_volume)
}
inline ::int32_t MarketDepth_TradeData::_internal_total_traded_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_traded_volume_;
}
inline void MarketDepth_TradeData::_internal_set_total_traded_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_traded_volume_ = value;
}

// int32 total_trade_count = 2;
inline void MarketDepth_TradeData::clear_total_trade_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_trade_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MarketDepth_TradeData::total_trade_count() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.total_trade_count)
  return _internal_total_trade_count();
}
inline void MarketDepth_TradeData::set_total_trade_count(::int32_t value) {
  _internal_set_total_trade_count(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.total_trade_count)
}
inline ::int32_t MarketDepth_TradeData::_internal_total_trade_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_trade_count_;
}
inline void MarketDepth_TradeData::_internal_set_total_trade_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_trade_count_ = value;
}

// .t4proto.v1.common.Price last_trade_price = 3;
inline bool MarketDepth_TradeData::has_last_trade_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_trade_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDepth_TradeData::_internal_last_trade_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.last_trade_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDepth_TradeData::last_trade_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_price)
  return _internal_last_trade_price();
}
inline void MarketDepth_TradeData::unsafe_arena_set_allocated_last_trade_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_price_);
  }
  _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.TradeData.last_trade_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_TradeData::release_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* released = _impl_.last_trade_price_;
  _impl_.last_trade_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_TradeData::unsafe_arena_release_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.TradeData.last_trade_price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* temp = _impl_.last_trade_price_;
  _impl_.last_trade_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_TradeData::_internal_mutable_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_trade_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.last_trade_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_TradeData::mutable_last_trade_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_last_trade_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.TradeData.last_trade_price)
  return _msg;
}
inline void MarketDepth_TradeData::set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.TradeData.last_trade_price)
}

// int32 last_trade_volume = 4;
inline void MarketDepth_TradeData::clear_last_trade_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MarketDepth_TradeData::last_trade_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_volume)
  return _internal_last_trade_volume();
}
inline void MarketDepth_TradeData::set_last_trade_volume(::int32_t value) {
  _internal_set_last_trade_volume(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.last_trade_volume)
}
inline ::int32_t MarketDepth_TradeData::_internal_last_trade_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_trade_volume_;
}
inline void MarketDepth_TradeData::_internal_set_last_trade_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_volume_ = value;
}

// int32 last_trade_total_volume = 5;
inline void MarketDepth_TradeData::clear_last_trade_total_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_total_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t MarketDepth_TradeData::last_trade_total_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_total_volume)
  return _internal_last_trade_total_volume();
}
inline void MarketDepth_TradeData::set_last_trade_total_volume(::int32_t value) {
  _internal_set_last_trade_total_volume(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.last_trade_total_volume)
}
inline ::int32_t MarketDepth_TradeData::_internal_last_trade_total_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_trade_total_volume_;
}
inline void MarketDepth_TradeData::_internal_set_last_trade_total_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_total_volume_ = value;
}

// .t4proto.v1.common.Price last_trade_spd_price = 6;
inline bool MarketDepth_TradeData::has_last_trade_spd_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_trade_spd_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDepth_TradeData::_internal_last_trade_spd_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.last_trade_spd_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDepth_TradeData::last_trade_spd_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_price)
  return _internal_last_trade_spd_price();
}
inline void MarketDepth_TradeData::unsafe_arena_set_allocated_last_trade_spd_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_spd_price_);
  }
  _impl_.last_trade_spd_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_TradeData::release_last_trade_spd_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* released = _impl_.last_trade_spd_price_;
  _impl_.last_trade_spd_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepth_TradeData::unsafe_arena_release_last_trade_spd_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* temp = _impl_.last_trade_spd_price_;
  _impl_.last_trade_spd_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_TradeData::_internal_mutable_last_trade_spd_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_trade_spd_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.last_trade_spd_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.last_trade_spd_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepth_TradeData::mutable_last_trade_spd_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_last_trade_spd_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_price)
  return _msg;
}
inline void MarketDepth_TradeData::set_allocated_last_trade_spd_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_spd_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.last_trade_spd_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_price)
}

// int32 last_trade_spd_volume = 7;
inline void MarketDepth_TradeData::clear_last_trade_spd_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_spd_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t MarketDepth_TradeData::last_trade_spd_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_volume)
  return _internal_last_trade_spd_volume();
}
inline void MarketDepth_TradeData::set_last_trade_spd_volume(::int32_t value) {
  _internal_set_last_trade_spd_volume(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_volume)
}
inline ::int32_t MarketDepth_TradeData::_internal_last_trade_spd_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_trade_spd_volume_;
}
inline void MarketDepth_TradeData::_internal_set_last_trade_spd_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_spd_volume_ = value;
}

// int32 last_trade_spd_total_volume = 8;
inline void MarketDepth_TradeData::clear_last_trade_spd_total_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_spd_total_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t MarketDepth_TradeData::last_trade_spd_total_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_total_volume)
  return _internal_last_trade_spd_total_volume();
}
inline void MarketDepth_TradeData::set_last_trade_spd_total_volume(::int32_t value) {
  _internal_set_last_trade_spd_total_volume(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.last_trade_spd_total_volume)
}
inline ::int32_t MarketDepth_TradeData::_internal_last_trade_spd_total_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_trade_spd_total_volume_;
}
inline void MarketDepth_TradeData::_internal_set_last_trade_spd_total_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_spd_total_volume_ = value;
}

// bool due_to_spread = 9;
inline void MarketDepth_TradeData::clear_due_to_spread() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_spread_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool MarketDepth_TradeData::due_to_spread() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.due_to_spread)
  return _internal_due_to_spread();
}
inline void MarketDepth_TradeData::set_due_to_spread(bool value) {
  _internal_set_due_to_spread(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.due_to_spread)
}
inline bool MarketDepth_TradeData::_internal_due_to_spread() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_to_spread_;
}
inline void MarketDepth_TradeData::_internal_set_due_to_spread(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_spread_ = value;
}

// .t4proto.v1.common.BidOffer at_bid_or_offer = 10;
inline void MarketDepth_TradeData::clear_at_bid_or_offer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.at_bid_or_offer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::t4proto::v1::common::BidOffer MarketDepth_TradeData::at_bid_or_offer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.at_bid_or_offer)
  return _internal_at_bid_or_offer();
}
inline void MarketDepth_TradeData::set_at_bid_or_offer(::t4proto::v1::common::BidOffer value) {
  _internal_set_at_bid_or_offer(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.TradeData.at_bid_or_offer)
}
inline ::t4proto::v1::common::BidOffer MarketDepth_TradeData::_internal_at_bid_or_offer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::BidOffer>(_impl_.at_bid_or_offer_);
}
inline void MarketDepth_TradeData::_internal_set_at_bid_or_offer(::t4proto::v1::common::BidOffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.at_bid_or_offer_ = value;
}

// .google.protobuf.Timestamp time = 11;
inline bool MarketDepth_TradeData::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDepth_TradeData::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDepth_TradeData::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.TradeData.time)
  return _internal_time();
}
inline void MarketDepth_TradeData::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.TradeData.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepth_TradeData::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepth_TradeData::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.TradeData.time)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepth_TradeData::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepth_TradeData::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.TradeData.time)
  return _msg;
}
inline void MarketDepth_TradeData::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.TradeData.time)
}

// -------------------------------------------------------------------

// MarketDepth

// string market_id = 1;
inline void MarketDepth::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDepth::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepth::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepth::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.market_id)
  return _s;
}
inline const ::std::string& MarketDepth::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDepth::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepth::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepth::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepth::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.market_id)
}

// .t4proto.v1.common.DepthLevels depth_levels = 2;
inline void MarketDepth::clear_depth_levels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_levels_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::t4proto::v1::common::DepthLevels MarketDepth::depth_levels() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.depth_levels)
  return _internal_depth_levels();
}
inline void MarketDepth::set_depth_levels(::t4proto::v1::common::DepthLevels value) {
  _internal_set_depth_levels(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.depth_levels)
}
inline ::t4proto::v1::common::DepthLevels MarketDepth::_internal_depth_levels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::DepthLevels>(_impl_.depth_levels_);
}
inline void MarketDepth::_internal_set_depth_levels(::t4proto::v1::common::DepthLevels value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_levels_ = value;
}

// .t4proto.v1.common.DepthBuffer depth_buffer = 3;
inline void MarketDepth::clear_depth_buffer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_buffer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::t4proto::v1::common::DepthBuffer MarketDepth::depth_buffer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.depth_buffer)
  return _internal_depth_buffer();
}
inline void MarketDepth::set_depth_buffer(::t4proto::v1::common::DepthBuffer value) {
  _internal_set_depth_buffer(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.depth_buffer)
}
inline ::t4proto::v1::common::DepthBuffer MarketDepth::_internal_depth_buffer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::DepthBuffer>(_impl_.depth_buffer_);
}
inline void MarketDepth::_internal_set_depth_buffer(::t4proto::v1::common::DepthBuffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depth_buffer_ = value;
}

// .google.protobuf.Timestamp time = 4;
inline bool MarketDepth::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDepth::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDepth::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.time)
  return _internal_time();
}
inline void MarketDepth::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepth::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepth::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepth::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepth::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.time)
  return _msg;
}
inline void MarketDepth::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.time)
}

// bool delayed = 5;
inline void MarketDepth::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool MarketDepth::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.delayed)
  return _internal_delayed();
}
inline void MarketDepth::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.delayed)
}
inline bool MarketDepth::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketDepth::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// repeated .t4proto.v1.market.MarketDepth.DepthLine bids = 6;
inline int MarketDepth::_internal_bids_size() const {
  return _internal_bids().size();
}
inline int MarketDepth::bids_size() const {
  return _internal_bids_size();
}
inline void MarketDepth::clear_bids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bids_.Clear();
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::mutable_bids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.bids)
  return _internal_mutable_bids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL MarketDepth::mutable_bids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDepth.bids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bids();
}
inline const ::t4proto::v1::market::MarketDepth_DepthLine& MarketDepth::bids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.bids)
  return _internal_bids().Get(index);
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::add_bids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketDepth_DepthLine* _add = _internal_mutable_bids()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDepth.bids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& MarketDepth::bids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDepth.bids)
  return _internal_bids();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>&
MarketDepth::_internal_bids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bids_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL
MarketDepth::_internal_mutable_bids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bids_;
}

// repeated .t4proto.v1.market.MarketDepth.DepthLine offers = 7;
inline int MarketDepth::_internal_offers_size() const {
  return _internal_offers().size();
}
inline int MarketDepth::offers_size() const {
  return _internal_offers_size();
}
inline void MarketDepth::clear_offers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offers_.Clear();
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::mutable_offers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.offers)
  return _internal_mutable_offers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL MarketDepth::mutable_offers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDepth.offers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_offers();
}
inline const ::t4proto::v1::market::MarketDepth_DepthLine& MarketDepth::offers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.offers)
  return _internal_offers().Get(index);
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::add_offers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketDepth_DepthLine* _add = _internal_mutable_offers()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDepth.offers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& MarketDepth::offers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDepth.offers)
  return _internal_offers();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>&
MarketDepth::_internal_offers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offers_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL
MarketDepth::_internal_mutable_offers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.offers_;
}

// repeated .t4proto.v1.market.MarketDepth.DepthLine implied_bids = 8;
inline int MarketDepth::_internal_implied_bids_size() const {
  return _internal_implied_bids().size();
}
inline int MarketDepth::implied_bids_size() const {
  return _internal_implied_bids_size();
}
inline void MarketDepth::clear_implied_bids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.implied_bids_.Clear();
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::mutable_implied_bids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.implied_bids)
  return _internal_mutable_implied_bids()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL MarketDepth::mutable_implied_bids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDepth.implied_bids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_implied_bids();
}
inline const ::t4proto::v1::market::MarketDepth_DepthLine& MarketDepth::implied_bids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.implied_bids)
  return _internal_implied_bids().Get(index);
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::add_implied_bids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketDepth_DepthLine* _add = _internal_mutable_implied_bids()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDepth.implied_bids)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& MarketDepth::implied_bids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDepth.implied_bids)
  return _internal_implied_bids();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>&
MarketDepth::_internal_implied_bids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.implied_bids_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL
MarketDepth::_internal_mutable_implied_bids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.implied_bids_;
}

// repeated .t4proto.v1.market.MarketDepth.DepthLine implied_offers = 9;
inline int MarketDepth::_internal_implied_offers_size() const {
  return _internal_implied_offers().size();
}
inline int MarketDepth::implied_offers_size() const {
  return _internal_implied_offers_size();
}
inline void MarketDepth::clear_implied_offers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.implied_offers_.Clear();
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::mutable_implied_offers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.implied_offers)
  return _internal_mutable_implied_offers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL MarketDepth::mutable_implied_offers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDepth.implied_offers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_implied_offers();
}
inline const ::t4proto::v1::market::MarketDepth_DepthLine& MarketDepth::implied_offers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.implied_offers)
  return _internal_implied_offers().Get(index);
}
inline ::t4proto::v1::market::MarketDepth_DepthLine* PROTOBUF_NONNULL MarketDepth::add_implied_offers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketDepth_DepthLine* _add = _internal_mutable_implied_offers()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDepth.implied_offers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>& MarketDepth::implied_offers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDepth.implied_offers)
  return _internal_implied_offers();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>&
MarketDepth::_internal_implied_offers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.implied_offers_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketDepth_DepthLine>* PROTOBUF_NONNULL
MarketDepth::_internal_mutable_implied_offers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.implied_offers_;
}

// .t4proto.v1.common.MarketMode mode = 10;
inline void MarketDepth::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::t4proto::v1::common::MarketMode MarketDepth::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.mode)
  return _internal_mode();
}
inline void MarketDepth::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.mode)
}
inline ::t4proto::v1::common::MarketMode MarketDepth::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketDepth::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// .t4proto.v1.common.MarketFlags2 flags = 11;
inline void MarketDepth::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::t4proto::v1::common::MarketFlags2 MarketDepth::flags() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.flags)
  return _internal_flags();
}
inline void MarketDepth::set_flags(::t4proto::v1::common::MarketFlags2 value) {
  _internal_set_flags(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepth.flags)
}
inline ::t4proto::v1::common::MarketFlags2 MarketDepth::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketFlags2>(_impl_.flags_);
}
inline void MarketDepth::_internal_set_flags(::t4proto::v1::common::MarketFlags2 value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// .t4proto.v1.market.MarketDepth.TradeData trade_data = 12;
inline bool MarketDepth::has_trade_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.trade_data_ != nullptr);
  return value;
}
inline void MarketDepth::clear_trade_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trade_data_ != nullptr) _impl_.trade_data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::t4proto::v1::market::MarketDepth_TradeData& MarketDepth::_internal_trade_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::market::MarketDepth_TradeData* p = _impl_.trade_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::market::MarketDepth_TradeData&>(::t4proto::v1::market::_MarketDepth_TradeData_default_instance_);
}
inline const ::t4proto::v1::market::MarketDepth_TradeData& MarketDepth::trade_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepth.trade_data)
  return _internal_trade_data();
}
inline void MarketDepth::unsafe_arena_set_allocated_trade_data(
    ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trade_data_);
  }
  _impl_.trade_data_ = reinterpret_cast<::t4proto::v1::market::MarketDepth_TradeData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepth.trade_data)
}
inline ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE MarketDepth::release_trade_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::market::MarketDepth_TradeData* released = _impl_.trade_data_;
  _impl_.trade_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE MarketDepth::unsafe_arena_release_trade_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepth.trade_data)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::market::MarketDepth_TradeData* temp = _impl_.trade_data_;
  _impl_.trade_data_ = nullptr;
  return temp;
}
inline ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NONNULL MarketDepth::_internal_mutable_trade_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.trade_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketDepth_TradeData>(GetArena());
    _impl_.trade_data_ = reinterpret_cast<::t4proto::v1::market::MarketDepth_TradeData*>(p);
  }
  return _impl_.trade_data_;
}
inline ::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NONNULL MarketDepth::mutable_trade_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::t4proto::v1::market::MarketDepth_TradeData* _msg = _internal_mutable_trade_data();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepth.trade_data)
  return _msg;
}
inline void MarketDepth::set_allocated_trade_data(::t4proto::v1::market::MarketDepth_TradeData* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.trade_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.trade_data_ = reinterpret_cast<::t4proto::v1::market::MarketDepth_TradeData*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepth.trade_data)
}

// -------------------------------------------------------------------

// MarketDepthTrade

// string market_id = 1;
inline void MarketDepthTrade::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketDepthTrade::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketDepthTrade::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthTrade::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthTrade.market_id)
  return _s;
}
inline const ::std::string& MarketDepthTrade::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketDepthTrade::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketDepthTrade::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketDepthTrade::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthTrade.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketDepthTrade::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthTrade.market_id)
}

// .google.protobuf.Timestamp time = 2;
inline bool MarketDepthTrade::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketDepthTrade::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketDepthTrade::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.time)
  return _internal_time();
}
inline void MarketDepthTrade::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepthTrade.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepthTrade::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketDepthTrade::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthTrade.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepthTrade::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketDepthTrade::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthTrade.time)
  return _msg;
}
inline void MarketDepthTrade::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthTrade.time)
}

// int32 total_traded_volume = 3;
inline void MarketDepthTrade::clear_total_traded_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_traded_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MarketDepthTrade::total_traded_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.total_traded_volume)
  return _internal_total_traded_volume();
}
inline void MarketDepthTrade::set_total_traded_volume(::int32_t value) {
  _internal_set_total_traded_volume(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.total_traded_volume)
}
inline ::int32_t MarketDepthTrade::_internal_total_traded_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_traded_volume_;
}
inline void MarketDepthTrade::_internal_set_total_traded_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_traded_volume_ = value;
}

// int32 last_trade_volume = 4;
inline void MarketDepthTrade::clear_last_trade_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t MarketDepthTrade::last_trade_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.last_trade_volume)
  return _internal_last_trade_volume();
}
inline void MarketDepthTrade::set_last_trade_volume(::int32_t value) {
  _internal_set_last_trade_volume(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.last_trade_volume)
}
inline ::int32_t MarketDepthTrade::_internal_last_trade_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_trade_volume_;
}
inline void MarketDepthTrade::_internal_set_last_trade_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_trade_volume_ = value;
}

// bool due_to_spread = 5;
inline void MarketDepthTrade::clear_due_to_spread() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_spread_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool MarketDepthTrade::due_to_spread() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.due_to_spread)
  return _internal_due_to_spread();
}
inline void MarketDepthTrade::set_due_to_spread(bool value) {
  _internal_set_due_to_spread(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.due_to_spread)
}
inline bool MarketDepthTrade::_internal_due_to_spread() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_to_spread_;
}
inline void MarketDepthTrade::_internal_set_due_to_spread(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_spread_ = value;
}

// .t4proto.v1.common.BidOffer at_bid_or_offer = 6;
inline void MarketDepthTrade::clear_at_bid_or_offer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.at_bid_or_offer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::t4proto::v1::common::BidOffer MarketDepthTrade::at_bid_or_offer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.at_bid_or_offer)
  return _internal_at_bid_or_offer();
}
inline void MarketDepthTrade::set_at_bid_or_offer(::t4proto::v1::common::BidOffer value) {
  _internal_set_at_bid_or_offer(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.at_bid_or_offer)
}
inline ::t4proto::v1::common::BidOffer MarketDepthTrade::_internal_at_bid_or_offer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::BidOffer>(_impl_.at_bid_or_offer_);
}
inline void MarketDepthTrade::_internal_set_at_bid_or_offer(::t4proto::v1::common::BidOffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.at_bid_or_offer_ = value;
}

// bool delayed = 7;
inline void MarketDepthTrade::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool MarketDepthTrade::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.delayed)
  return _internal_delayed();
}
inline void MarketDepthTrade::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.delayed)
}
inline bool MarketDepthTrade::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketDepthTrade::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// repeated int32 order_volumes = 8;
inline int MarketDepthTrade::_internal_order_volumes_size() const {
  return _internal_order_volumes().size();
}
inline int MarketDepthTrade::order_volumes_size() const {
  return _internal_order_volumes_size();
}
inline void MarketDepthTrade::clear_order_volumes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_volumes_.Clear();
}
inline ::int32_t MarketDepthTrade::order_volumes(int index) const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.order_volumes)
  return _internal_order_volumes().Get(index);
}
inline void MarketDepthTrade::set_order_volumes(int index, ::int32_t value) {
  _internal_mutable_order_volumes()->Set(index, value);
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.order_volumes)
}
inline void MarketDepthTrade::add_order_volumes(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_order_volumes()->Add(value);
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketDepthTrade.order_volumes)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& MarketDepthTrade::order_volumes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketDepthTrade.order_volumes)
  return _internal_order_volumes();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL MarketDepthTrade::mutable_order_volumes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketDepthTrade.order_volumes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order_volumes();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
MarketDepthTrade::_internal_order_volumes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_volumes_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
MarketDepthTrade::_internal_mutable_order_volumes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_volumes_;
}

// int32 total_trade_count = 9;
inline void MarketDepthTrade::clear_total_trade_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_trade_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t MarketDepthTrade::total_trade_count() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.total_trade_count)
  return _internal_total_trade_count();
}
inline void MarketDepthTrade::set_total_trade_count(::int32_t value) {
  _internal_set_total_trade_count(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.total_trade_count)
}
inline ::int32_t MarketDepthTrade::_internal_total_trade_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_trade_count_;
}
inline void MarketDepthTrade::_internal_set_total_trade_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_trade_count_ = value;
}

// .t4proto.v1.common.Price last_trade_price = 10;
inline bool MarketDepthTrade::has_last_trade_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_trade_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketDepthTrade::_internal_last_trade_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.last_trade_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketDepthTrade::last_trade_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.last_trade_price)
  return _internal_last_trade_price();
}
inline void MarketDepthTrade::unsafe_arena_set_allocated_last_trade_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_price_);
  }
  _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketDepthTrade.last_trade_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepthTrade::release_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* released = _impl_.last_trade_price_;
  _impl_.last_trade_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketDepthTrade::unsafe_arena_release_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketDepthTrade.last_trade_price)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* temp = _impl_.last_trade_price_;
  _impl_.last_trade_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepthTrade::_internal_mutable_last_trade_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_trade_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.last_trade_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketDepthTrade::mutable_last_trade_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_last_trade_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketDepthTrade.last_trade_price)
  return _msg;
}
inline void MarketDepthTrade::set_allocated_last_trade_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_trade_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.last_trade_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketDepthTrade.last_trade_price)
}

// .t4proto.v1.common.MarketMode mode = 11;
inline void MarketDepthTrade::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::t4proto::v1::common::MarketMode MarketDepthTrade::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketDepthTrade.mode)
  return _internal_mode();
}
inline void MarketDepthTrade::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketDepthTrade.mode)
}
inline ::t4proto::v1::common::MarketMode MarketDepthTrade::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketDepthTrade::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// MarketHighLow

// string market_id = 1;
inline void MarketHighLow::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketHighLow::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketHighLow::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketHighLow.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketHighLow::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketHighLow.market_id)
  return _s;
}
inline const ::std::string& MarketHighLow::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketHighLow::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketHighLow::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketHighLow::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketHighLow.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketHighLow::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketHighLow.market_id)
}

// .t4proto.v1.common.Price open_price = 2;
inline bool MarketHighLow::has_open_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.open_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketHighLow::_internal_open_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.open_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketHighLow::open_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.open_price)
  return _internal_open_price();
}
inline void MarketHighLow::unsafe_arena_set_allocated_open_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_price_);
  }
  _impl_.open_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketHighLow.open_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::release_open_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* released = _impl_.open_price_;
  _impl_.open_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::unsafe_arena_release_open_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketHighLow.open_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* temp = _impl_.open_price_;
  _impl_.open_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::_internal_mutable_open_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.open_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.open_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::mutable_open_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_open_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketHighLow.open_price)
  return _msg;
}
inline void MarketHighLow::set_allocated_open_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.open_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketHighLow.open_price)
}

// .t4proto.v1.common.Price high_price = 3;
inline bool MarketHighLow::has_high_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.high_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketHighLow::_internal_high_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.high_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketHighLow::high_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.high_price)
  return _internal_high_price();
}
inline void MarketHighLow::unsafe_arena_set_allocated_high_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_price_);
  }
  _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketHighLow.high_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::release_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* released = _impl_.high_price_;
  _impl_.high_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::unsafe_arena_release_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketHighLow.high_price)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* temp = _impl_.high_price_;
  _impl_.high_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::_internal_mutable_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.high_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::mutable_high_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_high_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketHighLow.high_price)
  return _msg;
}
inline void MarketHighLow::set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketHighLow.high_price)
}

// .t4proto.v1.common.Price low_price = 4;
inline bool MarketHighLow::has_low_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.low_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketHighLow::_internal_low_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.low_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketHighLow::low_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.low_price)
  return _internal_low_price();
}
inline void MarketHighLow::unsafe_arena_set_allocated_low_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_price_);
  }
  _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketHighLow.low_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::release_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::t4proto::v1::common::Price* released = _impl_.low_price_;
  _impl_.low_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketHighLow::unsafe_arena_release_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketHighLow.low_price)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::t4proto::v1::common::Price* temp = _impl_.low_price_;
  _impl_.low_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::_internal_mutable_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.low_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.low_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketHighLow::mutable_low_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_low_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketHighLow.low_price)
  return _msg;
}
inline void MarketHighLow::set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketHighLow.low_price)
}

// int64 trade_date = 5;
inline void MarketHighLow::clear_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_date_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t MarketHighLow::trade_date() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.trade_date)
  return _internal_trade_date();
}
inline void MarketHighLow::set_trade_date(::int64_t value) {
  _internal_set_trade_date(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketHighLow.trade_date)
}
inline ::int64_t MarketHighLow::_internal_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trade_date_;
}
inline void MarketHighLow::_internal_set_trade_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trade_date_ = value;
}

// .google.protobuf.Timestamp time = 6;
inline bool MarketHighLow::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketHighLow::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketHighLow::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.time)
  return _internal_time();
}
inline void MarketHighLow::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketHighLow.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketHighLow::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketHighLow::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketHighLow.time)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketHighLow::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketHighLow::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketHighLow.time)
  return _msg;
}
inline void MarketHighLow::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketHighLow.time)
}

// bool delayed = 7;
inline void MarketHighLow::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool MarketHighLow::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketHighLow.delayed)
  return _internal_delayed();
}
inline void MarketHighLow::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketHighLow.delayed)
}
inline bool MarketHighLow::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketHighLow::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// -------------------------------------------------------------------

// MarketPriceLimits

// string market_id = 1;
inline void MarketPriceLimits::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketPriceLimits::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketPriceLimits.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketPriceLimits::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketPriceLimits.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketPriceLimits::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketPriceLimits.market_id)
  return _s;
}
inline const ::std::string& MarketPriceLimits::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketPriceLimits::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketPriceLimits::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketPriceLimits::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketPriceLimits.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketPriceLimits::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketPriceLimits.market_id)
}

// .t4proto.v1.common.Price high_price = 2;
inline bool MarketPriceLimits::has_high_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.high_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketPriceLimits::_internal_high_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.high_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketPriceLimits::high_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketPriceLimits.high_price)
  return _internal_high_price();
}
inline void MarketPriceLimits::unsafe_arena_set_allocated_high_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_price_);
  }
  _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketPriceLimits.high_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketPriceLimits::release_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* released = _impl_.high_price_;
  _impl_.high_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketPriceLimits::unsafe_arena_release_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketPriceLimits.high_price)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::t4proto::v1::common::Price* temp = _impl_.high_price_;
  _impl_.high_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketPriceLimits::_internal_mutable_high_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.high_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.high_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketPriceLimits::mutable_high_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_high_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketPriceLimits.high_price)
  return _msg;
}
inline void MarketPriceLimits::set_allocated_high_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.high_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.high_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketPriceLimits.high_price)
}

// .t4proto.v1.common.Price low_price = 3;
inline bool MarketPriceLimits::has_low_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.low_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketPriceLimits::_internal_low_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.low_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketPriceLimits::low_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketPriceLimits.low_price)
  return _internal_low_price();
}
inline void MarketPriceLimits::unsafe_arena_set_allocated_low_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_price_);
  }
  _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketPriceLimits.low_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketPriceLimits::release_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* released = _impl_.low_price_;
  _impl_.low_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketPriceLimits::unsafe_arena_release_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketPriceLimits.low_price)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::t4proto::v1::common::Price* temp = _impl_.low_price_;
  _impl_.low_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketPriceLimits::_internal_mutable_low_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.low_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.low_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketPriceLimits::mutable_low_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_low_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketPriceLimits.low_price)
  return _msg;
}
inline void MarketPriceLimits::set_allocated_low_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.low_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.low_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketPriceLimits.low_price)
}

// .google.protobuf.Timestamp time = 4;
inline bool MarketPriceLimits::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketPriceLimits::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketPriceLimits::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketPriceLimits.time)
  return _internal_time();
}
inline void MarketPriceLimits::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketPriceLimits.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketPriceLimits::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketPriceLimits::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketPriceLimits.time)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketPriceLimits::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketPriceLimits::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketPriceLimits.time)
  return _msg;
}
inline void MarketPriceLimits::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketPriceLimits.time)
}

// bool delayed = 5;
inline void MarketPriceLimits::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool MarketPriceLimits::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketPriceLimits.delayed)
  return _internal_delayed();
}
inline void MarketPriceLimits::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketPriceLimits.delayed)
}
inline bool MarketPriceLimits::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketPriceLimits::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// -------------------------------------------------------------------

// MarketSettlement

// string exchange_id = 1;
inline void MarketSettlement::clear_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketSettlement::exchange_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.exchange_id)
  return _internal_exchange_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketSettlement::set_exchange_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.exchange_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::mutable_exchange_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.exchange_id)
  return _s;
}
inline const ::std::string& MarketSettlement::_internal_exchange_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_id_.Get();
}
inline void MarketSettlement::_internal_set_exchange_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.exchange_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.exchange_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketSettlement::release_exchange_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.exchange_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.exchange_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketSettlement::set_allocated_exchange_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.exchange_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_id_.IsDefault()) {
    _impl_.exchange_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.exchange_id)
}

// string market_id = 2;
inline void MarketSettlement::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& MarketSettlement::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketSettlement::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.market_id)
  return _s;
}
inline const ::std::string& MarketSettlement::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketSettlement::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketSettlement::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.market_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketSettlement::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.market_id)
}

// bool delayed = 3;
inline void MarketSettlement::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline bool MarketSettlement::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.delayed)
  return _internal_delayed();
}
inline void MarketSettlement::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.delayed)
}
inline bool MarketSettlement::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketSettlement::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// .t4proto.v1.common.Price settlement_price = 4;
inline bool MarketSettlement::has_settlement_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settlement_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketSettlement::_internal_settlement_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.settlement_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketSettlement::settlement_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_price)
  return _internal_settlement_price();
}
inline void MarketSettlement::unsafe_arena_set_allocated_settlement_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_price_);
  }
  _impl_.settlement_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.settlement_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::release_settlement_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::t4proto::v1::common::Price* released = _impl_.settlement_price_;
  _impl_.settlement_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_settlement_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_price)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::t4proto::v1::common::Price* temp = _impl_.settlement_price_;
  _impl_.settlement_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settlement_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.settlement_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.settlement_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_settlement_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_price)
  return _msg;
}
inline void MarketSettlement::set_allocated_settlement_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.settlement_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_price)
}

// .google.protobuf.Timestamp settlement_time = 5;
inline bool MarketSettlement::has_settlement_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settlement_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_settlement_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.settlement_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::settlement_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_time)
  return _internal_settlement_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_settlement_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_time_);
  }
  _impl_.settlement_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.settlement_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_settlement_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.settlement_time_;
  _impl_.settlement_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_settlement_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_time)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.settlement_time_;
  _impl_.settlement_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settlement_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.settlement_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.settlement_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_settlement_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_settlement_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.settlement_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_time)
}

// .google.protobuf.Timestamp settlement_trade_date = 6;
inline bool MarketSettlement::has_settlement_trade_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settlement_trade_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_settlement_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.settlement_trade_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::settlement_trade_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_trade_date)
  return _internal_settlement_trade_date();
}
inline void MarketSettlement::unsafe_arena_set_allocated_settlement_trade_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_trade_date_);
  }
  _impl_.settlement_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.settlement_trade_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_settlement_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* released = _impl_.settlement_trade_date_;
  _impl_.settlement_trade_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_settlement_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_trade_date)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* temp = _impl_.settlement_trade_date_;
  _impl_.settlement_trade_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settlement_trade_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.settlement_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.settlement_trade_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_trade_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_settlement_trade_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_trade_date)
  return _msg;
}
inline void MarketSettlement::set_allocated_settlement_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_trade_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.settlement_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_trade_date)
}

// string settlement_held_price = 7;
inline void MarketSettlement::clear_settlement_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settlement_held_price_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& MarketSettlement::settlement_held_price() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_held_price)
  return _internal_settlement_held_price();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketSettlement::set_settlement_held_price(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.settlement_held_price_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.settlement_held_price)
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_held_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_settlement_held_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_held_price)
  return _s;
}
inline const ::std::string& MarketSettlement::_internal_settlement_held_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settlement_held_price_.Get();
}
inline void MarketSettlement::_internal_set_settlement_held_price(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.settlement_held_price_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.settlement_held_price_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketSettlement::release_settlement_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_held_price)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.settlement_held_price_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.settlement_held_price_.Set("", GetArena());
  }
  return released;
}
inline void MarketSettlement::set_allocated_settlement_held_price(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.settlement_held_price_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.settlement_held_price_.IsDefault()) {
    _impl_.settlement_held_price_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_held_price)
}

// .google.protobuf.Timestamp settlement_held_time = 8;
inline bool MarketSettlement::has_settlement_held_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settlement_held_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_settlement_held_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.settlement_held_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::settlement_held_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_held_time)
  return _internal_settlement_held_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_settlement_held_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_held_time_);
  }
  _impl_.settlement_held_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.settlement_held_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_settlement_held_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* released = _impl_.settlement_held_time_;
  _impl_.settlement_held_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_settlement_held_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_held_time)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* temp = _impl_.settlement_held_time_;
  _impl_.settlement_held_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_held_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settlement_held_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.settlement_held_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.settlement_held_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_held_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_settlement_held_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_held_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_settlement_held_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_held_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.settlement_held_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_held_time)
}

// .google.protobuf.Timestamp settlement_held_trade_date = 9;
inline bool MarketSettlement::has_settlement_held_trade_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.settlement_held_trade_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_settlement_held_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.settlement_held_trade_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::settlement_held_trade_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.settlement_held_trade_date)
  return _internal_settlement_held_trade_date();
}
inline void MarketSettlement::unsafe_arena_set_allocated_settlement_held_trade_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_held_trade_date_);
  }
  _impl_.settlement_held_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.settlement_held_trade_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_settlement_held_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::google::protobuf::Timestamp* released = _impl_.settlement_held_trade_date_;
  _impl_.settlement_held_trade_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_settlement_held_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.settlement_held_trade_date)

  _impl_._has_bits_[0] &= ~0x00000080u;
  ::google::protobuf::Timestamp* temp = _impl_.settlement_held_trade_date_;
  _impl_.settlement_held_trade_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_settlement_held_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.settlement_held_trade_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.settlement_held_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.settlement_held_trade_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_settlement_held_trade_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000080u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_settlement_held_trade_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.settlement_held_trade_date)
  return _msg;
}
inline void MarketSettlement::set_allocated_settlement_held_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.settlement_held_trade_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }

  _impl_.settlement_held_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.settlement_held_trade_date)
}

// .t4proto.v1.common.Price implied_price = 10;
inline bool MarketSettlement::has_implied_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.implied_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketSettlement::_internal_implied_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.implied_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketSettlement::implied_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.implied_price)
  return _internal_implied_price();
}
inline void MarketSettlement::unsafe_arena_set_allocated_implied_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_price_);
  }
  _impl_.implied_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.implied_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::release_implied_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::t4proto::v1::common::Price* released = _impl_.implied_price_;
  _impl_.implied_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_implied_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.implied_price)

  _impl_._has_bits_[0] &= ~0x00000100u;
  ::t4proto::v1::common::Price* temp = _impl_.implied_price_;
  _impl_.implied_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_implied_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.implied_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.implied_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.implied_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::mutable_implied_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000100u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_implied_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.implied_price)
  return _msg;
}
inline void MarketSettlement::set_allocated_implied_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000100u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000100u;
  }

  _impl_.implied_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.implied_price)
}

// .t4proto.v1.common.Price implied_held_price = 11;
inline bool MarketSettlement::has_implied_held_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.implied_held_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketSettlement::_internal_implied_held_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.implied_held_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketSettlement::implied_held_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.implied_held_price)
  return _internal_implied_held_price();
}
inline void MarketSettlement::unsafe_arena_set_allocated_implied_held_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_held_price_);
  }
  _impl_.implied_held_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.implied_held_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::release_implied_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::t4proto::v1::common::Price* released = _impl_.implied_held_price_;
  _impl_.implied_held_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_implied_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.implied_held_price)

  _impl_._has_bits_[0] &= ~0x00000200u;
  ::t4proto::v1::common::Price* temp = _impl_.implied_held_price_;
  _impl_.implied_held_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_implied_held_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.implied_held_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.implied_held_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.implied_held_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::mutable_implied_held_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000200u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_implied_held_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.implied_held_price)
  return _msg;
}
inline void MarketSettlement::set_allocated_implied_held_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_held_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000200u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000200u;
  }

  _impl_.implied_held_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.implied_held_price)
}

// .google.protobuf.Timestamp implied_time = 12;
inline bool MarketSettlement::has_implied_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.implied_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_implied_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.implied_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::implied_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.implied_time)
  return _internal_implied_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_implied_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_time_);
  }
  _impl_.implied_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.implied_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_implied_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::google::protobuf::Timestamp* released = _impl_.implied_time_;
  _impl_.implied_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_implied_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.implied_time)

  _impl_._has_bits_[0] &= ~0x00000400u;
  ::google::protobuf::Timestamp* temp = _impl_.implied_time_;
  _impl_.implied_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_implied_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.implied_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.implied_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.implied_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_implied_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000400u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_implied_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.implied_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_implied_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.implied_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000400u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000400u;
  }

  _impl_.implied_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.implied_time)
}

// int32 open_interest = 13;
inline void MarketSettlement::clear_open_interest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_interest_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline ::int32_t MarketSettlement::open_interest() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.open_interest)
  return _internal_open_interest();
}
inline void MarketSettlement::set_open_interest(::int32_t value) {
  _internal_set_open_interest(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.open_interest)
}
inline ::int32_t MarketSettlement::_internal_open_interest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.open_interest_;
}
inline void MarketSettlement::_internal_set_open_interest(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_interest_ = value;
}

// .google.protobuf.Timestamp open_interest_time = 14;
inline bool MarketSettlement::has_open_interest_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.open_interest_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_open_interest_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.open_interest_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::open_interest_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.open_interest_time)
  return _internal_open_interest_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_open_interest_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_interest_time_);
  }
  _impl_.open_interest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.open_interest_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_open_interest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::google::protobuf::Timestamp* released = _impl_.open_interest_time_;
  _impl_.open_interest_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_open_interest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.open_interest_time)

  _impl_._has_bits_[0] &= ~0x00000800u;
  ::google::protobuf::Timestamp* temp = _impl_.open_interest_time_;
  _impl_.open_interest_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_open_interest_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_interest_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.open_interest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.open_interest_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_open_interest_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000800u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_open_interest_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.open_interest_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_open_interest_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_interest_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000800u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000800u;
  }

  _impl_.open_interest_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.open_interest_time)
}

// .google.protobuf.Timestamp open_interest_trade_date = 15;
inline bool MarketSettlement::has_open_interest_trade_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.open_interest_trade_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_open_interest_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.open_interest_trade_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::open_interest_trade_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.open_interest_trade_date)
  return _internal_open_interest_trade_date();
}
inline void MarketSettlement::unsafe_arena_set_allocated_open_interest_trade_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_interest_trade_date_);
  }
  _impl_.open_interest_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.open_interest_trade_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_open_interest_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::google::protobuf::Timestamp* released = _impl_.open_interest_trade_date_;
  _impl_.open_interest_trade_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_open_interest_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.open_interest_trade_date)

  _impl_._has_bits_[0] &= ~0x00001000u;
  ::google::protobuf::Timestamp* temp = _impl_.open_interest_trade_date_;
  _impl_.open_interest_trade_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_open_interest_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_interest_trade_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.open_interest_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.open_interest_trade_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_open_interest_trade_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00001000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_open_interest_trade_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.open_interest_trade_date)
  return _msg;
}
inline void MarketSettlement::set_allocated_open_interest_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_interest_trade_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00001000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00001000u;
  }

  _impl_.open_interest_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.open_interest_trade_date)
}

// int32 cleared_volume = 16;
inline void MarketSettlement::clear_cleared_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cleared_volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline ::int32_t MarketSettlement::cleared_volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.cleared_volume)
  return _internal_cleared_volume();
}
inline void MarketSettlement::set_cleared_volume(::int32_t value) {
  _internal_set_cleared_volume(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSettlement.cleared_volume)
}
inline ::int32_t MarketSettlement::_internal_cleared_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cleared_volume_;
}
inline void MarketSettlement::_internal_set_cleared_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cleared_volume_ = value;
}

// .google.protobuf.Timestamp cleared_volume_time = 17;
inline bool MarketSettlement::has_cleared_volume_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cleared_volume_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_cleared_volume_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cleared_volume_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::cleared_volume_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.cleared_volume_time)
  return _internal_cleared_volume_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_cleared_volume_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cleared_volume_time_);
  }
  _impl_.cleared_volume_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.cleared_volume_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_cleared_volume_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::google::protobuf::Timestamp* released = _impl_.cleared_volume_time_;
  _impl_.cleared_volume_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_cleared_volume_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.cleared_volume_time)

  _impl_._has_bits_[0] &= ~0x00002000u;
  ::google::protobuf::Timestamp* temp = _impl_.cleared_volume_time_;
  _impl_.cleared_volume_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_cleared_volume_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cleared_volume_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cleared_volume_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cleared_volume_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_cleared_volume_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00002000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cleared_volume_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.cleared_volume_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_cleared_volume_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cleared_volume_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00002000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00002000u;
  }

  _impl_.cleared_volume_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.cleared_volume_time)
}

// .google.protobuf.Timestamp cleared_volume_trade_date = 18;
inline bool MarketSettlement::has_cleared_volume_trade_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cleared_volume_trade_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_cleared_volume_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.cleared_volume_trade_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::cleared_volume_trade_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.cleared_volume_trade_date)
  return _internal_cleared_volume_trade_date();
}
inline void MarketSettlement::unsafe_arena_set_allocated_cleared_volume_trade_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cleared_volume_trade_date_);
  }
  _impl_.cleared_volume_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.cleared_volume_trade_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_cleared_volume_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::google::protobuf::Timestamp* released = _impl_.cleared_volume_trade_date_;
  _impl_.cleared_volume_trade_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_cleared_volume_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.cleared_volume_trade_date)

  _impl_._has_bits_[0] &= ~0x00004000u;
  ::google::protobuf::Timestamp* temp = _impl_.cleared_volume_trade_date_;
  _impl_.cleared_volume_trade_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_cleared_volume_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cleared_volume_trade_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.cleared_volume_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.cleared_volume_trade_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_cleared_volume_trade_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00004000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_cleared_volume_trade_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.cleared_volume_trade_date)
  return _msg;
}
inline void MarketSettlement::set_allocated_cleared_volume_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cleared_volume_trade_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00004000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00004000u;
  }

  _impl_.cleared_volume_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.cleared_volume_trade_date)
}

// .t4proto.v1.common.Price vwap_price = 19;
inline bool MarketSettlement::has_vwap_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vwap_price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketSettlement::_internal_vwap_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.vwap_price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketSettlement::vwap_price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.vwap_price)
  return _internal_vwap_price();
}
inline void MarketSettlement::unsafe_arena_set_allocated_vwap_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_price_);
  }
  _impl_.vwap_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.vwap_price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::release_vwap_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::t4proto::v1::common::Price* released = _impl_.vwap_price_;
  _impl_.vwap_price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_vwap_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.vwap_price)

  _impl_._has_bits_[0] &= ~0x00008000u;
  ::t4proto::v1::common::Price* temp = _impl_.vwap_price_;
  _impl_.vwap_price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_vwap_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vwap_price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.vwap_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.vwap_price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketSettlement::mutable_vwap_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00008000u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_vwap_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.vwap_price)
  return _msg;
}
inline void MarketSettlement::set_allocated_vwap_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00008000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00008000u;
  }

  _impl_.vwap_price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.vwap_price)
}

// .google.protobuf.Timestamp vwap_time = 20;
inline bool MarketSettlement::has_vwap_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vwap_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_vwap_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.vwap_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::vwap_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.vwap_time)
  return _internal_vwap_time();
}
inline void MarketSettlement::unsafe_arena_set_allocated_vwap_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_time_);
  }
  _impl_.vwap_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.vwap_time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_vwap_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::google::protobuf::Timestamp* released = _impl_.vwap_time_;
  _impl_.vwap_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_vwap_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.vwap_time)

  _impl_._has_bits_[0] &= ~0x00010000u;
  ::google::protobuf::Timestamp* temp = _impl_.vwap_time_;
  _impl_.vwap_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_vwap_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vwap_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.vwap_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.vwap_time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_vwap_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00010000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_vwap_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.vwap_time)
  return _msg;
}
inline void MarketSettlement::set_allocated_vwap_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00010000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00010000u;
  }

  _impl_.vwap_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.vwap_time)
}

// .google.protobuf.Timestamp vwap_trade_date = 21;
inline bool MarketSettlement::has_vwap_trade_date() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vwap_trade_date_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketSettlement::_internal_vwap_trade_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.vwap_trade_date_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketSettlement::vwap_trade_date() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSettlement.vwap_trade_date)
  return _internal_vwap_trade_date();
}
inline void MarketSettlement::unsafe_arena_set_allocated_vwap_trade_date(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_trade_date_);
  }
  _impl_.vwap_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSettlement.vwap_trade_date)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::release_vwap_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::google::protobuf::Timestamp* released = _impl_.vwap_trade_date_;
  _impl_.vwap_trade_date_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketSettlement::unsafe_arena_release_vwap_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSettlement.vwap_trade_date)

  _impl_._has_bits_[0] &= ~0x00020000u;
  ::google::protobuf::Timestamp* temp = _impl_.vwap_trade_date_;
  _impl_.vwap_trade_date_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::_internal_mutable_vwap_trade_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vwap_trade_date_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.vwap_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.vwap_trade_date_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketSettlement::mutable_vwap_trade_date()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00020000u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_vwap_trade_date();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSettlement.vwap_trade_date)
  return _msg;
}
inline void MarketSettlement::set_allocated_vwap_trade_date(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vwap_trade_date_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00020000u;
  } else {
    _impl_._has_bits_[0] &= ~0x00020000u;
  }

  _impl_.vwap_trade_date_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSettlement.vwap_trade_date)
}

// -------------------------------------------------------------------

// MarketSnapshotMessage

// .t4proto.v1.market.MarketDepth market_depth = 3;
inline bool MarketSnapshotMessage::has_market_depth() const {
  return payload_case() == kMarketDepth;
}
inline bool MarketSnapshotMessage::_internal_has_market_depth() const {
  return payload_case() == kMarketDepth;
}
inline void MarketSnapshotMessage::set_has_market_depth() {
  _impl_._oneof_case_[0] = kMarketDepth;
}
inline void MarketSnapshotMessage::clear_market_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepth) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_);
    }
    clear_has_payload();
  }
}
inline ::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE MarketSnapshotMessage::release_market_depth() {
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshotMessage.market_depth)
  if (payload_case() == kMarketDepth) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketDepth*>(_impl_.payload_.market_depth_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.market_depth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::t4proto::v1::market::MarketDepth& MarketSnapshotMessage::_internal_market_depth() const {
  return payload_case() == kMarketDepth ? *reinterpret_cast<::t4proto::v1::market::MarketDepth*>(_impl_.payload_.market_depth_) : reinterpret_cast<::t4proto::v1::market::MarketDepth&>(::t4proto::v1::market::_MarketDepth_default_instance_);
}
inline const ::t4proto::v1::market::MarketDepth& MarketSnapshotMessage::market_depth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshotMessage.market_depth)
  return _internal_market_depth();
}
inline ::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE MarketSnapshotMessage::unsafe_arena_release_market_depth() {
  // @@protoc_insertion_point(field_unsafe_arena_release:t4proto.v1.market.MarketSnapshotMessage.market_depth)
  if (payload_case() == kMarketDepth) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketDepth*>(_impl_.payload_.market_depth_);
    _impl_.payload_.market_depth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MarketSnapshotMessage::unsafe_arena_set_allocated_market_depth(
    ::t4proto::v1::market::MarketDepth* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_market_depth();
    _impl_.payload_.market_depth_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSnapshotMessage.market_depth)
}
inline ::t4proto::v1::market::MarketDepth* PROTOBUF_NONNULL MarketSnapshotMessage::_internal_mutable_market_depth() {
  if (payload_case() != kMarketDepth) {
    clear_payload();
    set_has_market_depth();
    _impl_.payload_.market_depth_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketDepth>(GetArena()));
  }
  return reinterpret_cast<::t4proto::v1::market::MarketDepth*>(_impl_.payload_.market_depth_);
}
inline ::t4proto::v1::market::MarketDepth* PROTOBUF_NONNULL MarketSnapshotMessage::mutable_market_depth()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::t4proto::v1::market::MarketDepth* _msg = _internal_mutable_market_depth();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshotMessage.market_depth)
  return _msg;
}

// .t4proto.v1.market.MarketDepthTrade market_depth_trade = 4;
inline bool MarketSnapshotMessage::has_market_depth_trade() const {
  return payload_case() == kMarketDepthTrade;
}
inline bool MarketSnapshotMessage::_internal_has_market_depth_trade() const {
  return payload_case() == kMarketDepthTrade;
}
inline void MarketSnapshotMessage::set_has_market_depth_trade() {
  _impl_._oneof_case_[0] = kMarketDepthTrade;
}
inline void MarketSnapshotMessage::clear_market_depth_trade() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketDepthTrade) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_depth_trade_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_depth_trade_);
    }
    clear_has_payload();
  }
}
inline ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE MarketSnapshotMessage::release_market_depth_trade() {
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshotMessage.market_depth_trade)
  if (payload_case() == kMarketDepthTrade) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketDepthTrade*>(_impl_.payload_.market_depth_trade_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.market_depth_trade_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::t4proto::v1::market::MarketDepthTrade& MarketSnapshotMessage::_internal_market_depth_trade() const {
  return payload_case() == kMarketDepthTrade ? *reinterpret_cast<::t4proto::v1::market::MarketDepthTrade*>(_impl_.payload_.market_depth_trade_) : reinterpret_cast<::t4proto::v1::market::MarketDepthTrade&>(::t4proto::v1::market::_MarketDepthTrade_default_instance_);
}
inline const ::t4proto::v1::market::MarketDepthTrade& MarketSnapshotMessage::market_depth_trade() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshotMessage.market_depth_trade)
  return _internal_market_depth_trade();
}
inline ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE MarketSnapshotMessage::unsafe_arena_release_market_depth_trade() {
  // @@protoc_insertion_point(field_unsafe_arena_release:t4proto.v1.market.MarketSnapshotMessage.market_depth_trade)
  if (payload_case() == kMarketDepthTrade) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketDepthTrade*>(_impl_.payload_.market_depth_trade_);
    _impl_.payload_.market_depth_trade_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MarketSnapshotMessage::unsafe_arena_set_allocated_market_depth_trade(
    ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_market_depth_trade();
    _impl_.payload_.market_depth_trade_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSnapshotMessage.market_depth_trade)
}
inline ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NONNULL MarketSnapshotMessage::_internal_mutable_market_depth_trade() {
  if (payload_case() != kMarketDepthTrade) {
    clear_payload();
    set_has_market_depth_trade();
    _impl_.payload_.market_depth_trade_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketDepthTrade>(GetArena()));
  }
  return reinterpret_cast<::t4proto::v1::market::MarketDepthTrade*>(_impl_.payload_.market_depth_trade_);
}
inline ::t4proto::v1::market::MarketDepthTrade* PROTOBUF_NONNULL MarketSnapshotMessage::mutable_market_depth_trade()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::t4proto::v1::market::MarketDepthTrade* _msg = _internal_mutable_market_depth_trade();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshotMessage.market_depth_trade)
  return _msg;
}

// .t4proto.v1.market.MarketHighLow market_high_low = 5;
inline bool MarketSnapshotMessage::has_market_high_low() const {
  return payload_case() == kMarketHighLow;
}
inline bool MarketSnapshotMessage::_internal_has_market_high_low() const {
  return payload_case() == kMarketHighLow;
}
inline void MarketSnapshotMessage::set_has_market_high_low() {
  _impl_._oneof_case_[0] = kMarketHighLow;
}
inline void MarketSnapshotMessage::clear_market_high_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketHighLow) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_high_low_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_high_low_);
    }
    clear_has_payload();
  }
}
inline ::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE MarketSnapshotMessage::release_market_high_low() {
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshotMessage.market_high_low)
  if (payload_case() == kMarketHighLow) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketHighLow*>(_impl_.payload_.market_high_low_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.market_high_low_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::t4proto::v1::market::MarketHighLow& MarketSnapshotMessage::_internal_market_high_low() const {
  return payload_case() == kMarketHighLow ? *reinterpret_cast<::t4proto::v1::market::MarketHighLow*>(_impl_.payload_.market_high_low_) : reinterpret_cast<::t4proto::v1::market::MarketHighLow&>(::t4proto::v1::market::_MarketHighLow_default_instance_);
}
inline const ::t4proto::v1::market::MarketHighLow& MarketSnapshotMessage::market_high_low() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshotMessage.market_high_low)
  return _internal_market_high_low();
}
inline ::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE MarketSnapshotMessage::unsafe_arena_release_market_high_low() {
  // @@protoc_insertion_point(field_unsafe_arena_release:t4proto.v1.market.MarketSnapshotMessage.market_high_low)
  if (payload_case() == kMarketHighLow) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketHighLow*>(_impl_.payload_.market_high_low_);
    _impl_.payload_.market_high_low_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MarketSnapshotMessage::unsafe_arena_set_allocated_market_high_low(
    ::t4proto::v1::market::MarketHighLow* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_market_high_low();
    _impl_.payload_.market_high_low_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSnapshotMessage.market_high_low)
}
inline ::t4proto::v1::market::MarketHighLow* PROTOBUF_NONNULL MarketSnapshotMessage::_internal_mutable_market_high_low() {
  if (payload_case() != kMarketHighLow) {
    clear_payload();
    set_has_market_high_low();
    _impl_.payload_.market_high_low_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketHighLow>(GetArena()));
  }
  return reinterpret_cast<::t4proto::v1::market::MarketHighLow*>(_impl_.payload_.market_high_low_);
}
inline ::t4proto::v1::market::MarketHighLow* PROTOBUF_NONNULL MarketSnapshotMessage::mutable_market_high_low()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::t4proto::v1::market::MarketHighLow* _msg = _internal_mutable_market_high_low();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshotMessage.market_high_low)
  return _msg;
}

// .t4proto.v1.market.MarketPriceLimits market_price_limits = 6;
inline bool MarketSnapshotMessage::has_market_price_limits() const {
  return payload_case() == kMarketPriceLimits;
}
inline bool MarketSnapshotMessage::_internal_has_market_price_limits() const {
  return payload_case() == kMarketPriceLimits;
}
inline void MarketSnapshotMessage::set_has_market_price_limits() {
  _impl_._oneof_case_[0] = kMarketPriceLimits;
}
inline void MarketSnapshotMessage::clear_market_price_limits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketPriceLimits) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_price_limits_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_price_limits_);
    }
    clear_has_payload();
  }
}
inline ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE MarketSnapshotMessage::release_market_price_limits() {
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshotMessage.market_price_limits)
  if (payload_case() == kMarketPriceLimits) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketPriceLimits*>(_impl_.payload_.market_price_limits_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.market_price_limits_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::t4proto::v1::market::MarketPriceLimits& MarketSnapshotMessage::_internal_market_price_limits() const {
  return payload_case() == kMarketPriceLimits ? *reinterpret_cast<::t4proto::v1::market::MarketPriceLimits*>(_impl_.payload_.market_price_limits_) : reinterpret_cast<::t4proto::v1::market::MarketPriceLimits&>(::t4proto::v1::market::_MarketPriceLimits_default_instance_);
}
inline const ::t4proto::v1::market::MarketPriceLimits& MarketSnapshotMessage::market_price_limits() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshotMessage.market_price_limits)
  return _internal_market_price_limits();
}
inline ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE MarketSnapshotMessage::unsafe_arena_release_market_price_limits() {
  // @@protoc_insertion_point(field_unsafe_arena_release:t4proto.v1.market.MarketSnapshotMessage.market_price_limits)
  if (payload_case() == kMarketPriceLimits) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketPriceLimits*>(_impl_.payload_.market_price_limits_);
    _impl_.payload_.market_price_limits_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MarketSnapshotMessage::unsafe_arena_set_allocated_market_price_limits(
    ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_market_price_limits();
    _impl_.payload_.market_price_limits_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSnapshotMessage.market_price_limits)
}
inline ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NONNULL MarketSnapshotMessage::_internal_mutable_market_price_limits() {
  if (payload_case() != kMarketPriceLimits) {
    clear_payload();
    set_has_market_price_limits();
    _impl_.payload_.market_price_limits_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketPriceLimits>(GetArena()));
  }
  return reinterpret_cast<::t4proto::v1::market::MarketPriceLimits*>(_impl_.payload_.market_price_limits_);
}
inline ::t4proto::v1::market::MarketPriceLimits* PROTOBUF_NONNULL MarketSnapshotMessage::mutable_market_price_limits()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::t4proto::v1::market::MarketPriceLimits* _msg = _internal_mutable_market_price_limits();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshotMessage.market_price_limits)
  return _msg;
}

// .t4proto.v1.market.MarketSettlement market_settlement = 7;
inline bool MarketSnapshotMessage::has_market_settlement() const {
  return payload_case() == kMarketSettlement;
}
inline bool MarketSnapshotMessage::_internal_has_market_settlement() const {
  return payload_case() == kMarketSettlement;
}
inline void MarketSnapshotMessage::set_has_market_settlement() {
  _impl_._oneof_case_[0] = kMarketSettlement;
}
inline void MarketSnapshotMessage::clear_market_settlement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kMarketSettlement) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.market_settlement_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.market_settlement_);
    }
    clear_has_payload();
  }
}
inline ::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE MarketSnapshotMessage::release_market_settlement() {
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshotMessage.market_settlement)
  if (payload_case() == kMarketSettlement) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketSettlement*>(_impl_.payload_.market_settlement_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.payload_.market_settlement_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::t4proto::v1::market::MarketSettlement& MarketSnapshotMessage::_internal_market_settlement() const {
  return payload_case() == kMarketSettlement ? *reinterpret_cast<::t4proto::v1::market::MarketSettlement*>(_impl_.payload_.market_settlement_) : reinterpret_cast<::t4proto::v1::market::MarketSettlement&>(::t4proto::v1::market::_MarketSettlement_default_instance_);
}
inline const ::t4proto::v1::market::MarketSettlement& MarketSnapshotMessage::market_settlement() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshotMessage.market_settlement)
  return _internal_market_settlement();
}
inline ::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE MarketSnapshotMessage::unsafe_arena_release_market_settlement() {
  // @@protoc_insertion_point(field_unsafe_arena_release:t4proto.v1.market.MarketSnapshotMessage.market_settlement)
  if (payload_case() == kMarketSettlement) {
    clear_has_payload();
    auto* temp = reinterpret_cast<::t4proto::v1::market::MarketSettlement*>(_impl_.payload_.market_settlement_);
    _impl_.payload_.market_settlement_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MarketSnapshotMessage::unsafe_arena_set_allocated_market_settlement(
    ::t4proto::v1::market::MarketSettlement* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_payload();
  if (value) {
    set_has_market_settlement();
    _impl_.payload_.market_settlement_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketSnapshotMessage.market_settlement)
}
inline ::t4proto::v1::market::MarketSettlement* PROTOBUF_NONNULL MarketSnapshotMessage::_internal_mutable_market_settlement() {
  if (payload_case() != kMarketSettlement) {
    clear_payload();
    set_has_market_settlement();
    _impl_.payload_.market_settlement_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::market::MarketSettlement>(GetArena()));
  }
  return reinterpret_cast<::t4proto::v1::market::MarketSettlement*>(_impl_.payload_.market_settlement_);
}
inline ::t4proto::v1::market::MarketSettlement* PROTOBUF_NONNULL MarketSnapshotMessage::mutable_market_settlement()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::t4proto::v1::market::MarketSettlement* _msg = _internal_mutable_market_settlement();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshotMessage.market_settlement)
  return _msg;
}

inline bool MarketSnapshotMessage::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void MarketSnapshotMessage::clear_has_payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline MarketSnapshotMessage::PayloadCase MarketSnapshotMessage::payload_case() const {
  return MarketSnapshotMessage::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MarketSnapshot

// string market_id = 1;
inline void MarketSnapshot::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketSnapshot::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshot.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketSnapshot::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSnapshot.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketSnapshot::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshot.market_id)
  return _s;
}
inline const ::std::string& MarketSnapshot::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketSnapshot::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketSnapshot::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketSnapshot::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketSnapshot.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketSnapshot::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketSnapshot.market_id)
}

// .t4proto.v1.common.MarketMode mode = 2;
inline void MarketSnapshot::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::t4proto::v1::common::MarketMode MarketSnapshot::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshot.mode)
  return _internal_mode();
}
inline void MarketSnapshot::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSnapshot.mode)
}
inline ::t4proto::v1::common::MarketMode MarketSnapshot::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketSnapshot::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// bool due_to_connection = 3;
inline void MarketSnapshot::clear_due_to_connection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_connection_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool MarketSnapshot::due_to_connection() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshot.due_to_connection)
  return _internal_due_to_connection();
}
inline void MarketSnapshot::set_due_to_connection(bool value) {
  _internal_set_due_to_connection(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSnapshot.due_to_connection)
}
inline bool MarketSnapshot::_internal_due_to_connection() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.due_to_connection_;
}
inline void MarketSnapshot::_internal_set_due_to_connection(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.due_to_connection_ = value;
}

// bool delayed = 4;
inline void MarketSnapshot::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool MarketSnapshot::delayed() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshot.delayed)
  return _internal_delayed();
}
inline void MarketSnapshot::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketSnapshot.delayed)
}
inline bool MarketSnapshot::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MarketSnapshot::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// repeated .t4proto.v1.market.MarketSnapshotMessage messages = 5;
inline int MarketSnapshot::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int MarketSnapshot::messages_size() const {
  return _internal_messages_size();
}
inline void MarketSnapshot::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::t4proto::v1::market::MarketSnapshotMessage* PROTOBUF_NONNULL MarketSnapshot::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketSnapshot.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>* PROTOBUF_NONNULL MarketSnapshot::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketSnapshot.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::t4proto::v1::market::MarketSnapshotMessage& MarketSnapshot::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketSnapshot.messages)
  return _internal_messages().Get(index);
}
inline ::t4proto::v1::market::MarketSnapshotMessage* PROTOBUF_NONNULL MarketSnapshot::add_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketSnapshotMessage* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketSnapshot.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>& MarketSnapshot::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketSnapshot.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>&
MarketSnapshot::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketSnapshotMessage>* PROTOBUF_NONNULL
MarketSnapshot::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// -------------------------------------------------------------------

// MarketByOrderSnapshot_Order

// uint64 order_id = 1;
inline void MarketByOrderSnapshot_Order::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MarketByOrderSnapshot_Order::order_id() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.Order.order_id)
  return _internal_order_id();
}
inline void MarketByOrderSnapshot_Order::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.Order.order_id)
}
inline ::uint64_t MarketByOrderSnapshot_Order::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void MarketByOrderSnapshot_Order::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// .t4proto.v1.common.BidOffer bid_offer = 2;
inline void MarketByOrderSnapshot_Order::clear_bid_offer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_offer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::t4proto::v1::common::BidOffer MarketByOrderSnapshot_Order::bid_offer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.Order.bid_offer)
  return _internal_bid_offer();
}
inline void MarketByOrderSnapshot_Order::set_bid_offer(::t4proto::v1::common::BidOffer value) {
  _internal_set_bid_offer(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.Order.bid_offer)
}
inline ::t4proto::v1::common::BidOffer MarketByOrderSnapshot_Order::_internal_bid_offer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::BidOffer>(_impl_.bid_offer_);
}
inline void MarketByOrderSnapshot_Order::_internal_set_bid_offer(::t4proto::v1::common::BidOffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_offer_ = value;
}

// .t4proto.v1.common.Price price = 3;
inline bool MarketByOrderSnapshot_Order::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketByOrderSnapshot_Order::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketByOrderSnapshot_Order::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.Order.price)
  return _internal_price();
}
inline void MarketByOrderSnapshot_Order::unsafe_arena_set_allocated_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketByOrderSnapshot.Order.price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketByOrderSnapshot_Order::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketByOrderSnapshot_Order::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSnapshot.Order.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketByOrderSnapshot_Order::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketByOrderSnapshot_Order::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSnapshot.Order.price)
  return _msg;
}
inline void MarketByOrderSnapshot_Order::set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSnapshot.Order.price)
}

// int32 volume = 4;
inline void MarketByOrderSnapshot_Order::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t MarketByOrderSnapshot_Order::volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.Order.volume)
  return _internal_volume();
}
inline void MarketByOrderSnapshot_Order::set_volume(::int32_t value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.Order.volume)
}
inline ::int32_t MarketByOrderSnapshot_Order::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void MarketByOrderSnapshot_Order::_internal_set_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// uint64 priority = 5;
inline void MarketByOrderSnapshot_Order::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t MarketByOrderSnapshot_Order::priority() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.Order.priority)
  return _internal_priority();
}
inline void MarketByOrderSnapshot_Order::set_priority(::uint64_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.Order.priority)
}
inline ::uint64_t MarketByOrderSnapshot_Order::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void MarketByOrderSnapshot_Order::_internal_set_priority(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// MarketByOrderSnapshot

// string market_id = 1;
inline void MarketByOrderSnapshot::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketByOrderSnapshot::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderSnapshot::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSnapshot::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSnapshot.market_id)
  return _s;
}
inline const ::std::string& MarketByOrderSnapshot::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketByOrderSnapshot::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderSnapshot::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderSnapshot::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSnapshot.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderSnapshot::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSnapshot.market_id)
}

// .google.protobuf.Timestamp time = 2;
inline bool MarketByOrderSnapshot::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketByOrderSnapshot::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketByOrderSnapshot::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.time)
  return _internal_time();
}
inline void MarketByOrderSnapshot::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketByOrderSnapshot.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderSnapshot::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderSnapshot::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderSnapshot.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderSnapshot::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderSnapshot::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSnapshot.time)
  return _msg;
}
inline void MarketByOrderSnapshot::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderSnapshot.time)
}

// .t4proto.v1.common.MarketMode mode = 3;
inline void MarketByOrderSnapshot::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::t4proto::v1::common::MarketMode MarketByOrderSnapshot::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.mode)
  return _internal_mode();
}
inline void MarketByOrderSnapshot::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.mode)
}
inline ::t4proto::v1::common::MarketMode MarketByOrderSnapshot::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketByOrderSnapshot::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// uint64 last_sequence = 4;
inline void MarketByOrderSnapshot::clear_last_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_sequence_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MarketByOrderSnapshot::last_sequence() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.last_sequence)
  return _internal_last_sequence();
}
inline void MarketByOrderSnapshot::set_last_sequence(::uint64_t value) {
  _internal_set_last_sequence(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderSnapshot.last_sequence)
}
inline ::uint64_t MarketByOrderSnapshot::_internal_last_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_sequence_;
}
inline void MarketByOrderSnapshot::_internal_set_last_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_sequence_ = value;
}

// repeated .t4proto.v1.market.MarketByOrderSnapshot.Order orders = 5;
inline int MarketByOrderSnapshot::_internal_orders_size() const {
  return _internal_orders().size();
}
inline int MarketByOrderSnapshot::orders_size() const {
  return _internal_orders_size();
}
inline void MarketByOrderSnapshot::clear_orders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orders_.Clear();
}
inline ::t4proto::v1::market::MarketByOrderSnapshot_Order* PROTOBUF_NONNULL MarketByOrderSnapshot::mutable_orders(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderSnapshot.orders)
  return _internal_mutable_orders()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>* PROTOBUF_NONNULL MarketByOrderSnapshot::mutable_orders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketByOrderSnapshot.orders)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_orders();
}
inline const ::t4proto::v1::market::MarketByOrderSnapshot_Order& MarketByOrderSnapshot::orders(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderSnapshot.orders)
  return _internal_orders().Get(index);
}
inline ::t4proto::v1::market::MarketByOrderSnapshot_Order* PROTOBUF_NONNULL MarketByOrderSnapshot::add_orders()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketByOrderSnapshot_Order* _add = _internal_mutable_orders()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketByOrderSnapshot.orders)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>& MarketByOrderSnapshot::orders() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketByOrderSnapshot.orders)
  return _internal_orders();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>&
MarketByOrderSnapshot::_internal_orders() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orders_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderSnapshot_Order>* PROTOBUF_NONNULL
MarketByOrderSnapshot::_internal_mutable_orders() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.orders_;
}

// -------------------------------------------------------------------

// MarketByOrderUpdate_Update

// .t4proto.v1.market.MarketByOrderUpdate.UpdateType update_type = 1;
inline void MarketByOrderUpdate_Update::clear_update_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::t4proto::v1::market::MarketByOrderUpdate_UpdateType MarketByOrderUpdate_Update::update_type() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.update_type)
  return _internal_update_type();
}
inline void MarketByOrderUpdate_Update::set_update_type(::t4proto::v1::market::MarketByOrderUpdate_UpdateType value) {
  _internal_set_update_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.Update.update_type)
}
inline ::t4proto::v1::market::MarketByOrderUpdate_UpdateType MarketByOrderUpdate_Update::_internal_update_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::market::MarketByOrderUpdate_UpdateType>(_impl_.update_type_);
}
inline void MarketByOrderUpdate_Update::_internal_set_update_type(::t4proto::v1::market::MarketByOrderUpdate_UpdateType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_type_ = value;
}

// uint64 order_id = 2;
inline void MarketByOrderUpdate_Update::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MarketByOrderUpdate_Update::order_id() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.order_id)
  return _internal_order_id();
}
inline void MarketByOrderUpdate_Update::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.Update.order_id)
}
inline ::uint64_t MarketByOrderUpdate_Update::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void MarketByOrderUpdate_Update::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// .t4proto.v1.common.BidOffer bid_offer = 3;
inline void MarketByOrderUpdate_Update::clear_bid_offer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_offer_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::t4proto::v1::common::BidOffer MarketByOrderUpdate_Update::bid_offer() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.bid_offer)
  return _internal_bid_offer();
}
inline void MarketByOrderUpdate_Update::set_bid_offer(::t4proto::v1::common::BidOffer value) {
  _internal_set_bid_offer(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.Update.bid_offer)
}
inline ::t4proto::v1::common::BidOffer MarketByOrderUpdate_Update::_internal_bid_offer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::BidOffer>(_impl_.bid_offer_);
}
inline void MarketByOrderUpdate_Update::_internal_set_bid_offer(::t4proto::v1::common::BidOffer value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_offer_ = value;
}

// .t4proto.v1.common.Price price = 4;
inline bool MarketByOrderUpdate_Update::has_price() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.price_ != nullptr);
  return value;
}
inline const ::t4proto::v1::common::Price& MarketByOrderUpdate_Update::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::t4proto::v1::common::Price* p = _impl_.price_;
  return p != nullptr ? *p : reinterpret_cast<const ::t4proto::v1::common::Price&>(::t4proto::v1::common::_Price_default_instance_);
}
inline const ::t4proto::v1::common::Price& MarketByOrderUpdate_Update::price() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.price)
  return _internal_price();
}
inline void MarketByOrderUpdate_Update::unsafe_arena_set_allocated_price(
    ::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }
  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketByOrderUpdate.Update.price)
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketByOrderUpdate_Update::release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* released = _impl_.price_;
  _impl_.price_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NULLABLE MarketByOrderUpdate_Update::unsafe_arena_release_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderUpdate.Update.price)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::t4proto::v1::common::Price* temp = _impl_.price_;
  _impl_.price_ = nullptr;
  return temp;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketByOrderUpdate_Update::_internal_mutable_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.price_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::t4proto::v1::common::Price>(GetArena());
    _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(p);
  }
  return _impl_.price_;
}
inline ::t4proto::v1::common::Price* PROTOBUF_NONNULL MarketByOrderUpdate_Update::mutable_price()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::t4proto::v1::common::Price* _msg = _internal_mutable_price();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderUpdate.Update.price)
  return _msg;
}
inline void MarketByOrderUpdate_Update::set_allocated_price(::t4proto::v1::common::Price* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.price_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.price_ = reinterpret_cast<::t4proto::v1::common::Price*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderUpdate.Update.price)
}

// int32 volume = 5;
inline void MarketByOrderUpdate_Update::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t MarketByOrderUpdate_Update::volume() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.volume)
  return _internal_volume();
}
inline void MarketByOrderUpdate_Update::set_volume(::int32_t value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.Update.volume)
}
inline ::int32_t MarketByOrderUpdate_Update::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void MarketByOrderUpdate_Update::_internal_set_volume(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// uint64 priority = 6;
inline void MarketByOrderUpdate_Update::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint64_t MarketByOrderUpdate_Update::priority() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.Update.priority)
  return _internal_priority();
}
inline void MarketByOrderUpdate_Update::set_priority(::uint64_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.Update.priority)
}
inline ::uint64_t MarketByOrderUpdate_Update::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void MarketByOrderUpdate_Update::_internal_set_priority(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// -------------------------------------------------------------------

// MarketByOrderUpdate

// string market_id = 1;
inline void MarketByOrderUpdate::clear_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.market_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& MarketByOrderUpdate::market_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.market_id)
  return _internal_market_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void MarketByOrderUpdate::set_market_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.market_id)
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderUpdate::mutable_market_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_market_id();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderUpdate.market_id)
  return _s;
}
inline const ::std::string& MarketByOrderUpdate::_internal_market_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.market_id_.Get();
}
inline void MarketByOrderUpdate::_internal_set_market_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.market_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL MarketByOrderUpdate::_internal_mutable_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.market_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE MarketByOrderUpdate::release_market_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderUpdate.market_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.market_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.market_id_.Set("", GetArena());
  }
  return released;
}
inline void MarketByOrderUpdate::set_allocated_market_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.market_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.market_id_.IsDefault()) {
    _impl_.market_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderUpdate.market_id)
}

// .google.protobuf.Timestamp time = 2;
inline bool MarketByOrderUpdate::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MarketByOrderUpdate::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MarketByOrderUpdate::time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.time)
  return _internal_time();
}
inline void MarketByOrderUpdate::unsafe_arena_set_allocated_time(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }
  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:t4proto.v1.market.MarketByOrderUpdate.time)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderUpdate::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.time_;
  _impl_.time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE MarketByOrderUpdate::unsafe_arena_release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:t4proto.v1.market.MarketByOrderUpdate.time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.time_;
  _impl_.time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderUpdate::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.time_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL MarketByOrderUpdate::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderUpdate.time)
  return _msg;
}
inline void MarketByOrderUpdate::set_allocated_time(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:t4proto.v1.market.MarketByOrderUpdate.time)
}

// .t4proto.v1.common.MarketMode mode = 3;
inline void MarketByOrderUpdate::clear_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::t4proto::v1::common::MarketMode MarketByOrderUpdate::mode() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.mode)
  return _internal_mode();
}
inline void MarketByOrderUpdate::set_mode(::t4proto::v1::common::MarketMode value) {
  _internal_set_mode(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.mode)
}
inline ::t4proto::v1::common::MarketMode MarketByOrderUpdate::_internal_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::t4proto::v1::common::MarketMode>(_impl_.mode_);
}
inline void MarketByOrderUpdate::_internal_set_mode(::t4proto::v1::common::MarketMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mode_ = value;
}

// uint64 sequence = 4;
inline void MarketByOrderUpdate::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint64_t MarketByOrderUpdate::sequence() const {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.sequence)
  return _internal_sequence();
}
inline void MarketByOrderUpdate::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:t4proto.v1.market.MarketByOrderUpdate.sequence)
}
inline ::uint64_t MarketByOrderUpdate::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void MarketByOrderUpdate::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// repeated .t4proto.v1.market.MarketByOrderUpdate.Update updates = 5;
inline int MarketByOrderUpdate::_internal_updates_size() const {
  return _internal_updates().size();
}
inline int MarketByOrderUpdate::updates_size() const {
  return _internal_updates_size();
}
inline void MarketByOrderUpdate::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updates_.Clear();
}
inline ::t4proto::v1::market::MarketByOrderUpdate_Update* PROTOBUF_NONNULL MarketByOrderUpdate::mutable_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:t4proto.v1.market.MarketByOrderUpdate.updates)
  return _internal_mutable_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>* PROTOBUF_NONNULL MarketByOrderUpdate::mutable_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:t4proto.v1.market.MarketByOrderUpdate.updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_updates();
}
inline const ::t4proto::v1::market::MarketByOrderUpdate_Update& MarketByOrderUpdate::updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:t4proto.v1.market.MarketByOrderUpdate.updates)
  return _internal_updates().Get(index);
}
inline ::t4proto::v1::market::MarketByOrderUpdate_Update* PROTOBUF_NONNULL MarketByOrderUpdate::add_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::t4proto::v1::market::MarketByOrderUpdate_Update* _add = _internal_mutable_updates()->Add();
  // @@protoc_insertion_point(field_add:t4proto.v1.market.MarketByOrderUpdate.updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>& MarketByOrderUpdate::updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:t4proto.v1.market.MarketByOrderUpdate.updates)
  return _internal_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>&
MarketByOrderUpdate::_internal_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updates_;
}
inline ::google::protobuf::RepeatedPtrField<::t4proto::v1::market::MarketByOrderUpdate_Update>* PROTOBUF_NONNULL
MarketByOrderUpdate::_internal_mutable_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.updates_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace market
}  // namespace v1
}  // namespace t4proto


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::t4proto::v1::market::MarketByOrderUpdate_UpdateType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::t4proto::v1::market::MarketByOrderUpdate_UpdateType>() {
  return ::t4proto::v1::market::MarketByOrderUpdate_UpdateType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // t4_2fv1_2fmarket_2fmarket_2eproto_2epb_2eh
